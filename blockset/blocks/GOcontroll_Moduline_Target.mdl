# MathWorks OPC Text Package
Model {
  Version  23.2
  Description "Simulink model saved in R2023b"
}
__MWOPC_PACKAGE_BEGIN__ R2023b
__MWOPC_PART_BEGIN__ /[Content_Types].xml
<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<Types xmlns="http://schemas.openxmlformats.org/package/2006/content-types">
  <Default ContentType="application/vnd.mathworks.matlab.mxarray+binary" Extension="mxarray"/>
  <Default ContentType="application/vnd.openxmlformats-package.relationships+xml" Extension="rels"/>
  <Default ContentType="image/svg+xml" Extension="svg"/>
  <Default ContentType="application/vnd.mathworks.simulink.mdl+xml" Extension="xml"/>
  <Override ContentType="application/vnd.openxmlformats-package.core-properties+xml" PartName="/metadata/coreProperties.xml"/>
  <Override ContentType="application/vnd.mathworks.package.coreProperties+xml" PartName="/metadata/mwcoreProperties.xml"/>
  <Override ContentType="application/vnd.mathworks.package.corePropertiesExtension+xml" PartName="/metadata/mwcorePropertiesExtension.xml"/>
  <Override ContentType="application/vnd.mathworks.package.corePropertiesReleaseInfo+xml" PartName="/metadata/mwcorePropertiesReleaseInfo.xml"/>
  <Override ContentType="application/vnd.mathworks.simulink.configSet+xml" PartName="/simulink/configSet0.xml"/>
  <Override ContentType="application/vnd.mathworks.simulink.configSetInfo+xml" PartName="/simulink/configSetInfo.xml"/>
  <Override ContentType="application/vnd.mathworks.simulink.libraryBrowserRepository+xml" PartName="/simulink/libraryBrowser/slLibraryBrowser.xml"/>
  <Override ContentType="application/vnd.mathworks.simulink.mf0+xml" PartName="/simulink/modelDictionary.xml"/>
  <Override ContentType="application/vnd.mathworks.simulink.blockDiagram+xml" PartName="/simulink/windowsInfo.xml"/>
</Types>

__MWOPC_PART_BEGIN__ /_rels/.rels
<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<Relationships xmlns="http://schemas.openxmlformats.org/package/2006/relationships">
  <Relationship Id="blockDiagram" Target="simulink/blockdiagram.xml" Type="http://schemas.mathworks.com/simulink/2010/relationships/blockDiagram"/>
  <Relationship Id="blockDiagramDefaults" Target="simulink/bddefaults.xml" Type="http://schemas.mathworks.com/simulink/2017/relationships/blockDiagramDefaults"/>
  <Relationship Id="configSetInfo" Target="simulink/configSetInfo.xml" Type="http://schemas.mathworks.com/simulink/2014/relationships/configSetInfo"/>
  <Relationship Id="modelDictionary" Target="simulink/modelDictionary.xml" Type="http://schemas.mathworks.com/simulinkModel/2016/relationships/modelDictionary"/>
  <Relationship Id="rId1" Target="metadata/mwcoreProperties.xml" Type="http://schemas.mathworks.com/package/2012/relationships/coreProperties"/>
  <Relationship Id="rId2" Target="metadata/mwcorePropertiesExtension.xml" Type="http://schemas.mathworks.com/package/2014/relationships/corePropertiesExtension"/>
  <Relationship Id="rId3" Target="metadata/mwcorePropertiesReleaseInfo.xml" Type="http://schemas.mathworks.com/package/2019/relationships/corePropertiesReleaseInfo"/>
  <Relationship Id="rId4" Target="metadata/coreProperties.xml" Type="http://schemas.openxmlformats.org/package/2006/relationships/metadata/core-properties"/>
</Relationships>

__MWOPC_PART_BEGIN__ /metadata/coreProperties.xml
<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<cp:coreProperties xmlns:cp="http://schemas.openxmlformats.org/package/2006/metadata/core-properties" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:dcmitype="http://purl.org/dc/dcmitype/" xmlns:dcterms="http://purl.org/dc/terms/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <cp:category>library</cp:category>
  <dcterms:created xsi:type="dcterms:W3CDTF">2009-09-22T11:41:27Z</dcterms:created>
  <dc:creator>HANcoder</dc:creator>
  <dc:description></dc:description>
  <cp:lastModifiedBy>maud</cp:lastModifiedBy>
  <dcterms:modified xsi:type="dcterms:W3CDTF">2024-07-25T12:37:25Z</dcterms:modified>
  <cp:revision>0.33</cp:revision>
  <cp:version>R2023b</cp:version>
</cp:coreProperties>

__MWOPC_PART_BEGIN__ /metadata/mwcoreProperties.xml
<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<mwcoreProperties xmlns="http://schemas.mathworks.com/package/2012/coreProperties">
  <contentType>application/vnd.mathworks.simulink.model</contentType>
  <contentTypeFriendlyName>Simulink Model</contentTypeFriendlyName>
  <matlabRelease>R2023b</matlabRelease>
</mwcoreProperties>

__MWOPC_PART_BEGIN__ /metadata/mwcorePropertiesExtension.xml
<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<mwcoreProperties xmlns="http://schemas.mathworks.com/package/2014/corePropertiesExtension">
  <uuid>66c89207-1586-4c2a-9a17-eac522598489</uuid>
</mwcoreProperties>

__MWOPC_PART_BEGIN__ /metadata/mwcorePropertiesReleaseInfo.xml
<?xml version="1.0" encoding="UTF-8"?>
<!-- Version information for MathWorks R2023b Release -->
<MathWorks_version_info>
  <version>23.2.0.2599560</version>
  <release>R2023b</release>
  <description>Update 8</description>
  <date>Apr 29 2024</date>
  <checksum>3871550127</checksum>
</MathWorks_version_info>

__MWOPC_PART_BEGIN__ /simulink/_rels/blockdiagram.xml.rels
<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<Relationships xmlns="http://schemas.openxmlformats.org/package/2006/relationships">
  <Relationship Id="LibraryBase_bd" Target="bdmxdata/LibraryBase_bd.mxarray" Type="http://schemas.mathworks.com/simulinkModel/2015/relationships/modelMxArray"/>
  <Relationship Id="UserData_4193" Target="bdmxdata/UserData_4193.mxarray" Type="http://schemas.mathworks.com/simulinkModel/2015/relationships/modelUserData"/>
  <Relationship Id="UserData_4194" Target="bdmxdata/UserData_4194.mxarray" Type="http://schemas.mathworks.com/simulinkModel/2015/relationships/modelUserData"/>
  <Relationship Id="UserData_4224" Target="bdmxdata/UserData_4224.mxarray" Type="http://schemas.mathworks.com/simulinkModel/2015/relationships/modelUserData"/>
  <Relationship Id="UserData_4225" Target="bdmxdata/UserData_4225.mxarray" Type="http://schemas.mathworks.com/simulinkModel/2015/relationships/modelUserData"/>
  <Relationship Id="slLibraryBrowser" Target="libraryBrowser/slLibraryBrowser.xml" Type="http://schemas.mathworks.com/simulink/2015/relationships/slLibraryBrowser"/>
  <Relationship Id="system_root" Target="systems/system_root.xml" Type="http://schemas.mathworks.com/simulink/2010/relationships/system"/>
  <Relationship Id="windowsInfo" Target="windowsInfo.xml" Type="http://schemas.mathworks.com/simulinkModel/2019/relationships/windowsInfo"/>
</Relationships>

__MWOPC_PART_BEGIN__ /simulink/_rels/configSetInfo.xml.rels
<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<Relationships xmlns="http://schemas.openxmlformats.org/package/2006/relationships">
  <Relationship Id="configSet0" Target="configSet0.xml" Type="http://schemas.mathworks.com/simulink/2014/relationships/configSet"/>
</Relationships>

__MWOPC_PART_BEGIN__ /simulink/bddefaults.xml
<?xml version="1.0" encoding="utf-8"?>
<BlockDiagramDefaults>
  <SystemDefaults>
    <P Name="PaperType">A4</P>
    <P Name="PaperUnits">centimeters</P>
    <P Name="TiledPaperMargins">[1.270000, 1.270000, 1.270000, 1.270000]</P>
  </SystemDefaults>
  <AnnotationDefaults>
    <P Name="HorizontalAlignment">center</P>
    <P Name="VerticalAlignment">middle</P>
  </AnnotationDefaults>
  <MaskDefaults SelfModifiable="off">
    <Display IconFrame="on" IconOpaque="opaque" RunInitForIconRedraw="analyze" IconRotate="none" PortRotate="default" IconUnits="autoscale"/>
    <MaskParameter Evaluate="on" Tunable="on" NeverSave="off" Internal="off" ReadOnly="off" Enabled="on" Visible="on" ToolTip="on"/>
    <DialogControl>
      <ControlOptions Visible="on" Enabled="on" Row="new" HorizontalStretch="on" PromptLocation="top" Orientation="horizontal" Scale="linear" TextType="Plain Text" Expand="off" ShowFilter="on" ShowParameterName="on" WordWrap="on" AlignPrompts="off"/>
    </DialogControl>
  </MaskDefaults>
</BlockDiagramDefaults>

__MWOPC_PART_BEGIN__ /simulink/bdmxdata/LibraryBase_bd.mxarray BASE64
AAFJTQAAAAAOAAAAMAAAAAYAAAAIAAAABAAAAAAAAAAFAAAACAAAAAEAAAADAAAAAQAAAAAAAAAQ
AAMAAHx8AA
__MWOPC_PART_BEGIN__ /simulink/bdmxdata/UserData_4193.mxarray BASE64
AAFJTQAAAAAOAAAAgAEAAAYAAAAIAAAAAgAAAAAAAAAFAAAACAAAAAEAAAABAAAAAQAAAAAAAAAF
AAQAEAAAAAEAAABAAAAAQmxvY2tzZXRWZXJzaW9uAFRhcmdldAAAAAAAAAAAAABEZXZpY2UAAAAA
AAAAAAAAQmxvY2tUeXBlAAAAAAAAAA4AAAAwAAAABgAAAAgAAAAEAAAAAAAAAAUAAAAIAAAAAQAA
AAMAAAABAAAAAAAAABAAAwAxLjIADgAAADgAAAAGAAAACAAAAAQAAAAAAAAABQAAAAgAAAABAAAA
BQAAAAEAAAAAAAAAEAAAAAUAAABMaW51eAAAAA4AAABAAAAABgAAAAgAAAAEAAAAAAAAAAUAAAAI
AAAAAQAAAAoAAAABAAAAAAAAABAAAAAKAAAAR09jb250cm9sbAAAAAAAAA4AAABAAAAABgAAAAgA
AAAEAAAAAAAAAAUAAAAIAAAAAQAAAAwAAAABAAAAAAAAABAAAAAMAAAARW5jbG9zdXJlTGVkAAAA
AA
__MWOPC_PART_BEGIN__ /simulink/bdmxdata/UserData_4194.mxarray BASE64
AAFJTQAAAAAOAAAAgAEAAAYAAAAIAAAAAgAAAAAAAAAFAAAACAAAAAEAAAABAAAAAQAAAAAAAAAF
AAQAEAAAAAEAAABAAAAAQmxvY2tzZXRWZXJzaW9uAFRhcmdldAAAAAAAAAAAAABEZXZpY2UAAAAA
AAAAAAAAQmxvY2tUeXBlAAAAAAAAAA4AAAAwAAAABgAAAAgAAAAEAAAAAAAAAAUAAAAIAAAAAQAA
AAMAAAABAAAAAAAAABAAAwAxLjIADgAAADgAAAAGAAAACAAAAAQAAAAAAAAABQAAAAgAAAABAAAA
BQAAAAEAAAAAAAAAEAAAAAUAAABMaW51eAAAAA4AAABAAAAABgAAAAgAAAAEAAAAAAAAAAUAAAAI
AAAAAQAAAAoAAAABAAAAAAAAABAAAAAKAAAAR09jb250cm9sbAAAAAAAAA4AAABAAAAABgAAAAgA
AAAEAAAAAAAAAAUAAAAIAAAAAQAAAAwAAAABAAAAAAAAABAAAAAMAAAARW5jbG9zdXJlTGVkAAAA
AA
__MWOPC_PART_BEGIN__ /simulink/bdmxdata/UserData_4224.mxarray BASE64
AAFJTQAAAAAOAAAAgAEAAAYAAAAIAAAAAgAAAAAAAAAFAAAACAAAAAEAAAABAAAAAQAAAAAAAAAF
AAQAEAAAAAEAAABAAAAAQmxvY2tzZXRWZXJzaW9uAFRhcmdldAAAAAAAAAAAAABEZXZpY2UAAAAA
AAAAAAAAQmxvY2tUeXBlAAAAAAAAAA4AAAAwAAAABgAAAAgAAAAEAAAAAAAAAAUAAAAIAAAAAQAA
AAMAAAABAAAAAAAAABAAAwAxLjIADgAAADgAAAAGAAAACAAAAAQAAAAAAAAABQAAAAgAAAABAAAA
BQAAAAEAAAAAAAAAEAAAAAUAAABMaW51eAAAAA4AAABAAAAABgAAAAgAAAAEAAAAAAAAAAUAAAAI
AAAAAQAAAAoAAAABAAAAAAAAABAAAAAKAAAAR09jb250cm9sbAAAAAAAAA4AAABAAAAABgAAAAgA
AAAEAAAAAAAAAAUAAAAIAAAAAQAAAAwAAAABAAAAAAAAABAAAAAMAAAARW5jbG9zdXJlTGVkAAAA
AA
__MWOPC_PART_BEGIN__ /simulink/bdmxdata/UserData_4225.mxarray BASE64
AAFJTQAAAAAOAAAAgAEAAAYAAAAIAAAAAgAAAAAAAAAFAAAACAAAAAEAAAABAAAAAQAAAAAAAAAF
AAQAEAAAAAEAAABAAAAAQmxvY2tzZXRWZXJzaW9uAFRhcmdldAAAAAAAAAAAAABEZXZpY2UAAAAA
AAAAAAAAQmxvY2tUeXBlAAAAAAAAAA4AAAAwAAAABgAAAAgAAAAEAAAAAAAAAAUAAAAIAAAAAQAA
AAMAAAABAAAAAAAAABAAAwAxLjIADgAAADgAAAAGAAAACAAAAAQAAAAAAAAABQAAAAgAAAABAAAA
BQAAAAEAAAAAAAAAEAAAAAUAAABMaW51eAAAAA4AAABAAAAABgAAAAgAAAAEAAAAAAAAAAUAAAAI
AAAAAQAAAAoAAAABAAAAAAAAABAAAAAKAAAAR09jb250cm9sbAAAAAAAAA4AAABAAAAABgAAAAgA
AAAEAAAAAAAAAAUAAAAIAAAAAQAAAAwAAAABAAAAAAAAABAAAAAMAAAARW5jbG9zdXJlTGVkAAAA
AA
__MWOPC_PART_BEGIN__ /simulink/blockdiagram.xml
<?xml version="1.0" encoding="utf-8"?>
<ModelInformation Version="1.0">
  <Library>
    <P Name="ModelUUID">c7188431-661f-4953-8b5a-169b375ff17e</P>
    <P Name="PreLoadFcn">compile_gocontroll_mex;</P>
    <P Name="LibraryType">BlockLibrary</P>
    <P Name="LibraryBase" Ref="bdmxdata:LibraryBase_bd"/>
    <P Name="LockLinksToLibrary">on</P>
    <P Name="LastSavedArchitecture">glnxa64</P>
    <P Name="HideAutomaticNames">off</P>
    <ConfigManagerSettings>
      <P Name="ModifiedByFormat">%&lt;Auto&gt;</P>
      <P Name="ModifiedDateFormat">%&lt;Auto&gt;</P>
      <P Name="ModifiedHistory">

















la_obwlf -- Thu Sep 01 12:12:55 2016 -- Version 0.33






la_obwlf -- Thu Sep 01 09:23:34 2016 -- Version 0.33
changed the version in the Base Sample Time block



la_obwlf -- Tue Aug 30 15:48:17 2016 -- Version 0.33





</P>
      <P Name="ModelVersionFormat">0.33</P>
    </ConfigManagerSettings>
    <EditorSettings>
      <P Name="LibraryLinkDisplay">all</P>
      <P Name="BlockDescriptionStringDataTip">on</P>
      <P Name="BrowserShowLibraryLinks">on</P>
      <P Name="BrowserLookUnderMasks">on</P>
      <P Name="MultithreadedSim">on</P>
    </EditorSettings>
    <SimulationSettings>
      <P Name="SimulationMode">normal</P>
    </SimulationSettings>
    <EngineSettings>
      <P Name="ConfigurableSubsystemUsage">warning</P>
    </EngineSettings>
    <System Ref="system_root"/>
  </Library>
</ModelInformation>

__MWOPC_PART_BEGIN__ /simulink/configSet0.xml
<?xml version="1.0" encoding="utf-8"?>
<ConfigSet>
  <Object Version="23.1.0" ClassName="Simulink.ConfigSet">
    <P Name="DisabledProps" Class="double">[]</P>
    <P Name="Description"/>
    <Array PropName="Components" Type="Handle" Dimension="1*10">
      <Object ObjectID="2" Version="23.1.0" ClassName="Simulink.SolverCC">
        <P Name="DisabledProps" Class="double">[]</P>
        <P Name="Description"/>
        <P Name="Components" Class="double">[]</P>
        <P Name="StartTime">0.0</P>
        <P Name="StopTime">10.0</P>
        <P Name="AbsTol">auto</P>
        <P Name="AutoScaleAbsTol">on</P>
        <P Name="FixedStep">auto</P>
        <P Name="InitialStep">auto</P>
        <P Name="MaxOrder">5</P>
        <P Name="ZcThreshold">auto</P>
        <P Name="ConsecutiveZCsStepRelTol">10*128*eps</P>
        <P Name="MaxConsecutiveZCs">1000</P>
        <P Name="ExtrapolationOrder">4</P>
        <P Name="NumberNewtonIterations">1</P>
        <P Name="MaxStep">auto</P>
        <P Name="MinStep">auto</P>
        <P Name="MaxConsecutiveMinStep">1</P>
        <P Name="RelTol">1e-3</P>
        <P Name="EnableMultiTasking">on</P>
        <P Name="AllowMultiTaskInputOutput">off</P>
        <P Name="ConcurrentTasks">off</P>
        <P Name="SolverName">ode45</P>
        <P Name="SolverJacobianMethodControl">auto</P>
        <P Name="DaesscMode">auto</P>
        <P Name="ShapePreserveControl">DisableAll</P>
        <P Name="ZeroCrossControl">UseLocalSettings</P>
        <P Name="ZeroCrossAlgorithm">Nonadaptive</P>
        <P Name="AlgebraicLoopSolver">TrustRegion</P>
        <P Name="SolverInfoToggleStatus">off</P>
        <P Name="IsAutoAppliedInSIP">off</P>
        <P Name="SolverResetMethod">Fast</P>
        <P Name="PositivePriorityOrder">off</P>
        <P Name="AutoInsertRateTranBlk">off</P>
        <P Name="SampleTimeConstraint">Unconstrained</P>
        <P Name="InsertRTBMode">Whenever possible</P>
        <P Name="SampleTimeProperty" Class="double">[]</P>
        <P Name="DecoupledContinuousIntegration">off</P>
        <P Name="MinimalZcImpactIntegration">off</P>
        <P Name="ODENIntegrationMethod">ode3</P>
        <P Name="EnableFixedStepZeroCrossing">off</P>
        <P Name="MaxZcPerStep">2</P>
        <P Name="MaxZcBracketingIterations">10</P>
      </Object>
      <Object ObjectID="3" Version="23.1.0" ClassName="Simulink.DataIOCC">
        <P Name="DisabledProps" Class="double">[]</P>
        <P Name="Description"/>
        <P Name="Components" Class="double">[]</P>
        <P Name="Decimation">1</P>
        <P Name="ExternalInput">[t, u]</P>
        <P Name="FinalStateName">xFinal</P>
        <P Name="InitialState">xInitial</P>
        <P Name="LimitDataPoints">on</P>
        <P Name="MaxDataPoints">1000</P>
        <P Name="LoadExternalInput">off</P>
        <P Name="LoadInitialState">off</P>
        <P Name="SaveFinalState">off</P>
        <P Name="SaveOperatingPoint">off</P>
        <P Name="SaveFormat">Array</P>
        <P Name="SignalLoggingSaveFormat">ModelDataLogs</P>
        <P Name="SaveOutput">on</P>
        <P Name="SaveState">off</P>
        <P Name="SignalLogging">on</P>
        <P Name="DSMLogging">on</P>
        <P Name="StreamToWks">on</P>
        <P Name="InspectSignalLogs">off</P>
        <P Name="VisualizeSimOutput">on</P>
        <P Name="StreamToWorkspace">off</P>
        <P Name="StreamVariableName">streamout</P>
        <P Name="SaveTime">on</P>
        <P Name="ReturnWorkspaceOutputs">off</P>
        <P Name="StateSaveName">xout</P>
        <P Name="TimeSaveName">tout</P>
        <P Name="OutputSaveName">yout</P>
        <P Name="SignalLoggingName">logsout</P>
        <P Name="DSMLoggingName">dsmout</P>
        <P Name="OutputOption">RefineOutputTimes</P>
        <P Name="OutputTimes">[]</P>
        <P Name="ReturnWorkspaceOutputsName">out</P>
        <P Name="Refine">1</P>
        <P Name="LoggingToFile">off</P>
        <P Name="DatasetSignalFormat">timeseries</P>
        <P Name="LoggingFileName">out.mat</P>
        <P Name="LoggingIntervals">[-inf, inf]</P>
      </Object>
      <Object ObjectID="4" Version="23.1.0" ClassName="Simulink.OptimizationCC">
        <Array PropName="DisabledProps" Type="Cell" Dimension="1*10">
          <Cell Class="char">ZeroExternalMemoryAtStartup</Cell>
          <Cell Class="char">ZeroInternalMemoryAtStartup</Cell>
          <Cell Class="char">OptimizeModelRefInitCode</Cell>
          <Cell Class="char">NoFixptDivByZeroProtection</Cell>
          <Cell Class="char">BooleansAsBitfields</Cell>
          <Cell Class="char">PassReuseOutputArgsAs</Cell>
          <Cell Class="char">PassReuseOutputArgsThreshold</Cell>
          <Cell Class="char">UseSpecifiedMinMax</Cell>
          <Cell Class="char">EfficientTunableParamExpr</Cell>
          <Cell Class="char">RemoveLocalVariableInitialization</Cell>
        </Array>
        <P Name="Description"/>
        <P Name="Components" Class="double">[]</P>
        <P Name="BlockReduction">on</P>
        <P Name="BooleanDataType">on</P>
        <P Name="ConditionallyExecuteInputs">on</P>
        <P Name="DefaultParameterBehavior">Tunable</P>
        <P Name="UseDivisionForNetSlopeComputation">off</P>
        <P Name="GainParamInheritBuiltInType">off</P>
        <P Name="UseFloatMulNetSlope">off</P>
        <P Name="InheritOutputTypeSmallerThanSingle">off</P>
        <P Name="DefaultUnderspecifiedDataType">double</P>
        <P Name="UseSpecifiedMinMax">off</P>
        <P Name="InlineInvariantSignals">off</P>
        <P Name="OptimizeBlockIOStorage">on</P>
        <P Name="BufferReuse">on</P>
        <P Name="ReuseModelBlockBuffer">on</P>
        <P Name="EnhancedBackFolding">off</P>
        <P Name="CachingGlobalReferences">off</P>
        <P Name="GlobalBufferReuse">on</P>
        <P Name="StrengthReduction">off</P>
        <P Name="AdvancedOptControl"/>
        <P Name="ExpressionFolding">on</P>
        <P Name="BooleansAsBitfields">off</P>
        <P Name="BitfieldContainerType">uint_T</P>
        <P Name="BitwiseOrLogicalOp">Same as modeled</P>
        <P Name="EnableMemcpy">on</P>
        <P Name="MemcpyThreshold">64</P>
        <P Name="PassReuseOutputArgsAs">Structure reference</P>
        <P Name="PassReuseOutputArgsThreshold">12</P>
        <P Name="ExpressionDepthLimit">2147483647</P>
        <P Name="LocalBlockOutputs">on</P>
        <P Name="RollThreshold">5</P>
        <P Name="StateBitsets">off</P>
        <P Name="DataBitsets">off</P>
        <P Name="ActiveStateOutputEnumStorageType">Native Integer</P>
        <P Name="ZeroExternalMemoryAtStartup">on</P>
        <P Name="ZeroInternalMemoryAtStartup">on</P>
        <P Name="InitFltsAndDblsToZero">off</P>
        <P Name="NoFixptDivByZeroProtection">off</P>
        <P Name="EfficientFloat2IntCast">off</P>
        <P Name="EfficientMapNaN2IntZero">on</P>
        <P Name="LifeSpan">inf</P>
        <P Name="ClockResolution">-1</P>
        <P Name="MaxStackSize">Inherit from target</P>
        <P Name="BufferReusableBoundary">on</P>
        <P Name="RemoveLocalVariableInitialization">on</P>
        <P Name="SimCompilerOptimization">off</P>
        <P Name="AccelVerboseBuild">off</P>
        <P Name="OptimizeBlockOrder">off</P>
        <P Name="OptimizeDataStoreBuffers">on</P>
        <P Name="BusAssignmentInplaceUpdate">on</P>
        <P Name="DifferentSizesBufferReuse">off</P>
        <P Name="UseRowMajorAlgorithm">off</P>
        <P Name="OptimizationLevel">level2</P>
        <P Name="OptimizationPriority">Balanced</P>
        <P Name="OptimizationCustomize">on</P>
        <P Name="LabelGuidedReuse">off</P>
        <P Name="MultiThreadedLoops">off</P>
        <P Name="DenormalBehavior">GradualUnderflow</P>
        <P Name="EfficientTunableParamExpr">off</P>
      </Object>
      <Object ObjectID="5" Version="23.1.0" ClassName="Simulink.DebuggingCC">
        <Array PropName="DisabledProps" Type="Cell" Dimension="1*1">
          <Cell Class="char">UseOnlyExistingSharedCode</Cell>
        </Array>
        <P Name="Description"/>
        <P Name="Components" Class="double">[]</P>
        <P Name="RTPrefix">error</P>
        <P Name="ConsistencyChecking">none</P>
        <P Name="ArrayBoundsChecking">none</P>
        <P Name="SignalInfNanChecking">none</P>
        <P Name="StringTruncationChecking">error</P>
        <P Name="SignalRangeChecking">none</P>
        <P Name="ReadBeforeWriteMsg">UseLocalSettings</P>
        <P Name="WriteAfterWriteMsg">UseLocalSettings</P>
        <P Name="WriteAfterReadMsg">UseLocalSettings</P>
        <P Name="AlgebraicLoopMsg">warning</P>
        <P Name="ArtificialAlgebraicLoopMsg">warning</P>
        <P Name="SaveWithDisabledLinksMsg">warning</P>
        <P Name="SaveWithParameterizedLinksMsg">warning</P>
        <P Name="CheckSSInitialOutputMsg">on</P>
        <P Name="UnderspecifiedInitializationDetection">Classic</P>
        <P Name="MergeDetectMultiDrivingBlocksExec">none</P>
        <P Name="CheckExecutionContextPreStartOutputMsg">off</P>
        <P Name="SignalResolutionControl">UseLocalSettings</P>
        <P Name="BlockPriorityViolationMsg">warning</P>
        <P Name="MinStepSizeMsg">warning</P>
        <P Name="TimeAdjustmentMsg">none</P>
        <P Name="MaxConsecutiveZCsMsg">error</P>
        <P Name="MaskedZcDiagnostic">warning</P>
        <P Name="IgnoredZcDiagnostic">warning</P>
        <P Name="SolverPrmCheckMsg">warning</P>
        <P Name="InheritedTsInSrcMsg">warning</P>
        <P Name="MultiTaskDSMMsg">error</P>
        <P Name="MultiTaskCondExecSysMsg">error</P>
        <P Name="MultiTaskRateTransMsg">error</P>
        <P Name="SingleTaskRateTransMsg">none</P>
        <P Name="TasksWithSamePriorityMsg">warning</P>
        <P Name="ExportedTasksRateTransMsg">none</P>
        <P Name="SigSpecEnsureSampleTimeMsg">warning</P>
        <P Name="CheckMatrixSingularityMsg">none</P>
        <P Name="IntegerOverflowMsg">warning</P>
        <P Name="Int32ToFloatConvMsg">warning</P>
        <P Name="ParameterDowncastMsg">error</P>
        <P Name="ParameterOverflowMsg">error</P>
        <P Name="ParameterUnderflowMsg">none</P>
        <P Name="ParameterPrecisionLossMsg">warning</P>
        <P Name="ParameterTunabilityLossMsg">warning</P>
        <P Name="FixptConstUnderflowMsg">none</P>
        <P Name="FixptConstOverflowMsg">none</P>
        <P Name="FixptConstPrecisionLossMsg">none</P>
        <P Name="UnderSpecifiedDataTypeMsg">none</P>
        <P Name="UnnecessaryDatatypeConvMsg">none</P>
        <P Name="VectorMatrixConversionMsg">none</P>
        <P Name="FcnCallInpInsideContextMsg">warning</P>
        <P Name="SignalLabelMismatchMsg">none</P>
        <P Name="UnconnectedInputMsg">warning</P>
        <P Name="UnconnectedOutputMsg">warning</P>
        <P Name="UnconnectedLineMsg">warning</P>
        <P Name="UseOnlyExistingSharedCode">error</P>
        <P Name="SFcnCompatibilityMsg">none</P>
        <P Name="FrameProcessingCompatibilityMsg">error</P>
        <P Name="UniqueDataStoreMsg">none</P>
        <P Name="BusObjectLabelMismatch">warning</P>
        <P Name="RootOutportRequireBusObject">warning</P>
        <P Name="AssertControl">UseLocalSettings</P>
        <P Name="AllowSymbolicDim">on</P>
        <P Name="RowMajorDimensionSupport">off</P>
        <P Name="ModelReferenceIOMsg">none</P>
        <P Name="ModelReferenceMultiInstanceNormalModeStructChecksumCheck">error</P>
        <P Name="ModelReferenceVersionMismatchMessage">none</P>
        <P Name="ModelReferenceIOMismatchMessage">none</P>
        <P Name="UnknownTsInhSupMsg">warning</P>
        <P Name="ModelReferenceDataLoggingMessage">warning</P>
        <P Name="ModelReferenceNoExplicitFinalValueMsg">none</P>
        <P Name="ModelReferenceSymbolNameMessage">warning</P>
        <P Name="ModelReferenceExtraNoncontSigs">error</P>
        <P Name="StateNameClashWarn">warning</P>
        <P Name="OperatingPointInterfaceChecksumMismatchMsg">warning</P>
        <P Name="NonCurrentReleaseOperatingPointMsg">error</P>
        <P Name="PregeneratedLibrarySubsystemCodeDiagnostic">warning</P>
        <P Name="SubsystemReferenceDiagnosticForUnitTest">error</P>
        <P Name="MatchCodeGenerationContextForUpdateDiagram">none</P>
        <P Name="InitInArrayFormatMsg">warning</P>
        <P Name="StrictBusMsg">ErrorLevel1</P>
        <P Name="BusNameAdapt">WarnAndRepair</P>
        <P Name="NonBusSignalsTreatedAsBus">none</P>
        <P Name="SymbolicDimMinMaxWarning">warning</P>
        <P Name="LossOfSymbolicDimsSimulationWarning">warning</P>
        <P Name="LossOfSymbolicDimsCodeGenerationWarning">error</P>
        <P Name="SymbolicDimsDataTypeCodeGenerationDiagnostic">error</P>
        <P Name="BlockIODiagnostic">none</P>
        <P Name="SFUnusedDataAndEventsDiag">warning</P>
        <P Name="SFUnexpectedBacktrackingDiag">warning</P>
        <P Name="SFInvalidInputDataAccessInChartInitDiag">warning</P>
        <P Name="SFNoUnconditionalDefaultTransitionDiag">warning</P>
        <P Name="SFTransitionOutsideNaturalParentDiag">warning</P>
        <P Name="SFUnreachableExecutionPathDiag">warning</P>
        <P Name="SFUndirectedBroadcastEventsDiag">warning</P>
        <P Name="SFTransitionActionBeforeConditionDiag">warning</P>
        <P Name="SFOutputUsedAsStateInMooreChartDiag">error</P>
        <P Name="SFTemporalDelaySmallerThanSampleTimeDiag">warning</P>
        <P Name="SFSelfTransitionDiag">warning</P>
        <P Name="SFExecutionAtInitializationDiag">none</P>
        <P Name="IntegerSaturationMsg">warning</P>
        <P Name="AllowedUnitSystems">all</P>
        <P Name="UnitsInconsistencyMsg">warning</P>
        <P Name="AllowAutomaticUnitConversions">on</P>
        <P Name="RCSCRenamedMsg">warning</P>
        <P Name="RCSCObservableMsg">warning</P>
        <P Name="ForceCombineOutputUpdateInSim">off</P>
        <P Name="UnitDatabase"/>
        <P Name="UnderSpecifiedDimensionMsg">none</P>
        <P Name="DebugExecutionForFMUViaOutOfProcess">off</P>
        <P Name="ArithmeticOperatorsInVariantConditions">warning</P>
        <P Name="VariantConditionMismatch">none</P>
        <P Name="InheritVATfromSVC">warning</P>
        <P Name="VariantConfigNotUsedByTopModel">warning</P>
        <P Name="ParamWriterValidationControl">UseLocalSettings</P>
      </Object>
      <Object ObjectID="6" Version="23.1.0" ClassName="Simulink.HardwareCC">
        <P Name="DisabledProps" Class="double">[]</P>
        <P Name="Description"/>
        <P Name="Components" Class="double">[]</P>
        <P Name="ProdBitPerChar">8</P>
        <P Name="ProdBitPerShort">16</P>
        <P Name="ProdBitPerInt">32</P>
        <P Name="ProdBitPerLong">32</P>
        <P Name="ProdBitPerLongLong">64</P>
        <P Name="ProdBitPerFloat">32</P>
        <P Name="ProdBitPerDouble">64</P>
        <P Name="ProdBitPerPointer">32</P>
        <P Name="ProdBitPerSizeT">32</P>
        <P Name="ProdBitPerPtrDiffT">32</P>
        <P Name="ProdLargestAtomicInteger">Char</P>
        <P Name="ProdLargestAtomicFloat">None</P>
        <P Name="ProdIntDivRoundTo">Undefined</P>
        <P Name="ProdEndianess">Unspecified</P>
        <P Name="ProdWordSize">32</P>
        <P Name="ProdShiftRightIntArith">on</P>
        <P Name="ProdLongLongMode">off</P>
        <P Name="ProdHWDeviceType">32-bit Generic</P>
        <P Name="TargetBitPerChar">8</P>
        <P Name="TargetBitPerShort">16</P>
        <P Name="TargetBitPerInt">32</P>
        <P Name="TargetBitPerLong">32</P>
        <P Name="TargetBitPerLongLong">64</P>
        <P Name="TargetBitPerFloat">32</P>
        <P Name="TargetBitPerDouble">64</P>
        <P Name="TargetBitPerPointer">32</P>
        <P Name="TargetBitPerSizeT">32</P>
        <P Name="TargetBitPerPtrDiffT">32</P>
        <P Name="TargetLargestAtomicInteger">Char</P>
        <P Name="TargetLargestAtomicFloat">None</P>
        <P Name="TargetShiftRightIntArith">on</P>
        <P Name="TargetLongLongMode">off</P>
        <P Name="TargetIntDivRoundTo">Undefined</P>
        <P Name="TargetEndianess">Unspecified</P>
        <P Name="TargetWordSize">32</P>
        <P Name="TargetPreprocMaxBitsSint">32</P>
        <P Name="TargetPreprocMaxBitsUint">32</P>
        <P Name="TargetHWDeviceType">Specified</P>
        <P Name="TargetUnknown">off</P>
        <P Name="ProdEqTarget">on</P>
        <P Name="UseEmbeddedCoderFeatures">on</P>
        <P Name="UseSimulinkCoderFeatures">on</P>
        <P Name="HardwareBoardFeatureSet">EmbeddedCoderHSP</P>
      </Object>
      <Object ObjectID="7" Version="23.1.0" ClassName="Simulink.ModelReferenceCC">
        <P Name="DisabledProps" Class="double">[]</P>
        <P Name="Description"/>
        <P Name="Components" Class="double">[]</P>
        <P Name="UpdateModelReferenceTargets">IfOutOfDateOrStructuralChange</P>
        <P Name="EnableRefExpFcnMdlSchedulingChecks">on</P>
        <P Name="CheckModelReferenceTargetMessage">error</P>
        <P Name="EnableParallelModelReferenceBuilds">off</P>
        <P Name="ParallelModelReferenceErrorOnInvalidPool">on</P>
        <P Name="ParallelModelReferenceMATLABWorkerInit">None</P>
        <P Name="ModelReferenceNumInstancesAllowed">Multi</P>
        <P Name="PropagateVarSize">Infer from blocks in model</P>
        <P Name="ModelDependencies"/>
        <P Name="ModelReferencePassRootInputsByReference">on</P>
        <P Name="ModelReferenceMinAlgLoopOccurrences">off</P>
        <P Name="PropagateSignalLabelsOutOfModel">off</P>
        <P Name="SupportModelReferenceSimTargetCustomCode">off</P>
        <P Name="UseModelRefSolver">off</P>
      </Object>
      <Object ObjectID="8" Version="23.1.0" ClassName="Simulink.SFSimCC">
        <P Name="DisabledProps" Class="double">[]</P>
        <P Name="Description"/>
        <P Name="Components" Class="double">[]</P>
        <P Name="SimCustomSourceCode"/>
        <P Name="SimCustomHeaderCode"/>
        <P Name="SimCustomInitializer"/>
        <P Name="SimCustomTerminator"/>
        <P Name="SimReservedNameArray" Class="double">[]</P>
        <P Name="SimUserSources"/>
        <P Name="SimUserIncludeDirs"/>
        <P Name="SimUserLibraries"/>
        <P Name="SimUserDefines"/>
        <P Name="SimCustomCompilerFlags"/>
        <P Name="SimCustomLinkerFlags"/>
        <P Name="SFSimEcho">on</P>
        <P Name="SimCtrlC">on</P>
        <P Name="SimIntegrity">on</P>
        <P Name="SimUseLocalCustomCode">off</P>
        <P Name="SimParseCustomCode">on</P>
        <P Name="SimAnalyzeCustomCode">off</P>
        <P Name="SimDebugExecutionForCustomCode">off</P>
        <P Name="SimGenImportedTypeDefs">off</P>
        <P Name="ModelFunctionsGlobalVisibility">on</P>
        <P Name="CompileTimeRecursionLimit">50</P>
        <P Name="EnableRuntimeRecursion">on</P>
        <P Name="EnableImplicitExpansion">on</P>
        <P Name="MATLABDynamicMemAlloc">on</P>
        <P Name="MATLABDynamicMemAllocThreshold">65536</P>
        <P Name="LegacyBehaviorForPersistentVarInContinuousTime">off</P>
        <P Name="CustomCodeFunctionArrayLayout" Class="double">[]</P>
        <P Name="DefaultCustomCodeFunctionArrayLayout">NotSpecified</P>
        <P Name="CustomCodeUndefinedFunction">UseInterfaceOnly</P>
        <P Name="CustomCodeGlobalsAsFunctionIO">off</P>
        <P Name="DefaultCustomCodeDeterministicFunctions">None</P>
        <P Name="CustomCodeDeterministicFunctions"/>
        <P Name="SimHardwareAcceleration">generic</P>
        <P Name="SimTargetLang">C</P>
        <P Name="GPUAcceleration">off</P>
        <P Name="SimGPUMallocThreshold">200</P>
        <P Name="SimGPUStackLimitPerThread">1024</P>
        <P Name="SimGPUErrorChecks">off</P>
        <P Name="SimGPUCustomComputeCapability"/>
        <P Name="SimGPUCompilerFlags"/>
        <P Name="SimDLTargetLibrary">mkl-dnn</P>
        <P Name="SimDLAutoTuning">on</P>
      </Object>
      <Object BackupClass="Simulink.RTWCC" ObjectID="9" Version="23.1.0" ClassName="Simulink.RTWCC">
        <Array PropName="DisabledProps" Type="Cell" Dimension="1*18">
          <Cell Class="char">IncludeHyperlinkInReport</Cell>
          <Cell Class="char">GenerateTraceInfo</Cell>
          <Cell Class="char">GenerateTraceReport</Cell>
          <Cell Class="char">GenerateTraceReportSl</Cell>
          <Cell Class="char">GenerateTraceReportSf</Cell>
          <Cell Class="char">GenerateTraceReportEml</Cell>
          <Cell Class="char">PortableWordSizes</Cell>
          <Cell Class="char">GenerateWebview</Cell>
          <Cell Class="char">GenerateCodeMetricsReport</Cell>
          <Cell Class="char">GenerateCodeReplacementReport</Cell>
          <Cell Class="char">GenerateMissedCodeReplacementReport</Cell>
          <Cell Class="char">GenerateErtSFunction</Cell>
          <Cell Class="char">CreateSILPILBlock</Cell>
          <Cell Class="char">CodeProfilingInstrumentation</Cell>
          <Cell Class="char">DataTypeReplacement</Cell>
          <Cell Class="char">HalideCodeGeneration</Cell>
          <Cell Class="char">CodeStackProfiling</Cell>
          <Cell Class="char">EmbeddedCoderDictionary</Cell>
        </Array>
        <P Name="Description"/>
        <P Name="SystemTargetFile">grt.tlc</P>
        <P Name="EmbeddedCoderDictionary"/>
        <P Name="HardwareBoard">None</P>
        <P Name="ShowCustomHardwareApp">off</P>
        <P Name="ShowEmbeddedHardwareApp">off</P>
        <P Name="TLCOptions"/>
        <P Name="GenCodeOnly">off</P>
        <P Name="MakeCommand">make_rtw</P>
        <P Name="GenerateMakefile">on</P>
        <P Name="PackageGeneratedCodeAndArtifacts">off</P>
        <P Name="PackageName"/>
        <P Name="TemplateMakefile">grt_default_tmf</P>
        <P Name="PostCodeGenCommand"/>
        <P Name="GenerateReport">off</P>
        <P Name="RTWVerbose">on</P>
        <P Name="RetainRTWFile">off</P>
        <P Name="RTWBuildHooks" Class="double">[]</P>
        <P Name="ProfileTLC">off</P>
        <P Name="TLCDebug">off</P>
        <P Name="TLCCoverage">off</P>
        <P Name="TLCAssert">off</P>
        <P Name="BuiltinFFTWCallback">off</P>
        <P Name="RTWUseLocalCustomCode">off</P>
        <P Name="RTWUseSimCustomCode">off</P>
        <P Name="CustomSourceCode"/>
        <P Name="CustomHeaderCode"/>
        <P Name="CustomInclude"/>
        <P Name="CustomSource"/>
        <P Name="CustomLibrary"/>
        <P Name="CustomDefine"/>
        <P Name="CustomBLASCallback"/>
        <P Name="CustomLAPACKCallback"/>
        <P Name="CustomFFTCallback"/>
        <P Name="CustomInitializer"/>
        <P Name="CustomTerminator"/>
        <P Name="Toolchain">Automatically locate an installed toolchain</P>
        <P Name="BuildConfiguration">Faster Builds</P>
        <P Name="CustomToolchainOptions" Class="double">[]</P>
        <P Name="IncludeHyperlinkInReport">off</P>
        <P Name="LaunchReport">off</P>
        <P Name="PortableWordSizes">off</P>
        <P Name="CreateSILPILBlock">None</P>
        <P Name="CodeExecutionProfiling">off</P>
        <P Name="CodeExecutionProfileVariable">executionProfile</P>
        <P Name="CodeProfilingSaveOptions">SummaryOnly</P>
        <P Name="CodeProfilingInstrumentation">off</P>
        <P Name="CodeStackProfiling">off</P>
        <P Name="CodeStackProfileVariable">stackProfile</P>
        <P Name="SILPILDebugging">off</P>
        <P Name="DataTypeReplacement">CoderTypedefs</P>
        <P Name="CoderTypedefsCompatibility">off</P>
        <P Name="TargetLang">C</P>
        <P Name="GenerateGPUCode">None</P>
        <P Name="HalideCodeGeneration">off</P>
        <P Name="IncludeBusHierarchyInRTWFileBlockHierarchyMap">off</P>
        <P Name="GenerateTraceInfo">off</P>
        <P Name="GenerateTraceReport">off</P>
        <P Name="GenerateTraceReportSl">off</P>
        <P Name="GenerateTraceReportSf">off</P>
        <P Name="GenerateTraceReportEml">off</P>
        <P Name="GenerateWebview">off</P>
        <P Name="GenerateCodeMetricsReport">off</P>
        <P Name="GenerateCodeReplacementReport">off</P>
        <P Name="GenerateMissedCodeReplacementReport">off</P>
        <P Name="RTWCompilerOptimization">off</P>
        <P Name="ObjectivePriorities" Class="double">[]</P>
        <P Name="RTWCustomCompilerOptimizations"/>
        <P Name="CheckMdlBeforeBuild">Off</P>
        <P Name="SharedConstantsCachingThreshold">1024</P>
        <P Name="GPUKernelNamePrefix"/>
        <P Name="GPUDeviceID">-1</P>
        <P Name="GPUMallocMode">discrete</P>
        <P Name="GPUMallocThreshold">200</P>
        <P Name="GPUEnableMemoryManager">off</P>
        <P Name="GPUStackLimitPerThread">1024</P>
        <P Name="GPUcuBLAS">on</P>
        <P Name="GPUcuSOLVER">on</P>
        <P Name="GPUcuFFT">on</P>
        <P Name="GPUErrorChecks">off</P>
        <P Name="GPUComputeCapability">3.5</P>
        <P Name="GPUCustomComputeCapability"/>
        <P Name="GPUCompilerFlags"/>
        <P Name="GPUMaximumBlocksPerKernel">0</P>
        <P Name="DLTargetLibrary">none</P>
        <P Name="DLAutoTuning">on</P>
        <P Name="DLArmComputeVersion">20.02.1</P>
        <P Name="DLArmComputeArch">unspecified</P>
        <P Name="DLLearnablesCompression">None</P>
        <Array PropName="Components" Type="Handle" Dimension="1*2">
          <Object ObjectID="10" Version="23.1.0" ClassName="Simulink.CodeAppCC">
            <Array PropName="DisabledProps" Type="Cell" Dimension="1*28">
              <Cell Class="char">IgnoreCustomStorageClasses</Cell>
              <Cell Class="char">IgnoreTestpoints</Cell>
              <Cell Class="char">InsertBlockDesc</Cell>
              <Cell Class="char">SFDataObjDesc</Cell>
              <Cell Class="char">SimulinkDataObjDesc</Cell>
              <Cell Class="char">DefineNamingRule</Cell>
              <Cell Class="char">SignalNamingRule</Cell>
              <Cell Class="char">ParamNamingRule</Cell>
              <Cell Class="char">InlinedPrmAccess</Cell>
              <Cell Class="char">CustomSymbolStr</Cell>
              <Cell Class="char">CustomSymbolStrGlobalVar</Cell>
              <Cell Class="char">CustomSymbolStrType</Cell>
              <Cell Class="char">CustomSymbolStrField</Cell>
              <Cell Class="char">CustomSymbolStrFcn</Cell>
              <Cell Class="char">CustomSymbolStrBlkIO</Cell>
              <Cell Class="char">CustomSymbolStrTmpVar</Cell>
              <Cell Class="char">CustomSymbolStrMacro</Cell>
              <Cell Class="char">InsertPolySpaceComments</Cell>
              <Cell Class="char">MATLABFcnDesc</Cell>
              <Cell Class="char">InternalIdentifier</Cell>
              <Cell Class="char">CustomSymbolStrModelFcn</Cell>
              <Cell Class="char">CustomSymbolStrFcnArg</Cell>
              <Cell Class="char">CustomSymbolStrUtil</Cell>
              <Cell Class="char">CustomSymbolStrEmxType</Cell>
              <Cell Class="char">CustomSymbolStrEmxFcn</Cell>
              <Cell Class="char">CustomUserTokenString</Cell>
              <Cell Class="char">ReqsInCode</Cell>
              <Cell Class="char">BlockCommentType</Cell>
            </Array>
            <P Name="Description"/>
            <P Name="Components" Class="double">[]</P>
            <P Name="Comment"/>
            <P Name="ForceParamTrailComments">off</P>
            <P Name="GenerateComments">on</P>
            <P Name="CommentStyle">Auto</P>
            <P Name="IgnoreCustomStorageClasses">on</P>
            <P Name="IgnoreTestpoints">off</P>
            <P Name="MaxIdLength">31</P>
            <P Name="PreserveName">off</P>
            <P Name="PreserveNameWithParent">off</P>
            <P Name="ShowEliminatedStatement">off</P>
            <P Name="OperatorAnnotations">off</P>
            <P Name="SimulinkDataObjDesc">off</P>
            <P Name="SFDataObjDesc">off</P>
            <P Name="MATLABFcnDesc">off</P>
            <P Name="MangleLength">1</P>
            <P Name="SharedChecksumLength">8</P>
            <P Name="CustomSymbolStrGlobalVar">$R$N$M</P>
            <P Name="CustomSymbolStrType">$N$R$M_T</P>
            <P Name="CustomSymbolStrField">$N$M</P>
            <P Name="CustomSymbolStrFcn">$R$N$M$F</P>
            <P Name="CustomSymbolStrModelFcn">$R$N</P>
            <P Name="CustomSymbolStrFcnArg">rt$I$N$M</P>
            <P Name="CustomSymbolStrBlkIO">rtb_$N$M</P>
            <P Name="CustomSymbolStrTmpVar">$N$M</P>
            <P Name="CustomSymbolStrMacro">$R$N$M</P>
            <P Name="CustomSymbolStrUtil">$N$C</P>
            <P Name="CustomSymbolStrEmxType">emxArray_$M$N</P>
            <P Name="CustomSymbolStrEmxFcn">emx$M$N</P>
            <P Name="CustomUserTokenString"/>
            <P Name="CustomCommentsFcn"/>
            <P Name="DefineNamingRule">None</P>
            <P Name="DefineNamingFcn"/>
            <P Name="ParamNamingRule">None</P>
            <P Name="ParamNamingFcn"/>
            <P Name="SignalNamingRule">None</P>
            <P Name="SignalNamingFcn"/>
            <P Name="InsertBlockDesc">off</P>
            <P Name="InsertPolySpaceComments">off</P>
            <P Name="SimulinkBlockComments">on</P>
            <P Name="BlockCommentType">BlockPathComment</P>
            <P Name="StateflowObjectComments">on</P>
            <P Name="MATLABSourceComments">off</P>
            <P Name="EnableCustomComments">off</P>
            <P Name="InternalIdentifierFile"/>
            <P Name="InternalIdentifier">Shortened</P>
            <P Name="InlinedPrmAccess">Literals</P>
            <P Name="ReqsInCode">off</P>
            <P Name="UseSimReservedNames">off</P>
            <P Name="ReservedNameArray" Class="double">[]</P>
            <P Name="EnumMemberNameClash">error</P>
          </Object>
          <Object BackupClass="Simulink.TargetCC" ObjectID="11" Version="23.1.0" ClassName="Simulink.GRTTargetCC">
            <Array PropName="DisabledProps" Type="Cell" Dimension="1*21">
              <Cell Class="char">IncludeMdlTerminateFcn</Cell>
              <Cell Class="char">RemoveResetFunc</Cell>
              <Cell Class="char">SuppressErrorStatus</Cell>
              <Cell Class="char">ERTCustomFileBanners</Cell>
              <Cell Class="char">GenerateSampleERTMain</Cell>
              <Cell Class="char">GenerateTestInterfaces</Cell>
              <Cell Class="char">ModelStepFunctionPrototypeControlCompliant</Cell>
              <Cell Class="char">CPPClassGenCompliant</Cell>
              <Cell Class="char">SupportNonInlinedSFcns</Cell>
              <Cell Class="char">PurelyIntegerCode</Cell>
              <Cell Class="char">PortableWordSizes</Cell>
              <Cell Class="char">SupportComplex</Cell>
              <Cell Class="char">SupportAbsoluteTime</Cell>
              <Cell Class="char">SupportContinuousTime</Cell>
              <Cell Class="char">GenerateAllocFcn</Cell>
              <Cell Class="char">ExistingSharedCode</Cell>
              <Cell Class="char">RemoveDisableFunc</Cell>
              <Cell Class="char">PreserveStateflowLocalDataDimensions</Cell>
              <Cell Class="char">ParenthesesLevel</Cell>
              <Cell Class="char">ERTMultiwordTypeDef</Cell>
              <Cell Class="char">MultiwordTypeDef</Cell>
            </Array>
            <P Name="Description"/>
            <P Name="Components" Class="double">[]</P>
            <P Name="TargetFcnLib">ansi_tfl_table_tmw.mat</P>
            <P Name="TargetLibSuffix"/>
            <P Name="TargetPreCompLibLocation"/>
            <P Name="GenFloatMathFcnCalls">NOT IN USE</P>
            <P Name="TargetLangStandard">C89/C90 (ANSI)</P>
            <P Name="CodeReplacementLibrary">None</P>
            <P Name="UtilityFuncGeneration">Auto</P>
            <P Name="MultiwordTypeDef">System defined</P>
            <P Name="MultiwordLength">2048</P>
            <P Name="DynamicStringBufferSize">256</P>
            <P Name="GenerateFullHeader">on</P>
            <P Name="InferredTypesCompatibility">off</P>
            <P Name="ExistingSharedCode"/>
            <P Name="GenerateSampleERTMain">off</P>
            <P Name="GenerateTestInterfaces">off</P>
            <P Name="ModelReferenceCompliant">on</P>
            <P Name="ParMdlRefBuildCompliant">on</P>
            <P Name="CompOptLevelCompliant">on</P>
            <P Name="ConcurrentExecutionCompliant">on</P>
            <P Name="IncludeMdlTerminateFcn">on</P>
            <P Name="CombineOutputUpdateFcns">off</P>
            <P Name="CombineSignalStateStructs">off</P>
            <P Name="GroupInternalDataByFunction">off</P>
            <P Name="SuppressErrorStatus">off</P>
            <P Name="IncludeFileDelimiter">Auto</P>
            <P Name="ERTCustomFileBanners">off</P>
            <P Name="SupportAbsoluteTime">on</P>
            <P Name="LogVarNameModifier">rt_</P>
            <P Name="MatFileLogging">on</P>
            <P Name="CodeInterfacePackaging">Nonreusable function</P>
            <P Name="PurelyIntegerCode">off</P>
            <P Name="SupportNonFinite">on</P>
            <P Name="SupportComplex">on</P>
            <P Name="SupportContinuousTime">on</P>
            <P Name="SupportNonInlinedSFcns">on</P>
            <P Name="RemoveDisableFunc">off</P>
            <P Name="RemoveResetFunc">off</P>
            <P Name="SupportVariableSizeSignals">off</P>
            <P Name="ParenthesesLevel">Nominal</P>
            <P Name="CastingMode">Nominal</P>
            <P Name="MATLABClassNameForMDSCustomization">Simulink.SoftwareTarget.GRTCustomization</P>
            <P Name="ModelStepFunctionPrototypeControlCompliant">off</P>
            <P Name="CPPClassGenCompliant">on</P>
            <P Name="AutosarCompliant">off</P>
            <P Name="MDXCompliant">off</P>
            <P Name="GRTInterface">on</P>
            <P Name="GenerateAllocFcn">off</P>
            <P Name="UseToolchainInfoCompliant">on</P>
            <P Name="GenerateSharedConstants">on</P>
            <P Name="CoderGroups" Class="double">[]</P>
            <P Name="AccessMethods" Class="double">[]</P>
            <P Name="LookupTableObjectStructAxisOrder">1,2,3,4,...</P>
            <P Name="LUTObjectStructOrderExplicitValues">Size,Breakpoints,Table</P>
            <P Name="LUTObjectStructOrderEvenSpacing">Size,Breakpoints,Table</P>
            <P Name="ArrayLayout">Column-major</P>
            <P Name="UnsupportedSFcnMsg">error</P>
            <P Name="ERTHeaderFileRootName">$R$E</P>
            <P Name="ERTSourceFileRootName">$R$E</P>
            <P Name="ERTDataFileRootName">$R_data</P>
            <Array PropName="InstructionSetExtensions" Type="Cell" Dimension="1*1">
              <Cell Class="char">None</Cell>
            </Array>
            <P Name="OptimizeReductions">off</P>
            <P Name="UseMalloc">off</P>
            <P Name="ExtMode">off</P>
            <P Name="ExtModeStaticAlloc">off</P>
            <P Name="ExtModeTesting">off</P>
            <P Name="ExtModeAutomaticAllocSize">on</P>
            <P Name="ExtModeMaxTrigDuration">10</P>
            <P Name="ExtModeStaticAllocSize">1000000</P>
            <P Name="ExtModeTransport">0</P>
            <P Name="ExtModeMexFile">ext_comm</P>
            <P Name="ExtModeMexArgs"/>
            <P Name="ExtModeIntrfLevel">Level1</P>
            <P Name="RTWCAPISignals">off</P>
            <P Name="RTWCAPIParams">off</P>
            <P Name="RTWCAPIStates">off</P>
            <P Name="RTWCAPIRootIO">off</P>
            <P Name="GenerateASAP2">off</P>
            <P Name="MultiInstanceErrorCode">Error</P>
          </Object>
        </Array>
      </Object>
      <Object ObjectID="12" Version="23.1.0" ClassName="SlCovCC.ConfigComp">
        <P Name="DisabledProps" Class="double">[]</P>
        <P Name="Description">Simulink Coverage Configuration Component</P>
        <P Name="Components" Class="double">[]</P>
        <P Name="Name">Simulink Coverage</P>
        <P Name="CovEnable">off</P>
        <P Name="CovScope">EntireSystem</P>
        <P Name="CovIncludeTopModel">on</P>
        <P Name="RecordCoverage">off</P>
        <P Name="CovPath">/</P>
        <P Name="CovSaveName">covdata</P>
        <P Name="CovCompData"/>
        <P Name="CovMetricSettings">dw</P>
        <P Name="CovFilter"/>
        <P Name="CovHTMLOptions"/>
        <P Name="CovNameIncrementing">off</P>
        <P Name="CovForceBlockReductionOff">on</P>
        <P Name="CovEnableCumulative">on</P>
        <P Name="CovSaveCumulativeToWorkspaceVar">on</P>
        <P Name="CovSaveSingleToWorkspaceVar">on</P>
        <P Name="CovCumulativeVarName">covCumulativeData</P>
        <P Name="CovCumulativeReport">off</P>
        <P Name="CovSaveOutputData">on</P>
        <P Name="CovOutputDir">slcov_output/$ModelName$</P>
        <P Name="CovDataFileName">$ModelName$_cvdata</P>
        <P Name="CovReportOnPause">on</P>
        <P Name="CovModelRefEnable">off</P>
        <P Name="CovModelRefExcluded"/>
        <P Name="CovExternalEMLEnable">off</P>
        <P Name="CovSFcnEnable">off</P>
        <P Name="CovBoundaryAbsTol">1e-05</P>
        <P Name="CovBoundaryRelTol">0.01</P>
        <P Name="CovUseTimeInterval">off</P>
        <P Name="CovStartTime">0</P>
        <P Name="CovStopTime">0</P>
        <P Name="CovMcdcMode">Masking</P>
        <P Name="CovExcludeInactiveVariants">off</P>
      </Object>
      <Object ObjectID="13" Version="23.1.0" ClassName="hdlcoderui.hdlcc">
        <P Name="DisabledProps" Class="double">[]</P>
        <P Name="Description">HDL Coder custom configuration component</P>
        <P Name="Components" Class="double">[]</P>
        <P Name="Name">HDL Coder</P>
        <Array PropName="HDLConfigFile" Type="Cell" Dimension="1*1">
          <Cell Class="char"> </Cell>
        </Array>
        <P Name="HDLCActiveTab">0</P>
      </Object>
    </Array>
    <P Name="Name">Configuration</P>
    <P Name="CurrentDlgPage">Solver</P>
    <P Name="ConfigPrmDlgPosition">[ 200, 85, 1080, 715 ]</P>
    <P Name="ExtraOptions"/>
  </Object>
</ConfigSet>

__MWOPC_PART_BEGIN__ /simulink/configSetInfo.xml
<?xml version="1.0" encoding="utf-8"?>
<ConfigSetInfo>
  <ConfigSet PartName="/simulink/configSet0.xml" Active="true">Configuration</ConfigSet>
</ConfigSetInfo>

__MWOPC_PART_BEGIN__ /simulink/libraryBrowser/_rels/slLibraryBrowser.xml.rels
<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<Relationships xmlns="http://schemas.openxmlformats.org/package/2006/relationships">
  <Relationship Id="rId1" Target="CAN/CAN@20@2@2E@0B/CAN@20@send1.svg" Type="http://schemas.mathworks.com/simulink/2015/relationships/slLibraryBrowserImage"/>
  <Relationship Id="rId10" Target="Network/TCP/TCP@20@Configure.svg" Type="http://schemas.mathworks.com/simulink/2015/relationships/slLibraryBrowserImage"/>
  <Relationship Id="rId11" Target="Network/TCP/TCP@20@Receive.svg" Type="http://schemas.mathworks.com/simulink/2015/relationships/slLibraryBrowserImage"/>
  <Relationship Id="rId12" Target="Network/TCP/TCP@20@Send.svg" Type="http://schemas.mathworks.com/simulink/2015/relationships/slLibraryBrowserImage"/>
  <Relationship Id="rId13" Target="Network/TCP.svg" Type="http://schemas.mathworks.com/simulink/2015/relationships/slLibraryBrowserImage"/>
  <Relationship Id="rId14" Target="Network/UDP/UDP@20@Configure.svg" Type="http://schemas.mathworks.com/simulink/2015/relationships/slLibraryBrowserImage"/>
  <Relationship Id="rId15" Target="Network/UDP/UDP@20@Receive.svg" Type="http://schemas.mathworks.com/simulink/2015/relationships/slLibraryBrowserImage"/>
  <Relationship Id="rId16" Target="Network/UDP/UDP@20@Send.svg" Type="http://schemas.mathworks.com/simulink/2015/relationships/slLibraryBrowserImage"/>
  <Relationship Id="rId17" Target="Network/UDP/UDP@20@Example.svg" Type="http://schemas.mathworks.com/simulink/2015/relationships/slLibraryBrowserImage"/>
  <Relationship Id="rId18" Target="Network/UDP.svg" Type="http://schemas.mathworks.com/simulink/2015/relationships/slLibraryBrowserImage"/>
  <Relationship Id="rId19" Target="Network.svg" Type="http://schemas.mathworks.com/simulink/2015/relationships/slLibraryBrowserImage"/>
  <Relationship Id="rId2" Target="CAN/CAN@20@2@2E@0B/CAN@20@receive1.svg" Type="http://schemas.mathworks.com/simulink/2015/relationships/slLibraryBrowserImage"/>
  <Relationship Id="rId20" Target="Modules/Input@20@Module/Input@20@Module@20@@28@6@20@channel@29@.svg" Type="http://schemas.mathworks.com/simulink/2015/relationships/slLibraryBrowserImage"/>
  <Relationship Id="rId21" Target="Modules/Input@20@Module/Input@20@Module@20@@28@10@20@channel@29@.svg" Type="http://schemas.mathworks.com/simulink/2015/relationships/slLibraryBrowserImage"/>
  <Relationship Id="rId22" Target="Modules/Input@20@Module/Reset@20@Puls@20@Counter@20@@28@6@20@channel@29@.svg" Type="http://schemas.mathworks.com/simulink/2015/relationships/slLibraryBrowserImage"/>
  <Relationship Id="rId23" Target="Modules/Input@20@Module/Input@20@Module@20@4@2D@20@20@mA@20@@28@10@20@channel@29@.svg" Type="http://schemas.mathworks.com/simulink/2015/relationships/slLibraryBrowserImage"/>
  <Relationship Id="rId24" Target="Modules/Input@20@Module.svg" Type="http://schemas.mathworks.com/simulink/2015/relationships/slLibraryBrowserImage"/>
  <Relationship Id="rId25" Target="Modules/Output@20@Module/Output@20@Module@20@@28@6@20@channel@29@.svg" Type="http://schemas.mathworks.com/simulink/2015/relationships/slLibraryBrowserImage"/>
  <Relationship Id="rId26" Target="Modules/Output@20@Module/Output@20@Module@20@@28@10@20@channel@29@.svg" Type="http://schemas.mathworks.com/simulink/2015/relationships/slLibraryBrowserImage"/>
  <Relationship Id="rId27" Target="Modules/Output@20@Module/Output@20@Module@20@Monitor@20@@28@6@20@channel@29@.svg" Type="http://schemas.mathworks.com/simulink/2015/relationships/slLibraryBrowserImage"/>
  <Relationship Id="rId28" Target="Modules/Output@20@Module.svg" Type="http://schemas.mathworks.com/simulink/2015/relationships/slLibraryBrowserImage"/>
  <Relationship Id="rId29" Target="Modules/Bridge@20@Module/Bridge@20@Module.svg" Type="http://schemas.mathworks.com/simulink/2015/relationships/slLibraryBrowserImage"/>
  <Relationship Id="rId3" Target="CAN/CAN@20@2@2E@0B/CAN@20@Send.svg" Type="http://schemas.mathworks.com/simulink/2015/relationships/slLibraryBrowserImage"/>
  <Relationship Id="rId30" Target="Modules/Bridge@20@Module/Bridge@20@Module@20@Monitor.svg" Type="http://schemas.mathworks.com/simulink/2015/relationships/slLibraryBrowserImage"/>
  <Relationship Id="rId31" Target="Modules/Bridge@20@Module.svg" Type="http://schemas.mathworks.com/simulink/2015/relationships/slLibraryBrowserImage"/>
  <Relationship Id="rId32" Target="Modules.svg" Type="http://schemas.mathworks.com/simulink/2015/relationships/slLibraryBrowserImage"/>
  <Relationship Id="rId33" Target="Enclosure@20@LED@27@s/Enclosure@20@LED.svg" Type="http://schemas.mathworks.com/simulink/2015/relationships/slLibraryBrowserImage"/>
  <Relationship Id="rId34" Target="Enclosure@20@LED@27@s.svg" Type="http://schemas.mathworks.com/simulink/2015/relationships/slLibraryBrowserImage"/>
  <Relationship Id="rId35" Target="Supply@20@control/Controller@20@Active.svg" Type="http://schemas.mathworks.com/simulink/2015/relationships/slLibraryBrowserImage"/>
  <Relationship Id="rId36" Target="Supply@20@control/K15@20@Voltage.svg" Type="http://schemas.mathworks.com/simulink/2015/relationships/slLibraryBrowserImage"/>
  <Relationship Id="rId37" Target="Supply@20@control/K30@20@Voltage.svg" Type="http://schemas.mathworks.com/simulink/2015/relationships/slLibraryBrowserImage"/>
  <Relationship Id="rId38" Target="Supply@20@control.svg" Type="http://schemas.mathworks.com/simulink/2015/relationships/slLibraryBrowserImage"/>
  <Relationship Id="rId39" Target="Memory@20@store/Variable@20@to@20@memory/Memory@20@write.svg" Type="http://schemas.mathworks.com/simulink/2015/relationships/slLibraryBrowserImage"/>
  <Relationship Id="rId4" Target="CAN/CAN@20@2@2E@0B/CAN@20@Receive.svg" Type="http://schemas.mathworks.com/simulink/2015/relationships/slLibraryBrowserImage"/>
  <Relationship Id="rId40" Target="Memory@20@store/Variable@20@to@20@memory/Memory@20@read.svg" Type="http://schemas.mathworks.com/simulink/2015/relationships/slLibraryBrowserImage"/>
  <Relationship Id="rId41" Target="Memory@20@store/Variable@20@to@20@memory.svg" Type="http://schemas.mathworks.com/simulink/2015/relationships/slLibraryBrowserImage"/>
  <Relationship Id="rId42" Target="Memory@20@store/Diagnostic@20@to@20@memory/Store@20@diagnostic@20@code@20@with@20@freeze@20@frame.svg" Type="http://schemas.mathworks.com/simulink/2015/relationships/slLibraryBrowserImage"/>
  <Relationship Id="rId43" Target="Memory@20@store/Diagnostic@20@to@20@memory/Store@20@diagnostic@20@code.svg" Type="http://schemas.mathworks.com/simulink/2015/relationships/slLibraryBrowserImage"/>
  <Relationship Id="rId44" Target="Memory@20@store/Diagnostic@20@to@20@memory/Number@20@of@20@stored@20@diagnostic@20@codes.svg" Type="http://schemas.mathworks.com/simulink/2015/relationships/slLibraryBrowserImage"/>
  <Relationship Id="rId45" Target="Memory@20@store/Diagnostic@20@to@20@memory/Delete@20@all@20@codes@20@for@20@one@20@group.svg" Type="http://schemas.mathworks.com/simulink/2015/relationships/slLibraryBrowserImage"/>
  <Relationship Id="rId46" Target="Memory@20@store/Diagnostic@20@to@20@memory/Read@20@diagnostic@20@code.svg" Type="http://schemas.mathworks.com/simulink/2015/relationships/slLibraryBrowserImage"/>
  <Relationship Id="rId47" Target="Memory@20@store/Diagnostic@20@to@20@memory.svg" Type="http://schemas.mathworks.com/simulink/2015/relationships/slLibraryBrowserImage"/>
  <Relationship Id="rId48" Target="Memory@20@store.svg" Type="http://schemas.mathworks.com/simulink/2015/relationships/slLibraryBrowserImage"/>
  <Relationship Id="rId49" Target="System/Execute@20@shell@20@command.svg" Type="http://schemas.mathworks.com/simulink/2015/relationships/slLibraryBrowserImage"/>
  <Relationship Id="rId5" Target="CAN/CAN@20@2@2E@0B.svg" Type="http://schemas.mathworks.com/simulink/2015/relationships/slLibraryBrowserImage"/>
  <Relationship Id="rId50" Target="System/License@20@Key.svg" Type="http://schemas.mathworks.com/simulink/2015/relationships/slLibraryBrowserImage"/>
  <Relationship Id="rId51" Target="System/CPU@20@temperature.svg" Type="http://schemas.mathworks.com/simulink/2015/relationships/slLibraryBrowserImage"/>
  <Relationship Id="rId52" Target="System/XCP@20@Server.svg" Type="http://schemas.mathworks.com/simulink/2015/relationships/slLibraryBrowserImage"/>
  <Relationship Id="rId53" Target="System.svg" Type="http://schemas.mathworks.com/simulink/2015/relationships/slLibraryBrowserImage"/>
  <Relationship Id="rId54" Target="Display@20@specific/Set@20@display@20@brightness.svg" Type="http://schemas.mathworks.com/simulink/2015/relationships/slLibraryBrowserImage"/>
  <Relationship Id="rId55" Target="Display@20@specific.svg" Type="http://schemas.mathworks.com/simulink/2015/relationships/slLibraryBrowserImage"/>
  <Relationship Id="rId6" Target="CAN/@20@CAN@20@Example.svg" Type="http://schemas.mathworks.com/simulink/2015/relationships/slLibraryBrowserImage"/>
  <Relationship Id="rId7" Target="CAN.svg" Type="http://schemas.mathworks.com/simulink/2015/relationships/slLibraryBrowserImage"/>
  <Relationship Id="rId8" Target="LIN/LIN@20@Master.svg" Type="http://schemas.mathworks.com/simulink/2015/relationships/slLibraryBrowserImage"/>
  <Relationship Id="rId9" Target="LIN.svg" Type="http://schemas.mathworks.com/simulink/2015/relationships/slLibraryBrowserImage"/>
</Relationships>

__MWOPC_PART_BEGIN__ /simulink/libraryBrowser/CAN.svg
<?xml version="1.0" encoding="UTF-8"?><svg width="27.5167mm" height="12.1708mm" viewBox="0 0 104 46" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><g fill="none" stroke="black" stroke-width="1" fill-rule="evenodd" stroke-linecap="square" stroke-linejoin="bevel"><g clip-path="none" fill="none" opacity="1" stroke="none" stroke-opacity="0" transform="matrix(1,0,0,1,0,0)"><path d="M0,0 L104,0 L104,46 L0,46 L0,0 z" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip3"><path d="M-2,-2 L102,-2 L102,44 L-2,44 L-2,-2 z"/></clipPath></defs><g clip-path="url(#clip3)" fill="#ffaa00" fill-opacity="1" opacity="1" stroke="none" stroke-opacity="0" transform="matrix(1,0,0,1,2,2)"><path d="M0,0 L100,0 L100,42 L0,42 L0,0 z" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip7"><path d="M-52,-23 L52,-23 L52,23 L-52,23 L-52,-23 z"/></clipPath></defs><g clip-path="url(#clip7)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,52,23)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="21.0938" x="-10.5469" xml:space="preserve" y="3.5">CAN</text></g><defs><clipPath id="clip12"><path d="M-2.5,-2.5 L101.5,-2.5 L101.5,43.5 L-2.5,43.5 L-2.5,-2.5 z"/></clipPath></defs><g clip-path="url(#clip12)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,2.5,2.5)"><path d="M0,0 L100,0 L100,42 L0,42 L0,0 z" fill-rule="evenodd" vector-effect="none"/></g></g><!--generated on ubuntu @ 2024-07-25 14:37:27 CEST--></svg>

__MWOPC_PART_BEGIN__ /simulink/libraryBrowser/CAN/@20@CAN@20@Example.svg
<?xml version="1.0" encoding="UTF-8"?><svg width="27.5167mm" height="12.1708mm" viewBox="0 0 104 46" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><g fill="none" stroke="black" stroke-width="1" fill-rule="evenodd" stroke-linecap="square" stroke-linejoin="bevel"><g clip-path="none" fill="none" opacity="1" stroke="none" stroke-opacity="0" transform="matrix(1,0,0,1,0,0)"><path d="M0,0 L104,0 L104,46 L0,46 L0,0 z" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip3"><path d="M-2,-2 L102,-2 L102,44 L-2,44 L-2,-2 z"/></clipPath></defs><g clip-path="url(#clip3)" fill="#ffffff" fill-opacity="1" opacity="1" stroke="none" stroke-opacity="0" transform="matrix(1,0,0,1,2,2)"><path d="M0,0 L100,0 L100,42 L0,42 L0,0 z" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip11"><path d="M-2.5,-2.5 L101.5,-2.5 L101.5,43.5 L-2.5,43.5 L-2.5,-2.5 z"/></clipPath></defs><g clip-path="url(#clip11)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,2.5,2.5)"><path d="M0,0 L100,0 L100,42 L0,42 L0,0 z" fill-rule="evenodd" vector-effect="none"/></g></g><!--generated on ubuntu @ 2024-07-25 14:37:27 CEST--></svg>

__MWOPC_PART_BEGIN__ /simulink/libraryBrowser/CAN/CAN@20@2@2E@0B.svg
<?xml version="1.0" encoding="UTF-8"?><svg width="27.5167mm" height="12.1708mm" viewBox="0 0 104 46" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><g fill="none" stroke="black" stroke-width="1" fill-rule="evenodd" stroke-linecap="square" stroke-linejoin="bevel"><g clip-path="none" fill="none" opacity="1" stroke="none" stroke-opacity="0" transform="matrix(1,0,0,1,0,0)"><path d="M0,0 L104,0 L104,46 L0,46 L0,0 z" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip3"><path d="M-2,-2 L102,-2 L102,44 L-2,44 L-2,-2 z"/></clipPath></defs><g clip-path="url(#clip3)" fill="#ffaa00" fill-opacity="1" opacity="1" stroke="none" stroke-opacity="0" transform="matrix(1,0,0,1,2,2)"><path d="M0,0 L100,0 L100,42 L0,42 L0,0 z" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip7"><path d="M-52,-23 L52,-23 L52,23 L-52,23 L-52,-23 z"/></clipPath></defs><g clip-path="url(#clip7)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,52,23)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="44.375" x="-22.1875" xml:space="preserve" y="3.5">CAN 2.0B</text></g><defs><clipPath id="clip12"><path d="M-2.5,-2.5 L101.5,-2.5 L101.5,43.5 L-2.5,43.5 L-2.5,-2.5 z"/></clipPath></defs><g clip-path="url(#clip12)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,2.5,2.5)"><path d="M0,0 L100,0 L100,42 L0,42 L0,0 z" fill-rule="evenodd" vector-effect="none"/></g></g><!--generated on ubuntu @ 2024-07-25 14:37:26 CEST--></svg>

__MWOPC_PART_BEGIN__ /simulink/libraryBrowser/CAN/CAN@20@2@2E@0B/CAN@20@Receive.svg
<?xml version="1.0" encoding="UTF-8"?><svg width="36.7771mm" height="22.225mm" viewBox="0 0 139 84" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><g fill="none" stroke="black" stroke-width="1" fill-rule="evenodd" stroke-linecap="square" stroke-linejoin="bevel"><g clip-path="none" fill="none" opacity="1" stroke="none" stroke-opacity="0" transform="matrix(1,0,0,1,0,0)"><path d="M0,0 L139,0 L139,84 L0,84 L0,0 z" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip3"><path d="M-132,-62 L7,-62 L7,22 L-132,22 L-132,-62 z"/></clipPath></defs><g clip-path="url(#clip3)" fill="none" opacity="1" stroke="#000000" stroke-linecap="round" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="2" transform="matrix(1,0,0,1,132,62)"><path d="M0.5,-4.5 L5.5,0.5 L0.5,5.5" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip6"><path d="M-132,-22 L7,-22 L7,62 L-132,62 L-132,-22 z"/></clipPath></defs><g clip-path="url(#clip6)" fill="none" opacity="1" stroke="#000000" stroke-linecap="round" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="2" transform="matrix(1,0,0,1,132,22)"><path d="M0.5,-4.5 L5.5,0.5 L0.5,5.5" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip9"><path d="M-2,-2 L137,-2 L137,82 L-2,82 L-2,-2 z"/></clipPath></defs><g clip-path="url(#clip9)" fill="#ffaa00" fill-opacity="1" opacity="1" stroke="none" stroke-opacity="0" transform="matrix(1,0,0,1,2,2)"><path d="M0,0 L130,0 L130,80 L0,80 L0,0 z" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip13"><path d="M-67,-36 L67,-36 L67,48 L-67,48 L-67,-36 z"/></clipPath></defs><g clip-path="url(#clip13)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,67,36)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="49.9375" x="-24.9688" xml:space="preserve" y="3.5">Receive on</text></g><defs><clipPath id="clip14"><path d="M-67,-48 L67,-48 L67,36 L-67,36 L-67,-48 z"/></clipPath></defs><g clip-path="url(#clip14)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,67,48)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="29.4063" x="-14.7031" xml:space="preserve" y="3.5">CAN 1</text></g><defs><clipPath id="clip15"><path d="M-129,-22 L5,-22 L5,62 L-129,62 L-129,-22 z"/></clipPath></defs><g clip-path="url(#clip15)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,129,22)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="52.6875" x="-52.6875" xml:space="preserve" y="3.5">function call</text></g><defs><clipPath id="clip16"><path d="M-129,-62 L5,-62 L5,22 L-129,22 L-129,-62 z"/></clipPath></defs><g clip-path="url(#clip16)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,129,62)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="40.5156" x="-40.5156" xml:space="preserve" y="3.5">message</text></g><defs><clipPath id="clip17"><path d="M-4,-76 L130,-76 L130,8 L-4,8 L-4,-76 z"/></clipPath></defs><g clip-path="url(#clip17)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,4,76)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="96.5" x="0" xml:space="preserve" y="3.5">GOcontroll V4.3.2-rc1</text></g><defs><clipPath id="clip22"><path d="M-2.5,-2.5 L136.5,-2.5 L136.5,81.5 L-2.5,81.5 L-2.5,-2.5 z"/></clipPath></defs><g clip-path="url(#clip22)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,2.5,2.5)"><path d="M0,0 L130,0 L130,80 L0,80 L0,0 z" fill-rule="evenodd" vector-effect="none"/></g></g><!--generated on ubuntu @ 2024-07-25 14:37:26 CEST--></svg>

__MWOPC_PART_BEGIN__ /simulink/libraryBrowser/CAN/CAN@20@2@2E@0B/CAN@20@receive1.svg
<?xml version="1.0" encoding="UTF-8"?><svg width="31.4854mm" height="43.3917mm" viewBox="0 0 119 164" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><g fill="none" stroke="black" stroke-width="1" fill-rule="evenodd" stroke-linecap="square" stroke-linejoin="bevel"><g clip-path="none" fill="none" opacity="1" stroke="none" stroke-opacity="0" transform="matrix(1,0,0,1,0,0)"><path d="M0,0 L119,0 L119,164 L0,164 L0,0 z" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip3"><path d="M-112,-122 L7,-122 L7,42 L-112,42 L-112,-122 z"/></clipPath></defs><g clip-path="url(#clip3)" fill="none" opacity="1" stroke="#000000" stroke-linecap="round" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="2" transform="matrix(1,0,0,1,112,122)"><path d="M0.5,-4.5 L5.5,0.5 L0.5,5.5" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip6"><path d="M-112,-42 L7,-42 L7,122 L-112,122 L-112,-42 z"/></clipPath></defs><g clip-path="url(#clip6)" fill="none" opacity="1" stroke="#000000" stroke-linecap="round" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="2" transform="matrix(1,0,0,1,112,42)"><path d="M0.5,-4.5 L5.5,0.5 L0.5,5.5" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip9"><path d="M7,82 L-112,82 L-112,-82 L7,-82 L7,82 z"/></clipPath></defs><g clip-path="url(#clip9)" fill="none" opacity="1" stroke="#000000" stroke-linecap="round" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="2" transform="matrix(-1,0,0,-1,7,82)"><path d="M4.5,-5.5 L-0.5,-0.5 L4.5,4.5" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip12"><path d="M-7,-2 L112,-2 L112,162 L-7,162 L-7,-2 z"/></clipPath></defs><g clip-path="url(#clip12)" fill="#ffaa00" fill-opacity="1" opacity="1" stroke="none" stroke-opacity="0" transform="matrix(1,0,0,1,7,2)"><path d="M0,0 L105,0 L105,160 L0,160 L0,0 z" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip16"><path d="M-54,-76 L55,-76 L55,88 L-54,88 L-54,-76 z"/></clipPath></defs><g clip-path="url(#clip16)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,59,76)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="49.9375" x="-24.9688" xml:space="preserve" y="3.5">Receive on</text></g><defs><clipPath id="clip17"><path d="M-54,-88 L55,-88 L55,76 L-54,76 L-54,-88 z"/></clipPath></defs><g clip-path="url(#clip17)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,59,88)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="29.4063" x="-14.7031" xml:space="preserve" y="3.5">CAN 1</text></g><defs><clipPath id="clip18"><path d="M-104,-42 L5,-42 L5,122 L-104,122 L-104,-42 z"/></clipPath></defs><g clip-path="url(#clip18)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,109,42)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="18.3125" x="-18.3125" xml:space="preserve" y="3.5">new</text></g><defs><clipPath id="clip19"><path d="M-5,-82 L104,-82 L104,82 L-5,82 L-5,-82 z"/></clipPath></defs><g clip-path="url(#clip19)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,10,82)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="9.98438" x="0" xml:space="preserve" y="3.5">ID</text></g><defs><clipPath id="clip20"><path d="M-4,-156 L105,-156 L105,8 L-4,8 L-4,-156 z"/></clipPath></defs><g clip-path="url(#clip20)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,9,156)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="96.5" x="0" xml:space="preserve" y="3.5">GOcontroll V4.3.2-rc1</text></g><defs><clipPath id="clip25"><path d="M-7.5,-2.5 L111.5,-2.5 L111.5,161.5 L-7.5,161.5 L-7.5,-2.5 z"/></clipPath></defs><g clip-path="url(#clip25)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,7.5,2.5)"><path d="M0,0 L105,0 L105,160 L0,160 L0,0 z" fill-rule="evenodd" vector-effect="none"/></g></g><!--generated on ubuntu @ 2024-07-25 14:37:26 CEST--></svg>

__MWOPC_PART_BEGIN__ /simulink/libraryBrowser/CAN/CAN@20@2@2E@0B/CAN@20@Send.svg
<?xml version="1.0" encoding="UTF-8"?><svg width="36.7771mm" height="22.225mm" viewBox="0 0 139 84" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><g fill="none" stroke="black" stroke-width="1" fill-rule="evenodd" stroke-linecap="square" stroke-linejoin="bevel"><g clip-path="none" fill="none" opacity="1" stroke="none" stroke-opacity="0" transform="matrix(1,0,0,1,0,0)"><path d="M0,0 L139,0 L139,84 L0,84 L0,0 z" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip3"><path d="M7,42 L-132,42 L-132,-42 L7,-42 L7,42 z"/></clipPath></defs><g clip-path="url(#clip3)" fill="none" opacity="1" stroke="#000000" stroke-linecap="round" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="2" transform="matrix(-1,0,0,-1,7,42)"><path d="M4.5,-5.5 L-0.5,-0.5 L4.5,4.5" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip6"><path d="M-7,-2 L132,-2 L132,82 L-7,82 L-7,-2 z"/></clipPath></defs><g clip-path="url(#clip6)" fill="#ffaa00" fill-opacity="1" opacity="1" stroke="none" stroke-opacity="0" transform="matrix(1,0,0,1,7,2)"><path d="M0,0 L130,0 L130,80 L0,80 L0,0 z" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip10"><path d="M-67,-36 L67,-36 L67,48 L-67,48 L-67,-36 z"/></clipPath></defs><g clip-path="url(#clip10)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,72,36)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="37.1563" x="-18.5781" xml:space="preserve" y="3.5">Send on</text></g><defs><clipPath id="clip11"><path d="M-67,-48 L67,-48 L67,36 L-67,36 L-67,-48 z"/></clipPath></defs><g clip-path="url(#clip11)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,72,48)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="26.6406" x="-13.3125" xml:space="preserve" y="3.5">CAN1</text></g><defs><clipPath id="clip12"><path d="M-5,-42 L129,-42 L129,42 L-5,42 L-5,-42 z"/></clipPath></defs><g clip-path="url(#clip12)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,10,42)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="18.875" x="0" xml:space="preserve" y="3.5">Msg</text></g><defs><clipPath id="clip13"><path d="M-4,-76 L130,-76 L130,8 L-4,8 L-4,-76 z"/></clipPath></defs><g clip-path="url(#clip13)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,9,76)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="96.5" x="0" xml:space="preserve" y="3.5">GOcontroll V4.3.2-rc1</text></g><defs><clipPath id="clip18"><path d="M-7.5,-2.5 L131.5,-2.5 L131.5,81.5 L-7.5,81.5 L-7.5,-2.5 z"/></clipPath></defs><g clip-path="url(#clip18)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,7.5,2.5)"><path d="M0,0 L130,0 L130,80 L0,80 L0,0 z" fill-rule="evenodd" vector-effect="none"/></g></g><!--generated on ubuntu @ 2024-07-25 14:37:26 CEST--></svg>

__MWOPC_PART_BEGIN__ /simulink/libraryBrowser/CAN/CAN@20@2@2E@0B/CAN@20@send1.svg
<?xml version="1.0" encoding="UTF-8"?><svg width="30.1625mm" height="43.9208mm" viewBox="0 0 114 166" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><g fill="none" stroke="black" stroke-width="1" fill-rule="evenodd" stroke-linecap="square" stroke-linejoin="bevel"><g clip-path="none" fill="none" opacity="1" stroke="none" stroke-opacity="0" transform="matrix(1,0,0,1,0,0)"><path d="M0,0 L114,0 L114,166 L0,166 L0,0 z" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip3"><path d="M7,123 L-107,123 L-107,-43 L7,-43 L7,123 z"/></clipPath></defs><g clip-path="url(#clip3)" fill="none" opacity="1" stroke="#000000" stroke-linecap="round" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="2" transform="matrix(-1,0,0,-1,7,123)"><path d="M4.5,-5.5 L-0.5,-0.5 L4.5,4.5" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip6"><path d="M7,43 L-107,43 L-107,-123 L7,-123 L7,43 z"/></clipPath></defs><g clip-path="url(#clip6)" fill="none" opacity="1" stroke="#000000" stroke-linecap="round" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="2" transform="matrix(-1,0,0,-1,7,43)"><path d="M4.5,-5.5 L-0.5,-0.5 L4.5,4.5" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip9"><path d="M-7,-2 L107,-2 L107,164 L-7,164 L-7,-2 z"/></clipPath></defs><g clip-path="url(#clip9)" fill="#ffaa00" fill-opacity="1" opacity="1" stroke="none" stroke-opacity="0" transform="matrix(1,0,0,1,7,2)"><path d="M0,0 L105,0 L105,162 L0,162 L0,0 z" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip13"><path d="M-54,-77 L55,-77 L55,89 L-54,89 L-54,-77 z"/></clipPath></defs><g clip-path="url(#clip13)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,59,77)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="37.1563" x="-18.5781" xml:space="preserve" y="3.5">Send on</text></g><defs><clipPath id="clip14"><path d="M-54,-89 L55,-89 L55,77 L-54,77 L-54,-89 z"/></clipPath></defs><g clip-path="url(#clip14)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,59,89)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="26.6406" x="-13.3125" xml:space="preserve" y="3.5">CAN1</text></g><defs><clipPath id="clip15"><path d="M-5,-43 L104,-43 L104,123 L-5,123 L-5,-43 z"/></clipPath></defs><g clip-path="url(#clip15)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,10,43)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="9.98438" x="0" xml:space="preserve" y="3.5">ID</text></g><defs><clipPath id="clip16"><path d="M-4,-158 L105,-158 L105,8 L-4,8 L-4,-158 z"/></clipPath></defs><g clip-path="url(#clip16)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,9,158)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="96.5" x="0" xml:space="preserve" y="3.5">GOcontroll V4.3.2-rc1</text></g><defs><clipPath id="clip21"><path d="M-7.5,-2.5 L106.5,-2.5 L106.5,163.5 L-7.5,163.5 L-7.5,-2.5 z"/></clipPath></defs><g clip-path="url(#clip21)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,7.5,2.5)"><path d="M0,0 L105,0 L105,162 L0,162 L0,0 z" fill-rule="evenodd" vector-effect="none"/></g></g><!--generated on ubuntu @ 2024-07-25 14:37:26 CEST--></svg>

__MWOPC_PART_BEGIN__ /simulink/libraryBrowser/Display@20@specific.svg
<?xml version="1.0" encoding="UTF-8"?><svg width="27.5167mm" height="11.6417mm" viewBox="0 0 104 44" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><g fill="none" stroke="black" stroke-width="1" fill-rule="evenodd" stroke-linecap="square" stroke-linejoin="bevel"><g clip-path="none" fill="none" opacity="1" stroke="none" stroke-opacity="0" transform="matrix(1,0,0,1,0,0)"><path d="M0,0 L104,0 L104,44 L0,44 L0,0 z" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip3"><path d="M-2,-2 L102,-2 L102,42 L-2,42 L-2,-2 z"/></clipPath></defs><g clip-path="url(#clip3)" fill="#ffaa00" fill-opacity="1" opacity="1" stroke="none" stroke-opacity="0" transform="matrix(1,0,0,1,2,2)"><path d="M0,0 L100,0 L100,40 L0,40 L0,0 z" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip7"><path d="M-52,-22 L52,-22 L52,22 L-52,22 L-52,-22 z"/></clipPath></defs><g clip-path="url(#clip7)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,52,22)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="68.8125" x="-34.4063" xml:space="preserve" y="3.5">Display specific</text></g><defs><clipPath id="clip12"><path d="M-2.5,-2.5 L101.5,-2.5 L101.5,41.5 L-2.5,41.5 L-2.5,-2.5 z"/></clipPath></defs><g clip-path="url(#clip12)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,2.5,2.5)"><path d="M0,0 L100,0 L100,40 L0,40 L0,0 z" fill-rule="evenodd" vector-effect="none"/></g></g><!--generated on ubuntu @ 2024-07-25 14:37:27 CEST--></svg>

__MWOPC_PART_BEGIN__ /simulink/libraryBrowser/Display@20@specific/Set@20@display@20@brightness.svg
<?xml version="1.0" encoding="UTF-8"?><svg width="40.7458mm" height="14.8167mm" viewBox="0 0 154 56" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><g fill="none" stroke="black" stroke-width="1" fill-rule="evenodd" stroke-linecap="square" stroke-linejoin="bevel"><g clip-path="none" fill="none" opacity="1" stroke="none" stroke-opacity="0" transform="matrix(1,0,0,1,0,0)"><path d="M0,0 L154,0 L154,56 L0,56 L0,0 z" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip3"><path d="M7,28 L-147,28 L-147,-28 L7,-28 L7,28 z"/></clipPath></defs><g clip-path="url(#clip3)" fill="none" opacity="1" stroke="#000000" stroke-linecap="round" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="2" transform="matrix(-1,0,0,-1,7,28)"><path d="M4.5,-5.5 L-0.5,-0.5 L4.5,4.5" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip6"><path d="M-7,-2 L147,-2 L147,54 L-7,54 L-7,-2 z"/></clipPath></defs><g clip-path="url(#clip6)" fill="#ffaa00" fill-opacity="1" opacity="1" stroke="none" stroke-opacity="0" transform="matrix(1,0,0,1,7,2)"><path d="M0,0 L145,0 L145,52 L0,52 L0,0 z" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip10"><path d="M-74,-28 L75,-28 L75,28 L-74,28 L-74,-28 z"/></clipPath></defs><g clip-path="url(#clip10)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,79,28)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="97.625" x="-48.8125" xml:space="preserve" y="3.5">Set display brightness</text></g><defs><clipPath id="clip11"><path d="M-4,-48 L145,-48 L145,8 L-4,8 L-4,-48 z"/></clipPath></defs><g clip-path="url(#clip11)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,9,48)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="96.5" x="0" xml:space="preserve" y="3.5">GOcontroll V4.3.2-rc1</text></g><defs><clipPath id="clip16"><path d="M-7.5,-2.5 L146.5,-2.5 L146.5,53.5 L-7.5,53.5 L-7.5,-2.5 z"/></clipPath></defs><g clip-path="url(#clip16)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,7.5,2.5)"><path d="M0,0 L145,0 L145,52 L0,52 L0,0 z" fill-rule="evenodd" vector-effect="none"/></g></g><!--generated on ubuntu @ 2024-07-25 14:37:27 CEST--></svg>

__MWOPC_PART_BEGIN__ /simulink/libraryBrowser/Enclosure@20@LED@27@s.svg
<?xml version="1.0" encoding="UTF-8"?><svg width="27.5167mm" height="12.1708mm" viewBox="0 0 104 46" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><g fill="none" stroke="black" stroke-width="1" fill-rule="evenodd" stroke-linecap="square" stroke-linejoin="bevel"><g clip-path="none" fill="none" opacity="1" stroke="none" stroke-opacity="0" transform="matrix(1,0,0,1,0,0)"><path d="M0,0 L104,0 L104,46 L0,46 L0,0 z" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip3"><path d="M-2,-2 L102,-2 L102,44 L-2,44 L-2,-2 z"/></clipPath></defs><g clip-path="url(#clip3)" fill="#ffaa00" fill-opacity="1" opacity="1" stroke="none" stroke-opacity="0" transform="matrix(1,0,0,1,2,2)"><path d="M0,0 L100,0 L100,42 L0,42 L0,0 z" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip7"><path d="M-52,-23 L52,-23 L52,23 L-52,23 L-52,-23 z"/></clipPath></defs><g clip-path="url(#clip7)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,52,23)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="66.5781" x="-33.2813" xml:space="preserve" y="3.5">Enclosure LED</text></g><defs><clipPath id="clip12"><path d="M-2.5,-2.5 L101.5,-2.5 L101.5,43.5 L-2.5,43.5 L-2.5,-2.5 z"/></clipPath></defs><g clip-path="url(#clip12)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,2.5,2.5)"><path d="M0,0 L100,0 L100,42 L0,42 L0,0 z" fill-rule="evenodd" vector-effect="none"/></g></g><!--generated on ubuntu @ 2024-07-25 14:37:27 CEST--></svg>

__MWOPC_PART_BEGIN__ /simulink/libraryBrowser/Enclosure@20@LED@27@s/Enclosure@20@LED.svg
<?xml version="1.0" encoding="UTF-8"?><svg width="42.0688mm" height="12.1708mm" viewBox="0 0 159 46" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><g fill="none" stroke="black" stroke-width="1" fill-rule="evenodd" stroke-linecap="square" stroke-linejoin="bevel"><g clip-path="none" fill="none" opacity="1" stroke="none" stroke-opacity="0" transform="matrix(1,0,0,1,0,0)"><path d="M0,0 L159,0 L159,46 L0,46 L0,0 z" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip3"><path d="M7,23 L-152,23 L-152,-23 L7,-23 L7,23 z"/></clipPath></defs><g clip-path="url(#clip3)" fill="none" opacity="1" stroke="#000000" stroke-linecap="round" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="2" transform="matrix(-1,0,0,-1,7,23)"><path d="M4.5,-5.5 L-0.5,-0.5 L4.5,4.5" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip6"><path d="M-7,-2 L152,-2 L152,44 L-7,44 L-7,-2 z"/></clipPath></defs><g clip-path="url(#clip6)" fill="#ffaa00" fill-opacity="1" opacity="1" stroke="none" stroke-opacity="0" transform="matrix(1,0,0,1,7,2)"><path d="M0,0 L150,0 L150,42 L0,42 L0,0 z" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip10"><path d="M-77,-17 L77,-17 L77,29 L-77,29 L-77,-17 z"/></clipPath></defs><g clip-path="url(#clip10)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,82,17)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="58.7813" x="-29.3906" xml:space="preserve" y="3.5">Status LED 1</text></g><defs><clipPath id="clip11"><path d="M-77,-29 L77,-29 L77,17 L-77,17 L-77,-29 z"/></clipPath></defs><g clip-path="url(#clip11)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,82,29)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="47.7031" x="-23.8438" xml:space="preserve" y="3.5">Color: Red</text></g><defs><clipPath id="clip12"><path d="M-4,-38 L150,-38 L150,8 L-4,8 L-4,-38 z"/></clipPath></defs><g clip-path="url(#clip12)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,9,38)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="96.5" x="0" xml:space="preserve" y="3.5">GOcontroll V4.3.2-rc1</text></g><defs><clipPath id="clip17"><path d="M-7.5,-2.5 L151.5,-2.5 L151.5,43.5 L-7.5,43.5 L-7.5,-2.5 z"/></clipPath></defs><g clip-path="url(#clip17)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,7.5,2.5)"><path d="M0,0 L150,0 L150,42 L0,42 L0,0 z" fill-rule="evenodd" vector-effect="none"/></g></g><!--generated on ubuntu @ 2024-07-25 14:37:27 CEST--></svg>

__MWOPC_PART_BEGIN__ /simulink/libraryBrowser/LIN.svg
<?xml version="1.0" encoding="UTF-8"?><svg width="27.5167mm" height="12.1708mm" viewBox="0 0 104 46" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><g fill="none" stroke="black" stroke-width="1" fill-rule="evenodd" stroke-linecap="square" stroke-linejoin="bevel"><g clip-path="none" fill="none" opacity="1" stroke="none" stroke-opacity="0" transform="matrix(1,0,0,1,0,0)"><path d="M0,0 L104,0 L104,46 L0,46 L0,0 z" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip3"><path d="M-2,-2 L102,-2 L102,44 L-2,44 L-2,-2 z"/></clipPath></defs><g clip-path="url(#clip3)" fill="#ffaa00" fill-opacity="1" opacity="1" stroke="none" stroke-opacity="0" transform="matrix(1,0,0,1,2,2)"><path d="M0,0 L100,0 L100,42 L0,42 L0,0 z" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip7"><path d="M-52,-23 L52,-23 L52,23 L-52,23 L-52,-23 z"/></clipPath></defs><g clip-path="url(#clip7)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,52,23)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="15.5313" x="-7.76563" xml:space="preserve" y="3.5">LIN</text></g><defs><clipPath id="clip12"><path d="M-2.5,-2.5 L101.5,-2.5 L101.5,43.5 L-2.5,43.5 L-2.5,-2.5 z"/></clipPath></defs><g clip-path="url(#clip12)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,2.5,2.5)"><path d="M0,0 L100,0 L100,42 L0,42 L0,0 z" fill-rule="evenodd" vector-effect="none"/></g></g><!--generated on ubuntu @ 2024-07-25 14:37:27 CEST--></svg>

__MWOPC_PART_BEGIN__ /simulink/libraryBrowser/LIN/LIN@20@Master.svg
<?xml version="1.0" encoding="UTF-8"?><svg width="34.1313mm" height="69.3208mm" viewBox="0 0 129 262" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><g fill="none" stroke="black" stroke-width="1" fill-rule="evenodd" stroke-linecap="square" stroke-linejoin="bevel"><g clip-path="none" fill="none" opacity="1" stroke="none" stroke-opacity="0" transform="matrix(1,0,0,1,0,0)"><path d="M0,0 L129,0 L129,262 L0,262 L0,0 z" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip3"><path d="M7,196 L-122,196 L-122,-66 L7,-66 L7,196 z"/></clipPath></defs><g clip-path="url(#clip3)" fill="none" opacity="1" stroke="#000000" stroke-linecap="round" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="2" transform="matrix(-1,0,0,-1,7,196)"><path d="M4.5,-5.5 L-0.5,-0.5 L4.5,4.5" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip6"><path d="M7,66 L-122,66 L-122,-196 L7,-196 L7,66 z"/></clipPath></defs><g clip-path="url(#clip6)" fill="none" opacity="1" stroke="#000000" stroke-linecap="round" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="2" transform="matrix(-1,0,0,-1,7,66)"><path d="M4.5,-5.5 L-0.5,-0.5 L4.5,4.5" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip9"><path d="M-7,-2 L122,-2 L122,260 L-7,260 L-7,-2 z"/></clipPath></defs><g clip-path="url(#clip9)" fill="#ffaa00" fill-opacity="1" opacity="1" stroke="none" stroke-opacity="0" transform="matrix(1,0,0,1,7,2)"><path d="M0,0 L120,0 L120,258 L0,258 L0,0 z" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip13"><path d="M-62,-119 L62,-119 L62,143 L-62,143 L-62,-119 z"/></clipPath></defs><g clip-path="url(#clip13)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,67,119)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="48.8125" x="-24.4063" xml:space="preserve" y="3.5">Master LIN</text></g><defs><clipPath id="clip14"><path d="M-62,-131 L62,-131 L62,131 L-62,131 L-62,-131 z"/></clipPath></defs><g clip-path="url(#clip14)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,67,131)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="40.5156" x="-20.25" xml:space="preserve" y="3.5">message</text></g><defs><clipPath id="clip15"><path d="M-62,-143 L62,-143 L62,119 L-62,119 L-62,-143 z"/></clipPath></defs><g clip-path="url(#clip15)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,67,143)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="31.6094" x="-15.7969" xml:space="preserve" y="3.5">ID: 0x1</text></g><defs><clipPath id="clip16"><path d="M-4,-254 L120,-254 L120,8 L-4,8 L-4,-254 z"/></clipPath></defs><g clip-path="url(#clip16)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,9,254)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="96.5" x="0" xml:space="preserve" y="3.5">GOcontroll V4.3.2-rc1</text></g><defs><clipPath id="clip17"><path d="M-5,-66 L119,-66 L119,196 L-5,196 L-5,-66 z"/></clipPath></defs><g clip-path="url(#clip17)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,10,66)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="27.1719" x="0" xml:space="preserve" y="3.5">byte 1</text></g><defs><clipPath id="clip18"><path d="M-5,-196 L119,-196 L119,66 L-5,66 L-5,-196 z"/></clipPath></defs><g clip-path="url(#clip18)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,10,196)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="27.1719" x="0" xml:space="preserve" y="3.5">byte 2</text></g><defs><clipPath id="clip23"><path d="M-7.5,-2.5 L121.5,-2.5 L121.5,259.5 L-7.5,259.5 L-7.5,-2.5 z"/></clipPath></defs><g clip-path="url(#clip23)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,7.5,2.5)"><path d="M0,0 L120,0 L120,258 L0,258 L0,0 z" fill-rule="evenodd" vector-effect="none"/></g></g><!--generated on ubuntu @ 2024-07-25 14:37:27 CEST--></svg>

__MWOPC_PART_BEGIN__ /simulink/libraryBrowser/Memory@20@store.svg
<?xml version="1.0" encoding="UTF-8"?><svg width="27.5167mm" height="12.1708mm" viewBox="0 0 104 46" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><g fill="none" stroke="black" stroke-width="1" fill-rule="evenodd" stroke-linecap="square" stroke-linejoin="bevel"><g clip-path="none" fill="none" opacity="1" stroke="none" stroke-opacity="0" transform="matrix(1,0,0,1,0,0)"><path d="M0,0 L104,0 L104,46 L0,46 L0,0 z" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip3"><path d="M-2,-2 L102,-2 L102,44 L-2,44 L-2,-2 z"/></clipPath></defs><g clip-path="url(#clip3)" fill="#ffaa00" fill-opacity="1" opacity="1" stroke="none" stroke-opacity="0" transform="matrix(1,0,0,1,2,2)"><path d="M0,0 L100,0 L100,42 L0,42 L0,0 z" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip7"><path d="M-52,-23 L52,-23 L52,23 L-52,23 L-52,-23 z"/></clipPath></defs><g clip-path="url(#clip7)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,52,23)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="61.0313" x="-30.5156" xml:space="preserve" y="3.5">Memory store</text></g><defs><clipPath id="clip12"><path d="M-2.5,-2.5 L101.5,-2.5 L101.5,43.5 L-2.5,43.5 L-2.5,-2.5 z"/></clipPath></defs><g clip-path="url(#clip12)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,2.5,2.5)"><path d="M0,0 L100,0 L100,42 L0,42 L0,0 z" fill-rule="evenodd" vector-effect="none"/></g></g><!--generated on ubuntu @ 2024-07-25 14:37:27 CEST--></svg>

__MWOPC_PART_BEGIN__ /simulink/libraryBrowser/Memory@20@store/Diagnostic@20@to@20@memory.svg
<?xml version="1.0" encoding="UTF-8"?><svg width="27.5167mm" height="12.1708mm" viewBox="0 0 104 46" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><g fill="none" stroke="black" stroke-width="1" fill-rule="evenodd" stroke-linecap="square" stroke-linejoin="bevel"><g clip-path="none" fill="none" opacity="1" stroke="none" stroke-opacity="0" transform="matrix(1,0,0,1,0,0)"><path d="M0,0 L104,0 L104,46 L0,46 L0,0 z" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip3"><path d="M-2,-2 L102,-2 L102,44 L-2,44 L-2,-2 z"/></clipPath></defs><g clip-path="url(#clip3)" fill="#ffaa00" fill-opacity="1" opacity="1" stroke="none" stroke-opacity="0" transform="matrix(1,0,0,1,2,2)"><path d="M0,0 L100,0 L100,42 L0,42 L0,0 z" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip7"><path d="M-52,-23 L52,-23 L52,23 L-52,23 L-52,-23 z"/></clipPath></defs><g clip-path="url(#clip7)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,52,23)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="96.5313" x="-48.2656" xml:space="preserve" y="3.5">Diagnostic to memory</text></g><defs><clipPath id="clip12"><path d="M-2.5,-2.5 L101.5,-2.5 L101.5,43.5 L-2.5,43.5 L-2.5,-2.5 z"/></clipPath></defs><g clip-path="url(#clip12)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,2.5,2.5)"><path d="M0,0 L100,0 L100,42 L0,42 L0,0 z" fill-rule="evenodd" vector-effect="none"/></g></g><!--generated on ubuntu @ 2024-07-25 14:37:27 CEST--></svg>

__MWOPC_PART_BEGIN__ /simulink/libraryBrowser/Memory@20@store/Diagnostic@20@to@20@memory/Delete@20@all@20@codes@20@for@20@one@20@group.svg
<?xml version="1.0" encoding="UTF-8"?><svg width="64.5583mm" height="11.6417mm" viewBox="0 0 244 44" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><g fill="none" stroke="black" stroke-width="1" fill-rule="evenodd" stroke-linecap="square" stroke-linejoin="bevel"><g clip-path="none" fill="none" opacity="1" stroke="none" stroke-opacity="0" transform="matrix(1,0,0,1,0,0)"><path d="M0,0 L244,0 L244,44 L0,44 L0,0 z" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip3"><path d="M7,-122 L7,122 L-37,122 L-37,-122 L7,-122 z"/></clipPath></defs><g clip-path="url(#clip3)" fill="none" opacity="1" stroke="#000000" stroke-linecap="round" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="2" transform="matrix(6.12323e-17,-1,1,6.12323e-17,122,7)"><path d="M4.5,-4.5 L-0.5,0.5 L4.5,5.5" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip6"><path d="M-2,-7 L242,-7 L242,37 L-2,37 L-2,-7 z"/></clipPath></defs><g clip-path="url(#clip6)" fill="#ffaa00" fill-opacity="1" opacity="1" stroke="none" stroke-opacity="0" transform="matrix(1,0,0,1,2,7)"><path d="M0,0 L240,0 L240,35 L0,35 L0,0 z" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip10"><path d="M-122,-13 L122,-13 L122,26 L-122,26 L-122,-13 z"/></clipPath></defs><g clip-path="url(#clip10)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,122,18)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="88.1719" x="-44.0781" xml:space="preserve" y="3.5">Delete all codes for:</text></g><defs><clipPath id="clip11"><path d="M-122,-25 L122,-25 L122,14 L-122,14 L-122,-25 z"/></clipPath></defs><g clip-path="url(#clip11)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,122,30)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="36.7969" x="-18.3906" xml:space="preserve" y="3.5">Warning</text></g><defs><clipPath id="clip12"><path d="M-4,-31 L240,-31 L240,8 L-4,8 L-4,-31 z"/></clipPath></defs><g clip-path="url(#clip12)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,4,36)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="96.5" x="0" xml:space="preserve" y="3.5">GOcontroll V4.3.2-rc1</text></g><defs><clipPath id="clip17"><path d="M-2,-7 L242,-7 L242,37 L-2,37 L-2,-7 z"/></clipPath></defs><g clip-path="url(#clip17)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="2" transform="matrix(1,0,0,1,2,7)"><path d="M0,0 L240,0 L240,35 L0,35 L0,0 z" fill-rule="evenodd" vector-effect="none"/></g></g><!--generated on ubuntu @ 2024-07-25 14:37:27 CEST--></svg>

__MWOPC_PART_BEGIN__ /simulink/libraryBrowser/Memory@20@store/Diagnostic@20@to@20@memory/Number@20@of@20@stored@20@diagnostic@20@codes.svg
<?xml version="1.0" encoding="UTF-8"?><svg width="65.8812mm" height="12.7mm" viewBox="0 0 249 48" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><g fill="none" stroke="black" stroke-width="1" fill-rule="evenodd" stroke-linecap="square" stroke-linejoin="bevel"><g clip-path="none" fill="none" opacity="1" stroke="none" stroke-opacity="0" transform="matrix(1,0,0,1,0,0)"><path d="M0,0 L249,0 L249,48 L0,48 L0,0 z" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip3"><path d="M-242,-24 L7,-24 L7,24 L-242,24 L-242,-24 z"/></clipPath></defs><g clip-path="url(#clip3)" fill="none" opacity="1" stroke="#000000" stroke-linecap="round" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="2" transform="matrix(1,0,0,1,242,24)"><path d="M0.5,-4.5 L5.5,0.5 L0.5,5.5" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip6"><path d="M-2,-2 L247,-2 L247,46 L-2,46 L-2,-2 z"/></clipPath></defs><g clip-path="url(#clip6)" fill="#ffaa00" fill-opacity="1" opacity="1" stroke="none" stroke-opacity="0" transform="matrix(1,0,0,1,2,2)"><path d="M0,0 L240,0 L240,44 L0,44 L0,0 z" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip10"><path d="M-122,-18 L122,-18 L122,30 L-122,30 L-122,-18 z"/></clipPath></defs><g clip-path="url(#clip10)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,122,18)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="110.344" x="-55.1719" xml:space="preserve" y="3.5">Get number of codes for:</text></g><defs><clipPath id="clip11"><path d="M-122,-30 L122,-30 L122,18 L-122,18 L-122,-30 z"/></clipPath></defs><g clip-path="url(#clip11)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,122,30)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="36.7969" x="-18.3906" xml:space="preserve" y="3.5">Warning</text></g><defs><clipPath id="clip12"><path d="M-4,-40 L240,-40 L240,8 L-4,8 L-4,-40 z"/></clipPath></defs><g clip-path="url(#clip12)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,4,40)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="96.5" x="0" xml:space="preserve" y="3.5">GOcontroll V4.3.2-rc1</text></g><defs><clipPath id="clip17"><path d="M-2.5,-2.5 L246.5,-2.5 L246.5,45.5 L-2.5,45.5 L-2.5,-2.5 z"/></clipPath></defs><g clip-path="url(#clip17)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,2.5,2.5)"><path d="M0,0 L240,0 L240,44 L0,44 L0,0 z" fill-rule="evenodd" vector-effect="none"/></g></g><!--generated on ubuntu @ 2024-07-25 14:37:27 CEST--></svg>

__MWOPC_PART_BEGIN__ /simulink/libraryBrowser/Memory@20@store/Diagnostic@20@to@20@memory/Read@20@diagnostic@20@code.svg
<?xml version="1.0" encoding="UTF-8"?><svg width="67.2042mm" height="24.6062mm" viewBox="0 0 254 93" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><g fill="none" stroke="black" stroke-width="1" fill-rule="evenodd" stroke-linecap="square" stroke-linejoin="bevel"><g clip-path="none" fill="none" opacity="1" stroke="none" stroke-opacity="0" transform="matrix(1,0,0,1,0,0)"><path d="M0,0 L254,0 L254,93 L0,93 L0,0 z" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip3"><path d="M7,24 L-247,24 L-247,-69 L7,-69 L7,24 z"/></clipPath></defs><g clip-path="url(#clip3)" fill="none" opacity="1" stroke="#000000" stroke-linecap="round" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="2" transform="matrix(-1,0,0,-1,7,24)"><path d="M4.5,-5.5 L-0.5,-0.5 L4.5,4.5" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip6"><path d="M-247,-49 L7,-49 L7,44 L-247,44 L-247,-49 z"/></clipPath></defs><g clip-path="url(#clip6)" fill="none" opacity="1" stroke="#000000" stroke-linecap="round" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="2" transform="matrix(1,0,0,1,247,49)"><path d="M0.5,-4.5 L5.5,0.5 L0.5,5.5" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip9"><path d="M7,69 L-247,69 L-247,-24 L7,-24 L7,69 z"/></clipPath></defs><g clip-path="url(#clip9)" fill="none" opacity="1" stroke="#000000" stroke-linecap="round" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="2" transform="matrix(-1,0,0,-1,7,69)"><path d="M4.5,-5.5 L-0.5,-0.5 L4.5,4.5" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip12"><path d="M-7,-2 L247,-2 L247,91 L-7,91 L-7,-2 z"/></clipPath></defs><g clip-path="url(#clip12)" fill="#ffaa00" fill-opacity="1" opacity="1" stroke="none" stroke-opacity="0" transform="matrix(1,0,0,1,7,2)"><path d="M0,0 L240,0 L240,89 L0,89 L0,0 z" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip16"><path d="M-122,-40 L122,-40 L122,53 L-122,53 L-122,-40 z"/></clipPath></defs><g clip-path="url(#clip16)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,127,40)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="95.9688" x="-47.9844" xml:space="preserve" y="3.5">Read diagnostic code</text></g><defs><clipPath id="clip17"><path d="M-122,-52 L122,-52 L122,41 L-122,41 L-122,-52 z"/></clipPath></defs><g clip-path="url(#clip17)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,127,52)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="46.5938" x="-23.2969" xml:space="preserve" y="3.5">from index</text></g><defs><clipPath id="clip18"><path d="M-5,-24 L239,-24 L239,69 L-5,69 L-5,-24 z"/></clipPath></defs><g clip-path="url(#clip18)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,10,24)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="68.2344" x="0" xml:space="preserve" y="3.5">Diagnostic type</text></g><defs><clipPath id="clip19"><path d="M-5,-69 L239,-69 L239,24 L-5,24 L-5,-69 z"/></clipPath></defs><g clip-path="url(#clip19)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,10,69)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="24.4063" x="0" xml:space="preserve" y="3.5">Index</text></g><defs><clipPath id="clip20"><path d="M-239,-49 L5,-49 L5,44 L-239,44 L-239,-49 z"/></clipPath></defs><g clip-path="url(#clip20)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,244,49)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="23.8594" x="-23.8594" xml:space="preserve" y="3.5">Code</text></g><defs><clipPath id="clip21"><path d="M-4,-85 L240,-85 L240,8 L-4,8 L-4,-85 z"/></clipPath></defs><g clip-path="url(#clip21)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,9,85)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="96.5" x="0" xml:space="preserve" y="3.5">GOcontroll V4.3.2-rc1</text></g><defs><clipPath id="clip26"><path d="M-7.5,-2.5 L246.5,-2.5 L246.5,90.5 L-7.5,90.5 L-7.5,-2.5 z"/></clipPath></defs><g clip-path="url(#clip26)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,7.5,2.5)"><path d="M0,0 L240,0 L240,89 L0,89 L0,0 z" fill-rule="evenodd" vector-effect="none"/></g></g><!--generated on ubuntu @ 2024-07-25 14:37:27 CEST--></svg>

__MWOPC_PART_BEGIN__ /simulink/libraryBrowser/Memory@20@store/Diagnostic@20@to@20@memory/Store@20@diagnostic@20@code.svg
<?xml version="1.0" encoding="UTF-8"?><svg width="64.5583mm" height="16.1396mm" viewBox="0 0 244 61" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><g fill="none" stroke="black" stroke-width="1" fill-rule="evenodd" stroke-linecap="square" stroke-linejoin="bevel"><g clip-path="none" fill="none" opacity="1" stroke="none" stroke-opacity="0" transform="matrix(1,0,0,1,0,0)"><path d="M0,0 L244,0 L244,61 L0,61 L0,0 z" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip3"><path d="M7,-122 L7,122 L-54,122 L-54,-122 L7,-122 z"/></clipPath></defs><g clip-path="url(#clip3)" fill="none" opacity="1" stroke="#000000" stroke-linecap="round" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="2" transform="matrix(6.12323e-17,-1,1,6.12323e-17,122,7)"><path d="M4.5,-4.5 L-0.5,0.5 L4.5,5.5" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip6"><path d="M7,33 L-237,33 L-237,-28 L7,-28 L7,33 z"/></clipPath></defs><g clip-path="url(#clip6)" fill="none" opacity="1" stroke="#000000" stroke-linecap="round" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="2" transform="matrix(-1,0,0,-1,7,33)"><path d="M4.5,-5.5 L-0.5,-0.5 L4.5,4.5" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip9"><path d="M-7,-7 L237,-7 L237,54 L-7,54 L-7,-7 z"/></clipPath></defs><g clip-path="url(#clip9)" fill="#ffaa00" fill-opacity="1" opacity="1" stroke="none" stroke-opacity="0" transform="matrix(1,0,0,1,7,7)"><path d="M0,0 L235,0 L235,52 L0,52 L0,0 z" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip13"><path d="M-119,-16 L120,-16 L120,40 L-119,40 L-119,-16 z"/></clipPath></defs><g clip-path="url(#clip13)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,124,21)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="95.9531" x="-47.9688" xml:space="preserve" y="3.5">Store diagnostic code</text></g><defs><clipPath id="clip14"><path d="M-119,-28 L120,-28 L120,28 L-119,28 L-119,-28 z"/></clipPath></defs><g clip-path="url(#clip14)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,124,33)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="46.6094" x="-23.2969" xml:space="preserve" y="3.5">in memory</text></g><defs><clipPath id="clip15"><path d="M-119,-40 L120,-40 L120,16 L-119,16 L-119,-40 z"/></clipPath></defs><g clip-path="url(#clip15)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,124,45)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="63.9688" x="-31.9844" xml:space="preserve" y="3.5">Type: Warning</text></g><defs><clipPath id="clip16"><path d="M-5,-28 L234,-28 L234,28 L-5,28 L-5,-28 z"/></clipPath></defs><g clip-path="url(#clip16)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,10,33)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="71.0156" x="0" xml:space="preserve" y="3.5">Diagnostic code</text></g><defs><clipPath id="clip17"><path d="M-4,-48 L235,-48 L235,8 L-4,8 L-4,-48 z"/></clipPath></defs><g clip-path="url(#clip17)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,9,53)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="96.5" x="0" xml:space="preserve" y="3.5">GOcontroll V4.3.2-rc1</text></g><defs><clipPath id="clip22"><path d="M-7,-7 L237,-7 L237,54 L-7,54 L-7,-7 z"/></clipPath></defs><g clip-path="url(#clip22)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="2" transform="matrix(1,0,0,1,7,7)"><path d="M0,0 L235,0 L235,52 L0,52 L0,0 z" fill-rule="evenodd" vector-effect="none"/></g></g><!--generated on ubuntu @ 2024-07-25 14:37:27 CEST--></svg>

__MWOPC_PART_BEGIN__ /simulink/libraryBrowser/Memory@20@store/Diagnostic@20@to@20@memory/Store@20@diagnostic@20@code@20@with@20@freeze@20@frame.svg
<?xml version="1.0" encoding="UTF-8"?><svg width="64.5583mm" height="26.4583mm" viewBox="0 0 244 100" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><g fill="none" stroke="black" stroke-width="1" fill-rule="evenodd" stroke-linecap="square" stroke-linejoin="bevel"><g clip-path="none" fill="none" opacity="1" stroke="none" stroke-opacity="0" transform="matrix(1,0,0,1,0,0)"><path d="M0,0 L244,0 L244,100 L0,100 L0,0 z" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip3"><path d="M7,75 L-237,75 L-237,-25 L7,-25 L7,75 z"/></clipPath></defs><g clip-path="url(#clip3)" fill="none" opacity="1" stroke="#000000" stroke-linecap="round" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="2" transform="matrix(-1,0,0,-1,7,75)"><path d="M4.5,-5.5 L-0.5,-0.5 L4.5,4.5" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip6"><path d="M7,25 L-237,25 L-237,-75 L7,-75 L7,25 z"/></clipPath></defs><g clip-path="url(#clip6)" fill="none" opacity="1" stroke="#000000" stroke-linecap="round" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="2" transform="matrix(-1,0,0,-1,7,25)"><path d="M4.5,-5.5 L-0.5,-0.5 L4.5,4.5" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip9"><path d="M-7,-2 L237,-2 L237,98 L-7,98 L-7,-2 z"/></clipPath></defs><g clip-path="url(#clip9)" fill="#ffaa00" fill-opacity="1" opacity="1" stroke="none" stroke-opacity="0" transform="matrix(1,0,0,1,7,2)"><path d="M0,0 L235,0 L235,96 L0,96 L0,0 z" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip13"><path d="M-119,-38 L120,-38 L120,62 L-119,62 L-119,-38 z"/></clipPath></defs><g clip-path="url(#clip13)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,124,38)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="95.9531" x="-47.9688" xml:space="preserve" y="3.5">Store diagnostic code</text></g><defs><clipPath id="clip14"><path d="M-119,-50 L120,-50 L120,50 L-119,50 L-119,-50 z"/></clipPath></defs><g clip-path="url(#clip14)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,124,50)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="125.906" x="-62.9531" xml:space="preserve" y="3.5">in memory with freeze frame</text></g><defs><clipPath id="clip15"><path d="M-119,-62 L120,-62 L120,38 L-119,38 L-119,-62 z"/></clipPath></defs><g clip-path="url(#clip15)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,124,62)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="63.9688" x="-31.9844" xml:space="preserve" y="3.5">Type: Warning</text></g><defs><clipPath id="clip16"><path d="M-5,-25 L234,-25 L234,75 L-5,75 L-5,-25 z"/></clipPath></defs><g clip-path="url(#clip16)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,10,25)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="71.0156" x="0" xml:space="preserve" y="3.5">Diagnostic code</text></g><defs><clipPath id="clip17"><path d="M-5,-75 L234,-75 L234,25 L-5,25 L-5,-75 z"/></clipPath></defs><g clip-path="url(#clip17)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,10,75)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="26.0781" x="0" xml:space="preserve" y="3.5">signal</text></g><defs><clipPath id="clip18"><path d="M-4,-92 L235,-92 L235,8 L-4,8 L-4,-92 z"/></clipPath></defs><g clip-path="url(#clip18)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,9,92)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="96.5" x="0" xml:space="preserve" y="3.5">GOcontroll V4.3.2-rc1</text></g><defs><clipPath id="clip23"><path d="M-7.5,-2.5 L236.5,-2.5 L236.5,97.5 L-7.5,97.5 L-7.5,-2.5 z"/></clipPath></defs><g clip-path="url(#clip23)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,7.5,2.5)"><path d="M0,0 L235,0 L235,96 L0,96 L0,0 z" fill-rule="evenodd" vector-effect="none"/></g></g><!--generated on ubuntu @ 2024-07-25 14:37:27 CEST--></svg>

__MWOPC_PART_BEGIN__ /simulink/libraryBrowser/Memory@20@store/Variable@20@to@20@memory.svg
<?xml version="1.0" encoding="UTF-8"?><svg width="27.5167mm" height="12.1708mm" viewBox="0 0 104 46" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><g fill="none" stroke="black" stroke-width="1" fill-rule="evenodd" stroke-linecap="square" stroke-linejoin="bevel"><g clip-path="none" fill="none" opacity="1" stroke="none" stroke-opacity="0" transform="matrix(1,0,0,1,0,0)"><path d="M0,0 L104,0 L104,46 L0,46 L0,0 z" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip3"><path d="M-2,-2 L102,-2 L102,44 L-2,44 L-2,-2 z"/></clipPath></defs><g clip-path="url(#clip3)" fill="#ffaa00" fill-opacity="1" opacity="1" stroke="none" stroke-opacity="0" transform="matrix(1,0,0,1,2,2)"><path d="M0,0 L100,0 L100,42 L0,42 L0,0 z" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip7"><path d="M-52,-23 L52,-23 L52,23 L-52,23 L-52,-23 z"/></clipPath></defs><g clip-path="url(#clip7)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,52,23)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="85.7813" x="-42.8906" xml:space="preserve" y="3.5">Variable to memory</text></g><defs><clipPath id="clip12"><path d="M-2.5,-2.5 L101.5,-2.5 L101.5,43.5 L-2.5,43.5 L-2.5,-2.5 z"/></clipPath></defs><g clip-path="url(#clip12)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,2.5,2.5)"><path d="M0,0 L100,0 L100,42 L0,42 L0,0 z" fill-rule="evenodd" vector-effect="none"/></g></g><!--generated on ubuntu @ 2024-07-25 14:37:27 CEST--></svg>

__MWOPC_PART_BEGIN__ /simulink/libraryBrowser/Memory@20@store/Variable@20@to@20@memory/Memory@20@read.svg
<?xml version="1.0" encoding="UTF-8"?><svg width="43.3917mm" height="14.2875mm" viewBox="0 0 164 54" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><g fill="none" stroke="black" stroke-width="1" fill-rule="evenodd" stroke-linecap="square" stroke-linejoin="bevel"><g clip-path="none" fill="none" opacity="1" stroke="none" stroke-opacity="0" transform="matrix(1,0,0,1,0,0)"><path d="M0,0 L164,0 L164,54 L0,54 L0,0 z" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip3"><path d="M-157,-27 L7,-27 L7,27 L-157,27 L-157,-27 z"/></clipPath></defs><g clip-path="url(#clip3)" fill="none" opacity="1" stroke="#000000" stroke-linecap="round" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="2" transform="matrix(1,0,0,1,157,27)"><path d="M0.5,-4.5 L5.5,0.5 L0.5,5.5" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip6"><path d="M-2,-2 L162,-2 L162,52 L-2,52 L-2,-2 z"/></clipPath></defs><g clip-path="url(#clip6)" fill="#ffaa00" fill-opacity="1" opacity="1" stroke="none" stroke-opacity="0" transform="matrix(1,0,0,1,2,2)"><path d="M0,0 L155,0 L155,50 L0,50 L0,0 z" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip10"><path d="M-79,-21 L80,-21 L80,33 L-79,33 L-79,-21 z"/></clipPath></defs><g clip-path="url(#clip10)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,79,21)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="85.4375" x="-42.7188" xml:space="preserve" y="3.5">Read from memory</text></g><defs><clipPath id="clip11"><path d="M-79,-33 L80,-33 L80,21 L-79,21 L-79,-33 z"/></clipPath></defs><g clip-path="url(#clip11)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,79,33)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="38.2813" x="-19.1406" xml:space="preserve" y="3.5">Key: key</text></g><defs><clipPath id="clip12"><path d="M-4,-46 L155,-46 L155,8 L-4,8 L-4,-46 z"/></clipPath></defs><g clip-path="url(#clip12)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,4,46)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="96.5" x="0" xml:space="preserve" y="3.5">GOcontroll V4.3.2-rc1</text></g><defs><clipPath id="clip17"><path d="M-2.5,-2.5 L161.5,-2.5 L161.5,51.5 L-2.5,51.5 L-2.5,-2.5 z"/></clipPath></defs><g clip-path="url(#clip17)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,2.5,2.5)"><path d="M0,0 L155,0 L155,50 L0,50 L0,0 z" fill-rule="evenodd" vector-effect="none"/></g></g><!--generated on ubuntu @ 2024-07-25 14:37:27 CEST--></svg>

__MWOPC_PART_BEGIN__ /simulink/libraryBrowser/Memory@20@store/Variable@20@to@20@memory/Memory@20@write.svg
<?xml version="1.0" encoding="UTF-8"?><svg width="43.3917mm" height="13.7583mm" viewBox="0 0 164 52" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><g fill="none" stroke="black" stroke-width="1" fill-rule="evenodd" stroke-linecap="square" stroke-linejoin="bevel"><g clip-path="none" fill="none" opacity="1" stroke="none" stroke-opacity="0" transform="matrix(1,0,0,1,0,0)"><path d="M0,0 L164,0 L164,52 L0,52 L0,0 z" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip3"><path d="M7,26 L-157,26 L-157,-26 L7,-26 L7,26 z"/></clipPath></defs><g clip-path="url(#clip3)" fill="none" opacity="1" stroke="#000000" stroke-linecap="round" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="2" transform="matrix(-1,0,0,-1,7,26)"><path d="M4.5,-5.5 L-0.5,-0.5 L4.5,4.5" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip6"><path d="M-7,-2 L157,-2 L157,50 L-7,50 L-7,-2 z"/></clipPath></defs><g clip-path="url(#clip6)" fill="#ffaa00" fill-opacity="1" opacity="1" stroke="none" stroke-opacity="0" transform="matrix(1,0,0,1,7,2)"><path d="M0,0 L155,0 L155,48 L0,48 L0,0 z" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip10"><path d="M-79,-20 L80,-20 L80,32 L-79,32 L-79,-20 z"/></clipPath></defs><g clip-path="url(#clip10)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,84,20)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="73.2188" x="-36.6094" xml:space="preserve" y="3.5">Store in memory</text></g><defs><clipPath id="clip11"><path d="M-79,-32 L80,-32 L80,20 L-79,20 L-79,-32 z"/></clipPath></defs><g clip-path="url(#clip11)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,84,32)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="38.2813" x="-19.1406" xml:space="preserve" y="3.5">Key: key</text></g><defs><clipPath id="clip12"><path d="M-4,-44 L155,-44 L155,8 L-4,8 L-4,-44 z"/></clipPath></defs><g clip-path="url(#clip12)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,9,44)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="96.5" x="0" xml:space="preserve" y="3.5">GOcontroll V4.3.2-rc1</text></g><defs><clipPath id="clip17"><path d="M-7.5,-2.5 L156.5,-2.5 L156.5,49.5 L-7.5,49.5 L-7.5,-2.5 z"/></clipPath></defs><g clip-path="url(#clip17)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,7.5,2.5)"><path d="M0,0 L155,0 L155,48 L0,48 L0,0 z" fill-rule="evenodd" vector-effect="none"/></g></g><!--generated on ubuntu @ 2024-07-25 14:37:27 CEST--></svg>

__MWOPC_PART_BEGIN__ /simulink/libraryBrowser/Modules.svg
<?xml version="1.0" encoding="UTF-8"?><svg width="27.5167mm" height="12.1708mm" viewBox="0 0 104 46" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><g fill="none" stroke="black" stroke-width="1" fill-rule="evenodd" stroke-linecap="square" stroke-linejoin="bevel"><g clip-path="none" fill="none" opacity="1" stroke="none" stroke-opacity="0" transform="matrix(1,0,0,1,0,0)"><path d="M0,0 L104,0 L104,46 L0,46 L0,0 z" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip3"><path d="M-2,-2 L102,-2 L102,44 L-2,44 L-2,-2 z"/></clipPath></defs><g clip-path="url(#clip3)" fill="#ffaa00" fill-opacity="1" opacity="1" stroke="none" stroke-opacity="0" transform="matrix(1,0,0,1,2,2)"><path d="M0,0 L100,0 L100,42 L0,42 L0,0 z" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip7"><path d="M-52,-23 L52,-23 L52,23 L-52,23 L-52,-23 z"/></clipPath></defs><g clip-path="url(#clip7)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,52,23)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="37.7344" x="-18.8594" xml:space="preserve" y="3.5">Modules</text></g><defs><clipPath id="clip12"><path d="M-2.5,-2.5 L101.5,-2.5 L101.5,43.5 L-2.5,43.5 L-2.5,-2.5 z"/></clipPath></defs><g clip-path="url(#clip12)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,2.5,2.5)"><path d="M0,0 L100,0 L100,42 L0,42 L0,0 z" fill-rule="evenodd" vector-effect="none"/></g></g><!--generated on ubuntu @ 2024-07-25 14:37:27 CEST--></svg>

__MWOPC_PART_BEGIN__ /simulink/libraryBrowser/Modules/Bridge@20@Module.svg
<?xml version="1.0" encoding="UTF-8"?><svg width="30.1625mm" height="12.1708mm" viewBox="0 0 114 46" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><g fill="none" stroke="black" stroke-width="1" fill-rule="evenodd" stroke-linecap="square" stroke-linejoin="bevel"><g clip-path="none" fill="none" opacity="1" stroke="none" stroke-opacity="0" transform="matrix(1,0,0,1,0,0)"><path d="M0,0 L114,0 L114,46 L0,46 L0,0 z" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip3"><path d="M-2,-2 L112,-2 L112,44 L-2,44 L-2,-2 z"/></clipPath></defs><g clip-path="url(#clip3)" fill="#ffaa00" fill-opacity="1" opacity="1" stroke="none" stroke-opacity="0" transform="matrix(1,0,0,1,2,2)"><path d="M0,0 L110,0 L110,42 L0,42 L0,0 z" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip7"><path d="M-57,-23 L57,-23 L57,23 L-57,23 L-57,-23 z"/></clipPath></defs><g clip-path="url(#clip7)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,57,23)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="64.3438" x="-32.1719" xml:space="preserve" y="3.5">Bridge Module</text></g><defs><clipPath id="clip12"><path d="M-2.5,-2.5 L111.5,-2.5 L111.5,43.5 L-2.5,43.5 L-2.5,-2.5 z"/></clipPath></defs><g clip-path="url(#clip12)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,2.5,2.5)"><path d="M0,0 L110,0 L110,42 L0,42 L0,0 z" fill-rule="evenodd" vector-effect="none"/></g></g><!--generated on ubuntu @ 2024-07-25 14:37:27 CEST--></svg>

__MWOPC_PART_BEGIN__ /simulink/libraryBrowser/Modules/Bridge@20@Module/Bridge@20@Module.svg
<?xml version="1.0" encoding="UTF-8"?><svg width="67.2042mm" height="20.9021mm" viewBox="0 0 254 79" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><g fill="none" stroke="black" stroke-width="1" fill-rule="evenodd" stroke-linecap="square" stroke-linejoin="bevel"><g clip-path="none" fill="none" opacity="1" stroke="none" stroke-opacity="0" transform="matrix(1,0,0,1,0,0)"><path d="M0,0 L254,0 L254,79 L0,79 L0,0 z" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip3"><path d="M7,57 L-247,57 L-247,-22 L7,-22 L7,57 z"/></clipPath></defs><g clip-path="url(#clip3)" fill="none" opacity="1" stroke="#000000" stroke-linecap="round" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="2" transform="matrix(-1,0,0,-1,7,57)"><path d="M4.5,-5.5 L-0.5,-0.5 L4.5,4.5" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip6"><path d="M7,22 L-247,22 L-247,-57 L7,-57 L7,22 z"/></clipPath></defs><g clip-path="url(#clip6)" fill="none" opacity="1" stroke="#000000" stroke-linecap="round" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="2" transform="matrix(-1,0,0,-1,7,22)"><path d="M4.5,-5.5 L-0.5,-0.5 L4.5,4.5" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip9"><path d="M-7,-2 L247,-2 L247,77 L-7,77 L-7,-2 z"/></clipPath></defs><g clip-path="url(#clip9)" fill="#ffaa00" fill-opacity="1" opacity="1" stroke="none" stroke-opacity="0" transform="matrix(1,0,0,1,7,2)"><path d="M0,0 L245,0 L245,75 L0,75 L0,0 z" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip13"><path d="M-124,-21 L125,-21 L125,58 L-124,58 L-124,-21 z"/></clipPath></defs><g clip-path="url(#clip13)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,129,21)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="64.3438" x="-32.1719" xml:space="preserve" y="3.5">Bridge Module</text></g><defs><clipPath id="clip14"><path d="M-124,-33 L125,-33 L125,46 L-124,46 L-124,-33 z"/></clipPath></defs><g clip-path="url(#clip14)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,129,33)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="61" x="-30.5" xml:space="preserve" y="3.5">Module Slot 1</text></g><defs><clipPath id="clip15"><path d="M-124,-57 L125,-57 L125,22 L-124,22 L-124,-57 z"/></clipPath></defs><g clip-path="url(#clip15)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,129,57)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="106.484" x="-53.2344" xml:space="preserve" y="3.5"> Controller Connector: A</text></g><defs><clipPath id="clip16"><path d="M-5,-22 L244,-22 L244,57 L-5,57 L-5,-22 z"/></clipPath></defs><g clip-path="url(#clip16)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,10,22)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="55.25" x="0" xml:space="preserve" y="3.5">Pin 11,12,13</text></g><defs><clipPath id="clip17"><path d="M-5,-57 L244,-57 L244,22 L-5,22 L-5,-57 z"/></clipPath></defs><g clip-path="url(#clip17)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,10,57)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="56" x="0" xml:space="preserve" y="3.5">Pin 17,18,19</text></g><defs><clipPath id="clip18"><path d="M-4,-71 L245,-71 L245,8 L-4,8 L-4,-71 z"/></clipPath></defs><g clip-path="url(#clip18)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,9,71)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="96.5" x="0" xml:space="preserve" y="3.5">GOcontroll V4.3.2-rc1</text></g><defs><clipPath id="clip23"><path d="M-7.5,-2.5 L246.5,-2.5 L246.5,76.5 L-7.5,76.5 L-7.5,-2.5 z"/></clipPath></defs><g clip-path="url(#clip23)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,7.5,2.5)"><path d="M0,0 L245,0 L245,75 L0,75 L0,0 z" fill-rule="evenodd" vector-effect="none"/></g></g><!--generated on ubuntu @ 2024-07-25 14:37:27 CEST--></svg>

__MWOPC_PART_BEGIN__ /simulink/libraryBrowser/Modules/Bridge@20@Module/Bridge@20@Module@20@Monitor.svg
<?xml version="1.0" encoding="UTF-8"?><svg width="67.2042mm" height="21.6958mm" viewBox="0 0 254 82" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><g fill="none" stroke="black" stroke-width="1" fill-rule="evenodd" stroke-linecap="square" stroke-linejoin="bevel"><g clip-path="none" fill="none" opacity="1" stroke="none" stroke-opacity="0" transform="matrix(1,0,0,1,0,0)"><path d="M0,0 L254,0 L254,82 L0,82 L0,0 z" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip3"><path d="M-247,-51 L7,-51 L7,31 L-247,31 L-247,-51 z"/></clipPath></defs><g clip-path="url(#clip3)" fill="none" opacity="1" stroke="#000000" stroke-linecap="round" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="2" transform="matrix(1,0,0,1,247,51)"><path d="M0.5,-4.5 L5.5,0.5 L0.5,5.5" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip6"><path d="M-247,-71 L7,-71 L7,11 L-247,11 L-247,-71 z"/></clipPath></defs><g clip-path="url(#clip6)" fill="none" opacity="1" stroke="#000000" stroke-linecap="round" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="2" transform="matrix(1,0,0,1,247,71)"><path d="M0.5,-4.5 L5.5,0.5 L0.5,5.5" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip9"><path d="M-247,-31 L7,-31 L7,51 L-247,51 L-247,-31 z"/></clipPath></defs><g clip-path="url(#clip9)" fill="none" opacity="1" stroke="#000000" stroke-linecap="round" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="2" transform="matrix(1,0,0,1,247,31)"><path d="M0.5,-4.5 L5.5,0.5 L0.5,5.5" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip12"><path d="M-247,-11 L7,-11 L7,71 L-247,71 L-247,-11 z"/></clipPath></defs><g clip-path="url(#clip12)" fill="none" opacity="1" stroke="#000000" stroke-linecap="round" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="2" transform="matrix(1,0,0,1,247,11)"><path d="M0.5,-4.5 L5.5,0.5 L0.5,5.5" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip15"><path d="M-2,-2 L252,-2 L252,80 L-2,80 L-2,-2 z"/></clipPath></defs><g clip-path="url(#clip15)" fill="#ffaa00" fill-opacity="1" opacity="1" stroke="none" stroke-opacity="0" transform="matrix(1,0,0,1,2,2)"><path d="M0,0 L245,0 L245,78 L0,78 L0,0 z" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip19"><path d="M-124,-23 L125,-23 L125,59 L-124,59 L-124,-23 z"/></clipPath></defs><g clip-path="url(#clip19)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,124,23)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="100.391" x="-50.1875" xml:space="preserve" y="3.5">Bridge Module Monitor</text></g><defs><clipPath id="clip20"><path d="M-124,-35 L125,-35 L125,47 L-124,47 L-124,-35 z"/></clipPath></defs><g clip-path="url(#clip20)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,124,35)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="59.3438" x="-29.6719" xml:space="preserve" y="3.5">Module slot 1</text></g><defs><clipPath id="clip21"><path d="M-124,-59 L125,-59 L125,23 L-124,23 L-124,-59 z"/></clipPath></defs><g clip-path="url(#clip21)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,124,59)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="106.484" x="-53.2344" xml:space="preserve" y="3.5"> Controller Connector: A</text></g><defs><clipPath id="clip22"><path d="M-244,-11 L5,-11 L5,71 L-244,71 L-244,-11 z"/></clipPath></defs><g clip-path="url(#clip22)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,244,11)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="56.0156" x="-56.0156" xml:space="preserve" y="3.5">Temperature</text></g><defs><clipPath id="clip23"><path d="M-244,-31 L5,-31 L5,51 L-244,51 L-244,-31 z"/></clipPath></defs><g clip-path="url(#clip23)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,244,31)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="51.5781" x="-51.5781" xml:space="preserve" y="3.5">Groundshift</text></g><defs><clipPath id="clip24"><path d="M-244,-51 L5,-51 L5,31 L-244,31 L-244,-51 z"/></clipPath></defs><g clip-path="url(#clip24)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,244,51)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="55.25" x="-55.25" xml:space="preserve" y="3.5">Pin 11,12,13</text></g><defs><clipPath id="clip25"><path d="M-244,-71 L5,-71 L5,11 L-244,11 L-244,-71 z"/></clipPath></defs><g clip-path="url(#clip25)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,244,71)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="56" x="-56" xml:space="preserve" y="3.5">Pin 17,18,19</text></g><defs><clipPath id="clip26"><path d="M-4,-74 L245,-74 L245,8 L-4,8 L-4,-74 z"/></clipPath></defs><g clip-path="url(#clip26)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,4,74)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="96.5" x="0" xml:space="preserve" y="3.5">GOcontroll V4.3.2-rc1</text></g><defs><clipPath id="clip31"><path d="M-2.5,-2.5 L251.5,-2.5 L251.5,79.5 L-2.5,79.5 L-2.5,-2.5 z"/></clipPath></defs><g clip-path="url(#clip31)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,2.5,2.5)"><path d="M0,0 L245,0 L245,78 L0,78 L0,0 z" fill-rule="evenodd" vector-effect="none"/></g></g><!--generated on ubuntu @ 2024-07-25 14:37:27 CEST--></svg>

__MWOPC_PART_BEGIN__ /simulink/libraryBrowser/Modules/Input@20@Module.svg
<?xml version="1.0" encoding="UTF-8"?><svg width="30.1625mm" height="12.1708mm" viewBox="0 0 114 46" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><g fill="none" stroke="black" stroke-width="1" fill-rule="evenodd" stroke-linecap="square" stroke-linejoin="bevel"><g clip-path="none" fill="none" opacity="1" stroke="none" stroke-opacity="0" transform="matrix(1,0,0,1,0,0)"><path d="M0,0 L114,0 L114,46 L0,46 L0,0 z" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip3"><path d="M-2,-2 L112,-2 L112,44 L-2,44 L-2,-2 z"/></clipPath></defs><g clip-path="url(#clip3)" fill="#ffaa00" fill-opacity="1" opacity="1" stroke="none" stroke-opacity="0" transform="matrix(1,0,0,1,2,2)"><path d="M0,0 L110,0 L110,42 L0,42 L0,0 z" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip7"><path d="M-57,-23 L57,-23 L57,23 L-57,23 L-57,-23 z"/></clipPath></defs><g clip-path="url(#clip7)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,57,23)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="57.6719" x="-28.8281" xml:space="preserve" y="3.5">Input Module</text></g><defs><clipPath id="clip12"><path d="M-2.5,-2.5 L111.5,-2.5 L111.5,43.5 L-2.5,43.5 L-2.5,-2.5 z"/></clipPath></defs><g clip-path="url(#clip12)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,2.5,2.5)"><path d="M0,0 L110,0 L110,42 L0,42 L0,0 z" fill-rule="evenodd" vector-effect="none"/></g></g><!--generated on ubuntu @ 2024-07-25 14:37:27 CEST--></svg>

__MWOPC_PART_BEGIN__ /simulink/libraryBrowser/Modules/Input@20@Module/Input@20@Module@20@4@2D@20@20@mA@20@@28@10@20@channel@29@.svg
<?xml version="1.0" encoding="UTF-8"?><svg width="51.3292mm" height="43.9208mm" viewBox="0 0 194 166" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><g fill="none" stroke="black" stroke-width="1" fill-rule="evenodd" stroke-linecap="square" stroke-linejoin="bevel"><g clip-path="none" fill="none" opacity="1" stroke="none" stroke-opacity="0" transform="matrix(1,0,0,1,0,0)"><path d="M0,0 L194,0 L194,166 L0,166 L0,0 z" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip3"><path d="M-187,-158 L7,-158 L7,8 L-187,8 L-187,-158 z"/></clipPath></defs><g clip-path="url(#clip3)" fill="none" opacity="1" stroke="#000000" stroke-linecap="round" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="2" transform="matrix(1,0,0,1,187,158)"><path d="M0.5,-4.5 L5.5,0.5 L0.5,5.5" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip6"><path d="M-187,-98 L7,-98 L7,68 L-187,68 L-187,-98 z"/></clipPath></defs><g clip-path="url(#clip6)" fill="none" opacity="1" stroke="#000000" stroke-linecap="round" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="2" transform="matrix(1,0,0,1,187,98)"><path d="M0.5,-4.5 L5.5,0.5 L0.5,5.5" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip9"><path d="M-187,-128 L7,-128 L7,38 L-187,38 L-187,-128 z"/></clipPath></defs><g clip-path="url(#clip9)" fill="none" opacity="1" stroke="#000000" stroke-linecap="round" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="2" transform="matrix(1,0,0,1,187,128)"><path d="M0.5,-4.5 L5.5,0.5 L0.5,5.5" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip12"><path d="M-187,-113 L7,-113 L7,53 L-187,53 L-187,-113 z"/></clipPath></defs><g clip-path="url(#clip12)" fill="none" opacity="1" stroke="#000000" stroke-linecap="round" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="2" transform="matrix(1,0,0,1,187,113)"><path d="M0.5,-4.5 L5.5,0.5 L0.5,5.5" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip15"><path d="M-187,-83 L7,-83 L7,83 L-187,83 L-187,-83 z"/></clipPath></defs><g clip-path="url(#clip15)" fill="none" opacity="1" stroke="#000000" stroke-linecap="round" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="2" transform="matrix(1,0,0,1,187,83)"><path d="M0.5,-4.5 L5.5,0.5 L0.5,5.5" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip18"><path d="M-187,-68 L7,-68 L7,98 L-187,98 L-187,-68 z"/></clipPath></defs><g clip-path="url(#clip18)" fill="none" opacity="1" stroke="#000000" stroke-linecap="round" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="2" transform="matrix(1,0,0,1,187,68)"><path d="M0.5,-4.5 L5.5,0.5 L0.5,5.5" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip21"><path d="M-187,-53 L7,-53 L7,113 L-187,113 L-187,-53 z"/></clipPath></defs><g clip-path="url(#clip21)" fill="none" opacity="1" stroke="#000000" stroke-linecap="round" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="2" transform="matrix(1,0,0,1,187,53)"><path d="M0.5,-4.5 L5.5,0.5 L0.5,5.5" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip24"><path d="M-187,-38 L7,-38 L7,128 L-187,128 L-187,-38 z"/></clipPath></defs><g clip-path="url(#clip24)" fill="none" opacity="1" stroke="#000000" stroke-linecap="round" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="2" transform="matrix(1,0,0,1,187,38)"><path d="M0.5,-4.5 L5.5,0.5 L0.5,5.5" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip27"><path d="M-187,-143 L7,-143 L7,23 L-187,23 L-187,-143 z"/></clipPath></defs><g clip-path="url(#clip27)" fill="none" opacity="1" stroke="#000000" stroke-linecap="round" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="2" transform="matrix(1,0,0,1,187,143)"><path d="M0.5,-4.5 L5.5,0.5 L0.5,5.5" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip30"><path d="M-187,-23 L7,-23 L7,143 L-187,143 L-187,-23 z"/></clipPath></defs><g clip-path="url(#clip30)" fill="none" opacity="1" stroke="#000000" stroke-linecap="round" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="2" transform="matrix(1,0,0,1,187,23)"><path d="M0.5,-4.5 L5.5,0.5 L0.5,5.5" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip33"><path d="M-187,-8 L7,-8 L7,158 L-187,158 L-187,-8 z"/></clipPath></defs><g clip-path="url(#clip33)" fill="none" opacity="1" stroke="#000000" stroke-linecap="round" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="2" transform="matrix(1,0,0,1,187,8)"><path d="M0.5,-4.5 L5.5,0.5 L0.5,5.5" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip36"><path d="M-2,-2 L192,-2 L192,164 L-2,164 L-2,-2 z"/></clipPath></defs><g clip-path="url(#clip36)" fill="#ffaa00" fill-opacity="1" opacity="1" stroke="none" stroke-opacity="0" transform="matrix(1,0,0,1,2,2)"><path d="M0,0 L185,0 L185,162 L0,162 L0,0 z" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip40"><path d="M-94,-65 L95,-65 L95,101 L-94,101 L-94,-65 z"/></clipPath></defs><g clip-path="url(#clip40)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,94,65)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="100.375" x="-50.1875" xml:space="preserve" y="3.5">4-20 mA Input Module </text></g><defs><clipPath id="clip41"><path d="M-94,-77 L95,-77 L95,89 L-94,89 L-94,-77 z"/></clipPath></defs><g clip-path="url(#clip41)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,94,77)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="59.3438" x="-29.6719" xml:space="preserve" y="3.5">Module slot 1</text></g><defs><clipPath id="clip42"><path d="M-94,-101 L95,-101 L95,65 L-94,65 L-94,-101 z"/></clipPath></defs><g clip-path="url(#clip42)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,94,101)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="106.484" x="-53.2344" xml:space="preserve" y="3.5"> Controller Connector: A</text></g><defs><clipPath id="clip43"><path d="M-184,-8 L5,-8 L5,158 L-184,158 L-184,-8 z"/></clipPath></defs><g clip-path="url(#clip43)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,184,8)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="28.2813" x="-28.2813" xml:space="preserve" y="3.5">Status</text></g><defs><clipPath id="clip44"><path d="M-184,-23 L5,-23 L5,143 L-184,143 L-184,-23 z"/></clipPath></defs><g clip-path="url(#clip44)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,184,23)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="22.7344" x="-22.7344" xml:space="preserve" y="3.5">Pin 7</text></g><defs><clipPath id="clip45"><path d="M-184,-38 L5,-38 L5,128 L-184,128 L-184,-38 z"/></clipPath></defs><g clip-path="url(#clip45)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,184,38)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="28.2813" x="-28.2813" xml:space="preserve" y="3.5">Pin 13</text></g><defs><clipPath id="clip46"><path d="M-184,-53 L5,-53 L5,113 L-184,113 L-184,-53 z"/></clipPath></defs><g clip-path="url(#clip46)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,184,53)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="28.2813" x="-28.2813" xml:space="preserve" y="3.5">Pin 19</text></g><defs><clipPath id="clip47"><path d="M-184,-68 L5,-68 L5,98 L-184,98 L-184,-68 z"/></clipPath></defs><g clip-path="url(#clip47)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,184,68)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="22.7344" x="-22.7344" xml:space="preserve" y="3.5">Pin 6</text></g><defs><clipPath id="clip48"><path d="M-184,-83 L5,-83 L5,83 L-184,83 L-184,-83 z"/></clipPath></defs><g clip-path="url(#clip48)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,184,83)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="28.2813" x="-28.2813" xml:space="preserve" y="3.5">Pin 12</text></g><defs><clipPath id="clip49"><path d="M-184,-98 L5,-98 L5,68 L-184,68 L-184,-98 z"/></clipPath></defs><g clip-path="url(#clip49)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,184,98)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="28.2813" x="-28.2813" xml:space="preserve" y="3.5">Pin 18</text></g><defs><clipPath id="clip50"><path d="M-184,-113 L5,-113 L5,53 L-184,53 L-184,-113 z"/></clipPath></defs><g clip-path="url(#clip50)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,184,113)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="22.7344" x="-22.7344" xml:space="preserve" y="3.5">Pin 5</text></g><defs><clipPath id="clip51"><path d="M-184,-128 L5,-128 L5,38 L-184,38 L-184,-128 z"/></clipPath></defs><g clip-path="url(#clip51)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,184,128)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="27.5313" x="-27.5313" xml:space="preserve" y="3.5">Pin 11</text></g><defs><clipPath id="clip52"><path d="M-184,-143 L5,-143 L5,23 L-184,23 L-184,-143 z"/></clipPath></defs><g clip-path="url(#clip52)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,184,143)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="28.2813" x="-28.2813" xml:space="preserve" y="3.5">Pin 17</text></g><defs><clipPath id="clip53"><path d="M-184,-158 L5,-158 L5,8 L-184,8 L-184,-158 z"/></clipPath></defs><g clip-path="url(#clip53)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,184,158)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="22.7344" x="-22.7344" xml:space="preserve" y="3.5">Pin 4</text></g><defs><clipPath id="clip54"><path d="M-4,-158 L185,-158 L185,8 L-4,8 L-4,-158 z"/></clipPath></defs><g clip-path="url(#clip54)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,4,158)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="96.5" x="0" xml:space="preserve" y="3.5">GOcontroll V4.3.2-rc1</text></g><defs><clipPath id="clip59"><path d="M-2.5,-2.5 L191.5,-2.5 L191.5,163.5 L-2.5,163.5 L-2.5,-2.5 z"/></clipPath></defs><g clip-path="url(#clip59)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,2.5,2.5)"><path d="M0,0 L185,0 L185,162 L0,162 L0,0 z" fill-rule="evenodd" vector-effect="none"/></g></g><!--generated on ubuntu @ 2024-07-25 14:37:27 CEST--></svg>

__MWOPC_PART_BEGIN__ /simulink/libraryBrowser/Modules/Input@20@Module/Input@20@Module@20@@28@10@20@channel@29@.svg
<?xml version="1.0" encoding="UTF-8"?><svg width="51.3292mm" height="44.1854mm" viewBox="0 0 194 167" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><g fill="none" stroke="black" stroke-width="1" fill-rule="evenodd" stroke-linecap="square" stroke-linejoin="bevel"><g clip-path="none" fill="none" opacity="1" stroke="none" stroke-opacity="0" transform="matrix(1,0,0,1,0,0)"><path d="M0,0 L194,0 L194,167 L0,167 L0,0 z" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip3"><path d="M-187,-151 L7,-151 L7,16 L-187,16 L-187,-151 z"/></clipPath></defs><g clip-path="url(#clip3)" fill="none" opacity="1" stroke="#000000" stroke-linecap="round" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="2" transform="matrix(1,0,0,1,187,151)"><path d="M0.5,-4.5 L5.5,0.5 L0.5,5.5" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip6"><path d="M-187,-121 L7,-121 L7,46 L-187,46 L-187,-121 z"/></clipPath></defs><g clip-path="url(#clip6)" fill="none" opacity="1" stroke="#000000" stroke-linecap="round" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="2" transform="matrix(1,0,0,1,187,121)"><path d="M0.5,-4.5 L5.5,0.5 L0.5,5.5" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip9"><path d="M-187,-106 L7,-106 L7,61 L-187,61 L-187,-106 z"/></clipPath></defs><g clip-path="url(#clip9)" fill="none" opacity="1" stroke="#000000" stroke-linecap="round" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="2" transform="matrix(1,0,0,1,187,106)"><path d="M0.5,-4.5 L5.5,0.5 L0.5,5.5" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip12"><path d="M-187,-136 L7,-136 L7,31 L-187,31 L-187,-136 z"/></clipPath></defs><g clip-path="url(#clip12)" fill="none" opacity="1" stroke="#000000" stroke-linecap="round" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="2" transform="matrix(1,0,0,1,187,136)"><path d="M0.5,-4.5 L5.5,0.5 L0.5,5.5" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip15"><path d="M-187,-91 L7,-91 L7,76 L-187,76 L-187,-91 z"/></clipPath></defs><g clip-path="url(#clip15)" fill="none" opacity="1" stroke="#000000" stroke-linecap="round" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="2" transform="matrix(1,0,0,1,187,91)"><path d="M0.5,-4.5 L5.5,0.5 L0.5,5.5" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip18"><path d="M-187,-76 L7,-76 L7,91 L-187,91 L-187,-76 z"/></clipPath></defs><g clip-path="url(#clip18)" fill="none" opacity="1" stroke="#000000" stroke-linecap="round" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="2" transform="matrix(1,0,0,1,187,76)"><path d="M0.5,-4.5 L5.5,0.5 L0.5,5.5" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip21"><path d="M-187,-61 L7,-61 L7,106 L-187,106 L-187,-61 z"/></clipPath></defs><g clip-path="url(#clip21)" fill="none" opacity="1" stroke="#000000" stroke-linecap="round" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="2" transform="matrix(1,0,0,1,187,61)"><path d="M0.5,-4.5 L5.5,0.5 L0.5,5.5" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip24"><path d="M-187,-46 L7,-46 L7,121 L-187,121 L-187,-46 z"/></clipPath></defs><g clip-path="url(#clip24)" fill="none" opacity="1" stroke="#000000" stroke-linecap="round" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="2" transform="matrix(1,0,0,1,187,46)"><path d="M0.5,-4.5 L5.5,0.5 L0.5,5.5" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip27"><path d="M-187,-31 L7,-31 L7,136 L-187,136 L-187,-31 z"/></clipPath></defs><g clip-path="url(#clip27)" fill="none" opacity="1" stroke="#000000" stroke-linecap="round" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="2" transform="matrix(1,0,0,1,187,31)"><path d="M0.5,-4.5 L5.5,0.5 L0.5,5.5" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip30"><path d="M-187,-16 L7,-16 L7,151 L-187,151 L-187,-16 z"/></clipPath></defs><g clip-path="url(#clip30)" fill="none" opacity="1" stroke="#000000" stroke-linecap="round" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="2" transform="matrix(1,0,0,1,187,16)"><path d="M0.5,-4.5 L5.5,0.5 L0.5,5.5" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip33"><path d="M-2,-2 L192,-2 L192,165 L-2,165 L-2,-2 z"/></clipPath></defs><g clip-path="url(#clip33)" fill="#ffaa00" fill-opacity="1" opacity="1" stroke="none" stroke-opacity="0" transform="matrix(1,0,0,1,2,2)"><path d="M0,0 L185,0 L185,163 L0,163 L0,0 z" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip37"><path d="M-94,-65 L95,-65 L95,102 L-94,102 L-94,-65 z"/></clipPath></defs><g clip-path="url(#clip37)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,94,65)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="114.234" x="-57.1094" xml:space="preserve" y="3.5">10 Channel Input Module </text></g><defs><clipPath id="clip38"><path d="M-94,-77 L95,-77 L95,90 L-94,90 L-94,-77 z"/></clipPath></defs><g clip-path="url(#clip38)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,94,77)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="59.3438" x="-29.6719" xml:space="preserve" y="3.5">Module slot 1</text></g><defs><clipPath id="clip39"><path d="M-94,-101 L95,-101 L95,66 L-94,66 L-94,-101 z"/></clipPath></defs><g clip-path="url(#clip39)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,94,101)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="106.484" x="-53.2344" xml:space="preserve" y="3.5"> Controller Connector: A</text></g><defs><clipPath id="clip40"><path d="M-184,-16 L5,-16 L5,151 L-184,151 L-184,-16 z"/></clipPath></defs><g clip-path="url(#clip40)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,184,16)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="28.2813" x="-28.2813" xml:space="preserve" y="3.5">Pin 13</text></g><defs><clipPath id="clip41"><path d="M-184,-31 L5,-31 L5,136 L-184,136 L-184,-31 z"/></clipPath></defs><g clip-path="url(#clip41)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,184,31)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="28.2813" x="-28.2813" xml:space="preserve" y="3.5">Pin 19</text></g><defs><clipPath id="clip42"><path d="M-184,-46 L5,-46 L5,121 L-184,121 L-184,-46 z"/></clipPath></defs><g clip-path="url(#clip42)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,184,46)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="28.2813" x="-28.2813" xml:space="preserve" y="3.5">Pin 12</text></g><defs><clipPath id="clip43"><path d="M-184,-61 L5,-61 L5,106 L-184,106 L-184,-61 z"/></clipPath></defs><g clip-path="url(#clip43)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,184,61)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="28.2813" x="-28.2813" xml:space="preserve" y="3.5">Pin 18</text></g><defs><clipPath id="clip44"><path d="M-184,-76 L5,-76 L5,91 L-184,91 L-184,-76 z"/></clipPath></defs><g clip-path="url(#clip44)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,184,76)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="27.5313" x="-27.5313" xml:space="preserve" y="3.5">Pin 11</text></g><defs><clipPath id="clip45"><path d="M-184,-91 L5,-91 L5,76 L-184,76 L-184,-91 z"/></clipPath></defs><g clip-path="url(#clip45)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,184,91)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="28.2813" x="-28.2813" xml:space="preserve" y="3.5">Pin 17</text></g><defs><clipPath id="clip46"><path d="M-184,-106 L5,-106 L5,61 L-184,61 L-184,-106 z"/></clipPath></defs><g clip-path="url(#clip46)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,184,106)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="28.2813" x="-28.2813" xml:space="preserve" y="3.5">Pin 25</text></g><defs><clipPath id="clip47"><path d="M-184,-121 L5,-121 L5,46 L-184,46 L-184,-121 z"/></clipPath></defs><g clip-path="url(#clip47)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,184,121)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="28.2813" x="-28.2813" xml:space="preserve" y="3.5">Pin 24</text></g><defs><clipPath id="clip48"><path d="M-184,-136 L5,-136 L5,31 L-184,31 L-184,-136 z"/></clipPath></defs><g clip-path="url(#clip48)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,184,136)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="22.7344" x="-22.7344" xml:space="preserve" y="3.5">Pin 5</text></g><defs><clipPath id="clip49"><path d="M-184,-151 L5,-151 L5,16 L-184,16 L-184,-151 z"/></clipPath></defs><g clip-path="url(#clip49)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,184,151)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="22.7344" x="-22.7344" xml:space="preserve" y="3.5">Pin 4</text></g><defs><clipPath id="clip50"><path d="M-4,-159 L185,-159 L185,8 L-4,8 L-4,-159 z"/></clipPath></defs><g clip-path="url(#clip50)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,4,159)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="96.5" x="0" xml:space="preserve" y="3.5">GOcontroll V4.3.2-rc1</text></g><defs><clipPath id="clip55"><path d="M-2.5,-2.5 L191.5,-2.5 L191.5,164.5 L-2.5,164.5 L-2.5,-2.5 z"/></clipPath></defs><g clip-path="url(#clip55)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,2.5,2.5)"><path d="M0,0 L185,0 L185,163 L0,163 L0,0 z" fill-rule="evenodd" vector-effect="none"/></g></g><!--generated on ubuntu @ 2024-07-25 14:37:27 CEST--></svg>

__MWOPC_PART_BEGIN__ /simulink/libraryBrowser/Modules/Input@20@Module/Input@20@Module@20@@28@6@20@channel@29@.svg
<?xml version="1.0" encoding="UTF-8"?><svg width="51.3292mm" height="25.1354mm" viewBox="0 0 194 95" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><g fill="none" stroke="black" stroke-width="1" fill-rule="evenodd" stroke-linecap="square" stroke-linejoin="bevel"><g clip-path="none" fill="none" opacity="1" stroke="none" stroke-opacity="0" transform="matrix(1,0,0,1,0,0)"><path d="M0,0 L194,0 L194,95 L0,95 L0,0 z" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip3"><path d="M-187,-85 L7,-85 L7,10 L-187,10 L-187,-85 z"/></clipPath></defs><g clip-path="url(#clip3)" fill="none" opacity="1" stroke="#000000" stroke-linecap="round" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="2" transform="matrix(1,0,0,1,187,85)"><path d="M0.5,-4.5 L5.5,0.5 L0.5,5.5" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip6"><path d="M-187,-70 L7,-70 L7,25 L-187,25 L-187,-70 z"/></clipPath></defs><g clip-path="url(#clip6)" fill="none" opacity="1" stroke="#000000" stroke-linecap="round" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="2" transform="matrix(1,0,0,1,187,70)"><path d="M0.5,-4.5 L5.5,0.5 L0.5,5.5" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip9"><path d="M-187,-55 L7,-55 L7,40 L-187,40 L-187,-55 z"/></clipPath></defs><g clip-path="url(#clip9)" fill="none" opacity="1" stroke="#000000" stroke-linecap="round" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="2" transform="matrix(1,0,0,1,187,55)"><path d="M0.5,-4.5 L5.5,0.5 L0.5,5.5" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip12"><path d="M-187,-40 L7,-40 L7,55 L-187,55 L-187,-40 z"/></clipPath></defs><g clip-path="url(#clip12)" fill="none" opacity="1" stroke="#000000" stroke-linecap="round" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="2" transform="matrix(1,0,0,1,187,40)"><path d="M0.5,-4.5 L5.5,0.5 L0.5,5.5" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip15"><path d="M-187,-25 L7,-25 L7,70 L-187,70 L-187,-25 z"/></clipPath></defs><g clip-path="url(#clip15)" fill="none" opacity="1" stroke="#000000" stroke-linecap="round" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="2" transform="matrix(1,0,0,1,187,25)"><path d="M0.5,-4.5 L5.5,0.5 L0.5,5.5" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip18"><path d="M-187,-10 L7,-10 L7,85 L-187,85 L-187,-10 z"/></clipPath></defs><g clip-path="url(#clip18)" fill="none" opacity="1" stroke="#000000" stroke-linecap="round" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="2" transform="matrix(1,0,0,1,187,10)"><path d="M0.5,-4.5 L5.5,0.5 L0.5,5.5" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip21"><path d="M-2,-2 L192,-2 L192,93 L-2,93 L-2,-2 z"/></clipPath></defs><g clip-path="url(#clip21)" fill="#ffaa00" fill-opacity="1" opacity="1" stroke="none" stroke-opacity="0" transform="matrix(1,0,0,1,2,2)"><path d="M0,0 L185,0 L185,91 L0,91 L0,0 z" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip25"><path d="M-94,-29 L95,-29 L95,66 L-94,66 L-94,-29 z"/></clipPath></defs><g clip-path="url(#clip25)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,94,29)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="108.688" x="-54.3438" xml:space="preserve" y="3.5">6 Channel Input Module </text></g><defs><clipPath id="clip26"><path d="M-94,-41 L95,-41 L95,54 L-94,54 L-94,-41 z"/></clipPath></defs><g clip-path="url(#clip26)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,94,41)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="59.3438" x="-29.6719" xml:space="preserve" y="3.5">Module slot 1</text></g><defs><clipPath id="clip27"><path d="M-94,-65 L95,-65 L95,30 L-94,30 L-94,-65 z"/></clipPath></defs><g clip-path="url(#clip27)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,94,65)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="106.484" x="-53.2344" xml:space="preserve" y="3.5"> Controller Connector: A</text></g><defs><clipPath id="clip28"><path d="M-184,-10 L5,-10 L5,85 L-184,85 L-184,-10 z"/></clipPath></defs><g clip-path="url(#clip28)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,184,10)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="28.2813" x="-28.2813" xml:space="preserve" y="3.5">Pin 13</text></g><defs><clipPath id="clip29"><path d="M-184,-25 L5,-25 L5,70 L-184,70 L-184,-25 z"/></clipPath></defs><g clip-path="url(#clip29)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,184,25)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="28.2813" x="-28.2813" xml:space="preserve" y="3.5">Pin 19</text></g><defs><clipPath id="clip30"><path d="M-184,-40 L5,-40 L5,55 L-184,55 L-184,-40 z"/></clipPath></defs><g clip-path="url(#clip30)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,184,40)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="28.2813" x="-28.2813" xml:space="preserve" y="3.5">Pin 12</text></g><defs><clipPath id="clip31"><path d="M-184,-55 L5,-55 L5,40 L-184,40 L-184,-55 z"/></clipPath></defs><g clip-path="url(#clip31)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,184,55)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="28.2813" x="-28.2813" xml:space="preserve" y="3.5">Pin 18</text></g><defs><clipPath id="clip32"><path d="M-184,-70 L5,-70 L5,25 L-184,25 L-184,-70 z"/></clipPath></defs><g clip-path="url(#clip32)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,184,70)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="27.5313" x="-27.5313" xml:space="preserve" y="3.5">Pin 11</text></g><defs><clipPath id="clip33"><path d="M-184,-85 L5,-85 L5,10 L-184,10 L-184,-85 z"/></clipPath></defs><g clip-path="url(#clip33)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,184,85)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="28.2813" x="-28.2813" xml:space="preserve" y="3.5">Pin 17</text></g><defs><clipPath id="clip34"><path d="M-4,-87 L185,-87 L185,8 L-4,8 L-4,-87 z"/></clipPath></defs><g clip-path="url(#clip34)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,4,87)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="96.5" x="0" xml:space="preserve" y="3.5">GOcontroll V4.3.2-rc1</text></g><defs><clipPath id="clip39"><path d="M-2.5,-2.5 L191.5,-2.5 L191.5,92.5 L-2.5,92.5 L-2.5,-2.5 z"/></clipPath></defs><g clip-path="url(#clip39)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,2.5,2.5)"><path d="M0,0 L185,0 L185,91 L0,91 L0,0 z" fill-rule="evenodd" vector-effect="none"/></g></g><!--generated on ubuntu @ 2024-07-25 14:37:27 CEST--></svg>

__MWOPC_PART_BEGIN__ /simulink/libraryBrowser/Modules/Input@20@Module/Reset@20@Puls@20@Counter@20@@28@6@20@channel@29@.svg
<?xml version="1.0" encoding="UTF-8"?><svg width="51.3292mm" height="15.6104mm" viewBox="0 0 194 59" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><g fill="none" stroke="black" stroke-width="1" fill-rule="evenodd" stroke-linecap="square" stroke-linejoin="bevel"><g clip-path="none" fill="none" opacity="1" stroke="none" stroke-opacity="0" transform="matrix(1,0,0,1,0,0)"><path d="M0,0 L194,0 L194,59 L0,59 L0,0 z" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip3"><path d="M7,42 L-187,42 L-187,-17 L7,-17 L7,42 z"/></clipPath></defs><g clip-path="url(#clip3)" fill="none" opacity="1" stroke="#000000" stroke-linecap="round" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="2" transform="matrix(-1,0,0,-1,7,42)"><path d="M4.5,-5.5 L-0.5,-0.5 L4.5,4.5" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip6"><path d="M7,17 L-187,17 L-187,-42 L7,-42 L7,17 z"/></clipPath></defs><g clip-path="url(#clip6)" fill="none" opacity="1" stroke="#000000" stroke-linecap="round" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="2" transform="matrix(-1,0,0,-1,7,17)"><path d="M4.5,-5.5 L-0.5,-0.5 L4.5,4.5" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip9"><path d="M-7,-2 L187,-2 L187,57 L-7,57 L-7,-2 z"/></clipPath></defs><g clip-path="url(#clip9)" fill="#ffaa00" fill-opacity="1" opacity="1" stroke="none" stroke-opacity="0" transform="matrix(1,0,0,1,7,2)"><path d="M0,0 L185,0 L185,55 L0,55 L0,0 z" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip13"><path d="M-94,-17 L95,-17 L95,42 L-94,42 L-94,-17 z"/></clipPath></defs><g clip-path="url(#clip13)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,99,17)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="86.5313" x="-43.2656" xml:space="preserve" y="3.5">Reset Puls Counter</text></g><defs><clipPath id="clip14"><path d="M-94,-29 L95,-29 L95,30 L-94,30 L-94,-29 z"/></clipPath></defs><g clip-path="url(#clip14)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,99,29)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="61" x="-30.5" xml:space="preserve" y="3.5">Module Slot 1</text></g><defs><clipPath id="clip15"><path d="M-94,-41 L95,-41 L95,18 L-94,18 L-94,-41 z"/></clipPath></defs><g clip-path="url(#clip15)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,99,41)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="70.4219" x="-35.2031" xml:space="preserve" y="3.5">Input Channel 1</text></g><defs><clipPath id="clip16"><path d="M-4,-51 L185,-51 L185,8 L-4,8 L-4,-51 z"/></clipPath></defs><g clip-path="url(#clip16)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,9,51)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="96.5" x="0" xml:space="preserve" y="3.5">GOcontroll V4.3.2-rc1</text></g><defs><clipPath id="clip21"><path d="M-7.5,-2.5 L186.5,-2.5 L186.5,56.5 L-7.5,56.5 L-7.5,-2.5 z"/></clipPath></defs><g clip-path="url(#clip21)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,7.5,2.5)"><path d="M0,0 L185,0 L185,55 L0,55 L0,0 z" fill-rule="evenodd" vector-effect="none"/></g></g><!--generated on ubuntu @ 2024-07-25 14:37:27 CEST--></svg>

__MWOPC_PART_BEGIN__ /simulink/libraryBrowser/Modules/Output@20@Module.svg
<?xml version="1.0" encoding="UTF-8"?><svg width="30.1625mm" height="12.1708mm" viewBox="0 0 114 46" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><g fill="none" stroke="black" stroke-width="1" fill-rule="evenodd" stroke-linecap="square" stroke-linejoin="bevel"><g clip-path="none" fill="none" opacity="1" stroke="none" stroke-opacity="0" transform="matrix(1,0,0,1,0,0)"><path d="M0,0 L114,0 L114,46 L0,46 L0,0 z" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip3"><path d="M-2,-2 L112,-2 L112,44 L-2,44 L-2,-2 z"/></clipPath></defs><g clip-path="url(#clip3)" fill="#ffaa00" fill-opacity="1" opacity="1" stroke="none" stroke-opacity="0" transform="matrix(1,0,0,1,2,2)"><path d="M0,0 L110,0 L110,42 L0,42 L0,0 z" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip7"><path d="M-57,-23 L57,-23 L57,23 L-57,23 L-57,-23 z"/></clipPath></defs><g clip-path="url(#clip7)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,57,23)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="65.4375" x="-32.7188" xml:space="preserve" y="3.5">Output Module</text></g><defs><clipPath id="clip12"><path d="M-2.5,-2.5 L111.5,-2.5 L111.5,43.5 L-2.5,43.5 L-2.5,-2.5 z"/></clipPath></defs><g clip-path="url(#clip12)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,2.5,2.5)"><path d="M0,0 L110,0 L110,42 L0,42 L0,0 z" fill-rule="evenodd" vector-effect="none"/></g></g><!--generated on ubuntu @ 2024-07-25 14:37:27 CEST--></svg>

__MWOPC_PART_BEGIN__ /simulink/libraryBrowser/Modules/Output@20@Module/Output@20@Module@20@@28@10@20@channel@29@.svg
<?xml version="1.0" encoding="UTF-8"?><svg width="59.2667mm" height="45.2437mm" viewBox="0 0 224 171" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><g fill="none" stroke="black" stroke-width="1" fill-rule="evenodd" stroke-linecap="square" stroke-linejoin="bevel"><g clip-path="none" fill="none" opacity="1" stroke="none" stroke-opacity="0" transform="matrix(1,0,0,1,0,0)"><path d="M0,0 L224,0 L224,171 L0,171 L0,0 z" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip3"><path d="M7,153 L-217,153 L-217,-18 L7,-18 L7,153 z"/></clipPath></defs><g clip-path="url(#clip3)" fill="none" opacity="1" stroke="#000000" stroke-linecap="round" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="2" transform="matrix(-1,0,0,-1,7,153)"><path d="M4.5,-5.5 L-0.5,-0.5 L4.5,4.5" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip6"><path d="M7,138 L-217,138 L-217,-33 L7,-33 L7,138 z"/></clipPath></defs><g clip-path="url(#clip6)" fill="none" opacity="1" stroke="#000000" stroke-linecap="round" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="2" transform="matrix(-1,0,0,-1,7,138)"><path d="M4.5,-5.5 L-0.5,-0.5 L4.5,4.5" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip9"><path d="M7,123 L-217,123 L-217,-48 L7,-48 L7,123 z"/></clipPath></defs><g clip-path="url(#clip9)" fill="none" opacity="1" stroke="#000000" stroke-linecap="round" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="2" transform="matrix(-1,0,0,-1,7,123)"><path d="M4.5,-5.5 L-0.5,-0.5 L4.5,4.5" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip12"><path d="M7,108 L-217,108 L-217,-63 L7,-63 L7,108 z"/></clipPath></defs><g clip-path="url(#clip12)" fill="none" opacity="1" stroke="#000000" stroke-linecap="round" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="2" transform="matrix(-1,0,0,-1,7,108)"><path d="M4.5,-5.5 L-0.5,-0.5 L4.5,4.5" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip15"><path d="M7,93 L-217,93 L-217,-78 L7,-78 L7,93 z"/></clipPath></defs><g clip-path="url(#clip15)" fill="none" opacity="1" stroke="#000000" stroke-linecap="round" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="2" transform="matrix(-1,0,0,-1,7,93)"><path d="M4.5,-5.5 L-0.5,-0.5 L4.5,4.5" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip18"><path d="M7,78 L-217,78 L-217,-93 L7,-93 L7,78 z"/></clipPath></defs><g clip-path="url(#clip18)" fill="none" opacity="1" stroke="#000000" stroke-linecap="round" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="2" transform="matrix(-1,0,0,-1,7,78)"><path d="M4.5,-5.5 L-0.5,-0.5 L4.5,4.5" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip21"><path d="M7,63 L-217,63 L-217,-108 L7,-108 L7,63 z"/></clipPath></defs><g clip-path="url(#clip21)" fill="none" opacity="1" stroke="#000000" stroke-linecap="round" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="2" transform="matrix(-1,0,0,-1,7,63)"><path d="M4.5,-5.5 L-0.5,-0.5 L4.5,4.5" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip24"><path d="M7,48 L-217,48 L-217,-123 L7,-123 L7,48 z"/></clipPath></defs><g clip-path="url(#clip24)" fill="none" opacity="1" stroke="#000000" stroke-linecap="round" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="2" transform="matrix(-1,0,0,-1,7,48)"><path d="M4.5,-5.5 L-0.5,-0.5 L4.5,4.5" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip27"><path d="M7,33 L-217,33 L-217,-138 L7,-138 L7,33 z"/></clipPath></defs><g clip-path="url(#clip27)" fill="none" opacity="1" stroke="#000000" stroke-linecap="round" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="2" transform="matrix(-1,0,0,-1,7,33)"><path d="M4.5,-5.5 L-0.5,-0.5 L4.5,4.5" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip30"><path d="M7,18 L-217,18 L-217,-153 L7,-153 L7,18 z"/></clipPath></defs><g clip-path="url(#clip30)" fill="none" opacity="1" stroke="#000000" stroke-linecap="round" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="2" transform="matrix(-1,0,0,-1,7,18)"><path d="M4.5,-5.5 L-0.5,-0.5 L4.5,4.5" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip33"><path d="M-7,-2 L217,-2 L217,169 L-7,169 L-7,-2 z"/></clipPath></defs><g clip-path="url(#clip33)" fill="#ffaa00" fill-opacity="1" opacity="1" stroke="none" stroke-opacity="0" transform="matrix(1,0,0,1,7,2)"><path d="M0,0 L215,0 L215,167 L0,167 L0,0 z" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip37"><path d="M-109,-67 L110,-67 L110,104 L-109,104 L-109,-67 z"/></clipPath></defs><g clip-path="url(#clip37)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,114,67)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="119.234" x="-59.6094" xml:space="preserve" y="3.5">10 Channel Output Module</text></g><defs><clipPath id="clip38"><path d="M-109,-79 L110,-79 L110,92 L-109,92 L-109,-79 z"/></clipPath></defs><g clip-path="url(#clip38)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,114,79)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="61" x="-30.5" xml:space="preserve" y="3.5">Module Slot 1</text></g><defs><clipPath id="clip39"><path d="M-109,-103 L110,-103 L110,68 L-109,68 L-109,-103 z"/></clipPath></defs><g clip-path="url(#clip39)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,114,103)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="106.484" x="-53.2344" xml:space="preserve" y="3.5"> Controller Connector: A</text></g><defs><clipPath id="clip40"><path d="M-5,-18 L214,-18 L214,153 L-5,153 L-5,-18 z"/></clipPath></defs><g clip-path="url(#clip40)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,10,18)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="28.2813" x="0" xml:space="preserve" y="3.5">Pin 13</text></g><defs><clipPath id="clip41"><path d="M-5,-33 L214,-33 L214,138 L-5,138 L-5,-33 z"/></clipPath></defs><g clip-path="url(#clip41)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,10,33)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="28.2813" x="0" xml:space="preserve" y="3.5">Pin 19</text></g><defs><clipPath id="clip42"><path d="M-5,-48 L214,-48 L214,123 L-5,123 L-5,-48 z"/></clipPath></defs><g clip-path="url(#clip42)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,10,48)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="28.2813" x="0" xml:space="preserve" y="3.5">Pin 12</text></g><defs><clipPath id="clip43"><path d="M-5,-63 L214,-63 L214,108 L-5,108 L-5,-63 z"/></clipPath></defs><g clip-path="url(#clip43)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,10,63)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="28.2813" x="0" xml:space="preserve" y="3.5">Pin 18</text></g><defs><clipPath id="clip44"><path d="M-5,-78 L214,-78 L214,93 L-5,93 L-5,-78 z"/></clipPath></defs><g clip-path="url(#clip44)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,10,78)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="27.5313" x="0" xml:space="preserve" y="3.5">Pin 11</text></g><defs><clipPath id="clip45"><path d="M-5,-93 L214,-93 L214,78 L-5,78 L-5,-93 z"/></clipPath></defs><g clip-path="url(#clip45)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,10,93)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="28.2813" x="0" xml:space="preserve" y="3.5">Pin 17</text></g><defs><clipPath id="clip46"><path d="M-5,-108 L214,-108 L214,63 L-5,63 L-5,-108 z"/></clipPath></defs><g clip-path="url(#clip46)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,10,108)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="28.2813" x="0" xml:space="preserve" y="3.5">Pin 12</text></g><defs><clipPath id="clip47"><path d="M-5,-123 L214,-123 L214,48 L-5,48 L-5,-123 z"/></clipPath></defs><g clip-path="url(#clip47)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,10,123)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="28.2813" x="0" xml:space="preserve" y="3.5">Pin 18</text></g><defs><clipPath id="clip48"><path d="M-5,-138 L214,-138 L214,33 L-5,33 L-5,-138 z"/></clipPath></defs><g clip-path="url(#clip48)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,10,138)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="27.5313" x="0" xml:space="preserve" y="3.5">Pin 11</text></g><defs><clipPath id="clip49"><path d="M-5,-153 L214,-153 L214,18 L-5,18 L-5,-153 z"/></clipPath></defs><g clip-path="url(#clip49)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,10,153)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="28.2813" x="0" xml:space="preserve" y="3.5">Pin 17</text></g><defs><clipPath id="clip50"><path d="M-4,-163 L215,-163 L215,8 L-4,8 L-4,-163 z"/></clipPath></defs><g clip-path="url(#clip50)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,9,163)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="96.5" x="0" xml:space="preserve" y="3.5">GOcontroll V4.3.2-rc1</text></g><defs><clipPath id="clip55"><path d="M-7.5,-2.5 L216.5,-2.5 L216.5,168.5 L-7.5,168.5 L-7.5,-2.5 z"/></clipPath></defs><g clip-path="url(#clip55)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,7.5,2.5)"><path d="M0,0 L215,0 L215,167 L0,167 L0,0 z" fill-rule="evenodd" vector-effect="none"/></g></g><!--generated on ubuntu @ 2024-07-25 14:37:27 CEST--></svg>

__MWOPC_PART_BEGIN__ /simulink/libraryBrowser/Modules/Output@20@Module/Output@20@Module@20@@28@6@20@channel@29@.svg
<?xml version="1.0" encoding="UTF-8"?><svg width="59.2667mm" height="28.8396mm" viewBox="0 0 224 109" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><g fill="none" stroke="black" stroke-width="1" fill-rule="evenodd" stroke-linecap="square" stroke-linejoin="bevel"><g clip-path="none" fill="none" opacity="1" stroke="none" stroke-opacity="0" transform="matrix(1,0,0,1,0,0)"><path d="M0,0 L224,0 L224,109 L0,109 L0,0 z" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip3"><path d="M7,32 L-217,32 L-217,-77 L7,-77 L7,32 z"/></clipPath></defs><g clip-path="url(#clip3)" fill="none" opacity="1" stroke="#000000" stroke-linecap="round" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="2" transform="matrix(-1,0,0,-1,7,32)"><path d="M4.5,-5.5 L-0.5,-0.5 L4.5,4.5" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip6"><path d="M7,92 L-217,92 L-217,-17 L7,-17 L7,92 z"/></clipPath></defs><g clip-path="url(#clip6)" fill="none" opacity="1" stroke="#000000" stroke-linecap="round" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="2" transform="matrix(-1,0,0,-1,7,92)"><path d="M4.5,-5.5 L-0.5,-0.5 L4.5,4.5" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip9"><path d="M7,77 L-217,77 L-217,-32 L7,-32 L7,77 z"/></clipPath></defs><g clip-path="url(#clip9)" fill="none" opacity="1" stroke="#000000" stroke-linecap="round" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="2" transform="matrix(-1,0,0,-1,7,77)"><path d="M4.5,-5.5 L-0.5,-0.5 L4.5,4.5" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip12"><path d="M7,62 L-217,62 L-217,-47 L7,-47 L7,62 z"/></clipPath></defs><g clip-path="url(#clip12)" fill="none" opacity="1" stroke="#000000" stroke-linecap="round" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="2" transform="matrix(-1,0,0,-1,7,62)"><path d="M4.5,-5.5 L-0.5,-0.5 L4.5,4.5" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip15"><path d="M7,47 L-217,47 L-217,-62 L7,-62 L7,47 z"/></clipPath></defs><g clip-path="url(#clip15)" fill="none" opacity="1" stroke="#000000" stroke-linecap="round" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="2" transform="matrix(-1,0,0,-1,7,47)"><path d="M4.5,-5.5 L-0.5,-0.5 L4.5,4.5" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip18"><path d="M7,17 L-217,17 L-217,-92 L7,-92 L7,17 z"/></clipPath></defs><g clip-path="url(#clip18)" fill="none" opacity="1" stroke="#000000" stroke-linecap="round" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="2" transform="matrix(-1,0,0,-1,7,17)"><path d="M4.5,-5.5 L-0.5,-0.5 L4.5,4.5" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip21"><path d="M-7,-2 L217,-2 L217,107 L-7,107 L-7,-2 z"/></clipPath></defs><g clip-path="url(#clip21)" fill="#ffaa00" fill-opacity="1" opacity="1" stroke="none" stroke-opacity="0" transform="matrix(1,0,0,1,7,2)"><path d="M0,0 L215,0 L215,105 L0,105 L0,0 z" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip25"><path d="M-109,-36 L110,-36 L110,73 L-109,73 L-109,-36 z"/></clipPath></defs><g clip-path="url(#clip25)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,114,36)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="113.688" x="-56.8438" xml:space="preserve" y="3.5">6 Channel Output Module</text></g><defs><clipPath id="clip26"><path d="M-109,-48 L110,-48 L110,61 L-109,61 L-109,-48 z"/></clipPath></defs><g clip-path="url(#clip26)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,114,48)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="59.3438" x="-29.6719" xml:space="preserve" y="3.5">Module slot 1</text></g><defs><clipPath id="clip27"><path d="M-109,-72 L110,-72 L110,37 L-109,37 L-109,-72 z"/></clipPath></defs><g clip-path="url(#clip27)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,114,72)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="106.484" x="-53.2344" xml:space="preserve" y="3.5"> Controller Connector: A</text></g><defs><clipPath id="clip28"><path d="M-5,-17 L214,-17 L214,92 L-5,92 L-5,-17 z"/></clipPath></defs><g clip-path="url(#clip28)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,10,17)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="28.2813" x="0" xml:space="preserve" y="3.5">Pin 13</text></g><defs><clipPath id="clip29"><path d="M-5,-32 L214,-32 L214,77 L-5,77 L-5,-32 z"/></clipPath></defs><g clip-path="url(#clip29)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,10,32)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="28.2813" x="0" xml:space="preserve" y="3.5">Pin 19</text></g><defs><clipPath id="clip30"><path d="M-5,-47 L214,-47 L214,62 L-5,62 L-5,-47 z"/></clipPath></defs><g clip-path="url(#clip30)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,10,47)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="28.2813" x="0" xml:space="preserve" y="3.5">Pin 12</text></g><defs><clipPath id="clip31"><path d="M-5,-62 L214,-62 L214,47 L-5,47 L-5,-62 z"/></clipPath></defs><g clip-path="url(#clip31)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,10,62)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="28.2813" x="0" xml:space="preserve" y="3.5">Pin 18</text></g><defs><clipPath id="clip32"><path d="M-5,-77 L214,-77 L214,32 L-5,32 L-5,-77 z"/></clipPath></defs><g clip-path="url(#clip32)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,10,77)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="27.5313" x="0" xml:space="preserve" y="3.5">Pin 11</text></g><defs><clipPath id="clip33"><path d="M-5,-92 L214,-92 L214,17 L-5,17 L-5,-92 z"/></clipPath></defs><g clip-path="url(#clip33)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,10,92)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="28.2813" x="0" xml:space="preserve" y="3.5">Pin 17</text></g><defs><clipPath id="clip34"><path d="M-4,-101 L215,-101 L215,8 L-4,8 L-4,-101 z"/></clipPath></defs><g clip-path="url(#clip34)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,9,101)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="96.5" x="0" xml:space="preserve" y="3.5">GOcontroll V4.3.2-rc1</text></g><defs><clipPath id="clip39"><path d="M-7.5,-2.5 L216.5,-2.5 L216.5,106.5 L-7.5,106.5 L-7.5,-2.5 z"/></clipPath></defs><g clip-path="url(#clip39)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,7.5,2.5)"><path d="M0,0 L215,0 L215,105 L0,105 L0,0 z" fill-rule="evenodd" vector-effect="none"/></g></g><!--generated on ubuntu @ 2024-07-25 14:37:27 CEST--></svg>

__MWOPC_PART_BEGIN__ /simulink/libraryBrowser/Modules/Output@20@Module/Output@20@Module@20@Monitor@20@@28@6@20@channel@29@.svg
<?xml version="1.0" encoding="UTF-8"?><svg width="81.7562mm" height="36.5125mm" viewBox="0 0 309 138" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><g fill="none" stroke="black" stroke-width="1" fill-rule="evenodd" stroke-linecap="square" stroke-linejoin="bevel"><g clip-path="none" fill="none" opacity="1" stroke="none" stroke-opacity="0" transform="matrix(1,0,0,1,0,0)"><path d="M0,0 L309,0 L309,138 L0,138 L0,0 z" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip3"><path d="M-302,-94 L7,-94 L7,44 L-302,44 L-302,-94 z"/></clipPath></defs><g clip-path="url(#clip3)" fill="none" opacity="1" stroke="#000000" stroke-linecap="round" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="2" transform="matrix(1,0,0,1,302,94)"><path d="M0.5,-4.5 L5.5,0.5 L0.5,5.5" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip6"><path d="M-302,-74 L7,-74 L7,64 L-302,64 L-302,-74 z"/></clipPath></defs><g clip-path="url(#clip6)" fill="none" opacity="1" stroke="#000000" stroke-linecap="round" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="2" transform="matrix(1,0,0,1,302,74)"><path d="M0.5,-4.5 L5.5,0.5 L0.5,5.5" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip9"><path d="M-302,-64 L7,-64 L7,74 L-302,74 L-302,-64 z"/></clipPath></defs><g clip-path="url(#clip9)" fill="none" opacity="1" stroke="#000000" stroke-linecap="round" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="2" transform="matrix(1,0,0,1,302,64)"><path d="M0.5,-4.5 L5.5,0.5 L0.5,5.5" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip12"><path d="M-302,-104 L7,-104 L7,34 L-302,34 L-302,-104 z"/></clipPath></defs><g clip-path="url(#clip12)" fill="none" opacity="1" stroke="#000000" stroke-linecap="round" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="2" transform="matrix(1,0,0,1,302,104)"><path d="M0.5,-4.5 L5.5,0.5 L0.5,5.5" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip15"><path d="M-302,-54 L7,-54 L7,84 L-302,84 L-302,-54 z"/></clipPath></defs><g clip-path="url(#clip15)" fill="none" opacity="1" stroke="#000000" stroke-linecap="round" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="2" transform="matrix(1,0,0,1,302,54)"><path d="M0.5,-4.5 L5.5,0.5 L0.5,5.5" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip18"><path d="M-302,-114 L7,-114 L7,24 L-302,24 L-302,-114 z"/></clipPath></defs><g clip-path="url(#clip18)" fill="none" opacity="1" stroke="#000000" stroke-linecap="round" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="2" transform="matrix(1,0,0,1,302,114)"><path d="M0.5,-4.5 L5.5,0.5 L0.5,5.5" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip21"><path d="M-302,-84 L7,-84 L7,54 L-302,54 L-302,-84 z"/></clipPath></defs><g clip-path="url(#clip21)" fill="none" opacity="1" stroke="#000000" stroke-linecap="round" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="2" transform="matrix(1,0,0,1,302,84)"><path d="M0.5,-4.5 L5.5,0.5 L0.5,5.5" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip24"><path d="M-302,-44 L7,-44 L7,94 L-302,94 L-302,-44 z"/></clipPath></defs><g clip-path="url(#clip24)" fill="none" opacity="1" stroke="#000000" stroke-linecap="round" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="2" transform="matrix(1,0,0,1,302,44)"><path d="M0.5,-4.5 L5.5,0.5 L0.5,5.5" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip27"><path d="M-302,-34 L7,-34 L7,104 L-302,104 L-302,-34 z"/></clipPath></defs><g clip-path="url(#clip27)" fill="none" opacity="1" stroke="#000000" stroke-linecap="round" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="2" transform="matrix(1,0,0,1,302,34)"><path d="M0.5,-4.5 L5.5,0.5 L0.5,5.5" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip30"><path d="M-302,-24 L7,-24 L7,114 L-302,114 L-302,-24 z"/></clipPath></defs><g clip-path="url(#clip30)" fill="none" opacity="1" stroke="#000000" stroke-linecap="round" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="2" transform="matrix(1,0,0,1,302,24)"><path d="M0.5,-4.5 L5.5,0.5 L0.5,5.5" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip33"><path d="M-2,-2 L307,-2 L307,136 L-2,136 L-2,-2 z"/></clipPath></defs><g clip-path="url(#clip33)" fill="#ffaa00" fill-opacity="1" opacity="1" stroke="none" stroke-opacity="0" transform="matrix(1,0,0,1,2,2)"><path d="M0,0 L300,0 L300,134 L0,134 L0,0 z" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip37"><path d="M-152,-51 L152,-51 L152,87 L-152,87 L-152,-51 z"/></clipPath></defs><g clip-path="url(#clip37)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,152,51)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="149.734" x="-74.8594" xml:space="preserve" y="3.5">6 Channel Output Module Monitor</text></g><defs><clipPath id="clip38"><path d="M-152,-63 L152,-63 L152,75 L-152,75 L-152,-63 z"/></clipPath></defs><g clip-path="url(#clip38)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,152,63)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="59.3438" x="-29.6719" xml:space="preserve" y="3.5">Module slot 1</text></g><defs><clipPath id="clip39"><path d="M-152,-87 L152,-87 L152,51 L-152,51 L-152,-87 z"/></clipPath></defs><g clip-path="url(#clip39)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,152,87)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="106.484" x="-53.2344" xml:space="preserve" y="3.5"> Controller Connector: A</text></g><defs><clipPath id="clip40"><path d="M-299,-24 L5,-24 L5,114 L-299,114 L-299,-24 z"/></clipPath></defs><g clip-path="url(#clip40)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,299,24)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="56.0156" x="-56.0156" xml:space="preserve" y="3.5">Temperature</text></g><defs><clipPath id="clip41"><path d="M-299,-34 L5,-34 L5,104 L-299,104 L-299,-34 z"/></clipPath></defs><g clip-path="url(#clip41)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,299,34)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="33.2813" x="-33.2813" xml:space="preserve" y="3.5">Ground</text></g><defs><clipPath id="clip42"><path d="M-299,-44 L5,-44 L5,94 L-299,94 L-299,-44 z"/></clipPath></defs><g clip-path="url(#clip42)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,299,44)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="30.5156" x="-30.5156" xml:space="preserve" y="3.5">Supply</text></g><defs><clipPath id="clip43"><path d="M-299,-54 L5,-54 L5,84 L-299,84 L-299,-54 z"/></clipPath></defs><g clip-path="url(#clip43)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,299,54)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="28.2813" x="-28.2813" xml:space="preserve" y="3.5">Status</text></g><defs><clipPath id="clip44"><path d="M-299,-64 L5,-64 L5,74 L-299,74 L-299,-64 z"/></clipPath></defs><g clip-path="url(#clip44)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,299,64)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="62.1094" x="-62.1094" xml:space="preserve" y="3.5">Pin 13 current</text></g><defs><clipPath id="clip45"><path d="M-299,-74 L5,-74 L5,64 L-299,64 L-299,-74 z"/></clipPath></defs><g clip-path="url(#clip45)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,299,74)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="62.1094" x="-62.1094" xml:space="preserve" y="3.5">Pin 19 current</text></g><defs><clipPath id="clip46"><path d="M-299,-84 L5,-84 L5,54 L-299,54 L-299,-84 z"/></clipPath></defs><g clip-path="url(#clip46)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,299,84)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="62.1094" x="-62.1094" xml:space="preserve" y="3.5">Pin 12 current</text></g><defs><clipPath id="clip47"><path d="M-299,-94 L5,-94 L5,44 L-299,44 L-299,-94 z"/></clipPath></defs><g clip-path="url(#clip47)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,299,94)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="62.1094" x="-62.1094" xml:space="preserve" y="3.5">Pin 18 current</text></g><defs><clipPath id="clip48"><path d="M-299,-104 L5,-104 L5,34 L-299,34 L-299,-104 z"/></clipPath></defs><g clip-path="url(#clip48)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,299,104)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="61.3594" x="-61.3594" xml:space="preserve" y="3.5">Pin 11 current</text></g><defs><clipPath id="clip49"><path d="M-299,-114 L5,-114 L5,24 L-299,24 L-299,-114 z"/></clipPath></defs><g clip-path="url(#clip49)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,299,114)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="62.1094" x="-62.1094" xml:space="preserve" y="3.5">Pin 17 current</text></g><defs><clipPath id="clip50"><path d="M-4,-130 L300,-130 L300,8 L-4,8 L-4,-130 z"/></clipPath></defs><g clip-path="url(#clip50)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,4,130)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="96.5" x="0" xml:space="preserve" y="3.5">GOcontroll V4.3.2-rc1</text></g><defs><clipPath id="clip55"><path d="M-2.5,-2.5 L306.5,-2.5 L306.5,135.5 L-2.5,135.5 L-2.5,-2.5 z"/></clipPath></defs><g clip-path="url(#clip55)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,2.5,2.5)"><path d="M0,0 L300,0 L300,134 L0,134 L0,0 z" fill-rule="evenodd" vector-effect="none"/></g></g><!--generated on ubuntu @ 2024-07-25 14:37:27 CEST--></svg>

__MWOPC_PART_BEGIN__ /simulink/libraryBrowser/Network.svg
<?xml version="1.0" encoding="UTF-8"?><svg width="27.5167mm" height="12.1708mm" viewBox="0 0 104 46" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><g fill="none" stroke="black" stroke-width="1" fill-rule="evenodd" stroke-linecap="square" stroke-linejoin="bevel"><g clip-path="none" fill="none" opacity="1" stroke="none" stroke-opacity="0" transform="matrix(1,0,0,1,0,0)"><path d="M0,0 L104,0 L104,46 L0,46 L0,0 z" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip3"><path d="M-2,-2 L102,-2 L102,44 L-2,44 L-2,-2 z"/></clipPath></defs><g clip-path="url(#clip3)" fill="#ffaa00" fill-opacity="1" opacity="1" stroke="none" stroke-opacity="0" transform="matrix(1,0,0,1,2,2)"><path d="M0,0 L100,0 L100,42 L0,42 L0,0 z" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip7"><path d="M-52,-23 L52,-23 L52,23 L-52,23 L-52,-23 z"/></clipPath></defs><g clip-path="url(#clip7)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,52,23)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="36.625" x="-18.3125" xml:space="preserve" y="3.5">Network</text></g><defs><clipPath id="clip12"><path d="M-2.5,-2.5 L101.5,-2.5 L101.5,43.5 L-2.5,43.5 L-2.5,-2.5 z"/></clipPath></defs><g clip-path="url(#clip12)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,2.5,2.5)"><path d="M0,0 L100,0 L100,42 L0,42 L0,0 z" fill-rule="evenodd" vector-effect="none"/></g></g><!--generated on ubuntu @ 2024-07-25 14:37:27 CEST--></svg>

__MWOPC_PART_BEGIN__ /simulink/libraryBrowser/Network/TCP.svg
<?xml version="1.0" encoding="UTF-8"?><svg width="27.5167mm" height="12.1708mm" viewBox="0 0 104 46" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><g fill="none" stroke="black" stroke-width="1" fill-rule="evenodd" stroke-linecap="square" stroke-linejoin="bevel"><g clip-path="none" fill="none" opacity="1" stroke="none" stroke-opacity="0" transform="matrix(1,0,0,1,0,0)"><path d="M0,0 L104,0 L104,46 L0,46 L0,0 z" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip3"><path d="M-2,-2 L102,-2 L102,44 L-2,44 L-2,-2 z"/></clipPath></defs><g clip-path="url(#clip3)" fill="#ffaa00" fill-opacity="1" opacity="1" stroke="none" stroke-opacity="0" transform="matrix(1,0,0,1,2,2)"><path d="M0,0 L100,0 L100,42 L0,42 L0,0 z" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip7"><path d="M-52,-23 L52,-23 L52,23 L-52,23 L-52,-23 z"/></clipPath></defs><g clip-path="url(#clip7)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,52,23)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="19.9688" x="-9.98438" xml:space="preserve" y="3.5">TCP</text></g><defs><clipPath id="clip12"><path d="M-2.5,-2.5 L101.5,-2.5 L101.5,43.5 L-2.5,43.5 L-2.5,-2.5 z"/></clipPath></defs><g clip-path="url(#clip12)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,2.5,2.5)"><path d="M0,0 L100,0 L100,42 L0,42 L0,0 z" fill-rule="evenodd" vector-effect="none"/></g></g><!--generated on ubuntu @ 2024-07-25 14:37:27 CEST--></svg>

__MWOPC_PART_BEGIN__ /simulink/libraryBrowser/Network/TCP/TCP@20@Configure.svg
<?xml version="1.0" encoding="UTF-8"?><svg width="44.7146mm" height="19.5792mm" viewBox="0 0 169 74" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><g fill="none" stroke="black" stroke-width="1" fill-rule="evenodd" stroke-linecap="square" stroke-linejoin="bevel"><g clip-path="none" fill="none" opacity="1" stroke="none" stroke-opacity="0" transform="matrix(1,0,0,1,0,0)"><path d="M0,0 L169,0 L169,74 L0,74 L0,0 z" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip3"><path d="M-162,-37 L7,-37 L7,37 L-162,37 L-162,-37 z"/></clipPath></defs><g clip-path="url(#clip3)" fill="none" opacity="1" stroke="#000000" stroke-linecap="round" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="2" transform="matrix(1,0,0,1,162,37)"><path d="M0.5,-4.5 L5.5,0.5 L0.5,5.5" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip6"><path d="M7,37 L-162,37 L-162,-37 L7,-37 L7,37 z"/></clipPath></defs><g clip-path="url(#clip6)" fill="none" opacity="1" stroke="#000000" stroke-linecap="round" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="2" transform="matrix(-1,0,0,-1,7,37)"><path d="M4.5,-5.5 L-0.5,-0.5 L4.5,4.5" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip9"><path d="M-7,-2 L162,-2 L162,72 L-7,72 L-7,-2 z"/></clipPath></defs><g clip-path="url(#clip9)" fill="#ffaa00" fill-opacity="1" opacity="1" stroke="none" stroke-opacity="0" transform="matrix(1,0,0,1,7,2)"><path d="M0,0 L155,0 L155,70 L0,70 L0,0 z" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip13"><path d="M-79,-25 L80,-25 L80,49 L-79,49 L-79,-25 z"/></clipPath></defs><g clip-path="url(#clip13)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,84,25)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="96.1406" x="-48.0625" xml:space="preserve" y="3.5">Configure TCP server</text></g><defs><clipPath id="clip14"><path d="M-79,-37 L80,-37 L80,37 L-79,37 L-79,-37 z"/></clipPath></defs><g clip-path="url(#clip14)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,84,37)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="48.2031" x="-24.0938" xml:space="preserve" y="3.5"> IP: 0.0.0.0</text></g><defs><clipPath id="clip15"><path d="M-79,-49 L80,-49 L80,25 L-79,25 L-79,-49 z"/></clipPath></defs><g clip-path="url(#clip15)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,84,49)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="46.0156" x="-23" xml:space="preserve" y="3.5">Port: 9001</text></g><defs><clipPath id="clip16"><path d="M-154,-37 L5,-37 L5,37 L-154,37 L-154,-37 z"/></clipPath></defs><g clip-path="url(#clip16)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,159,37)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="46.0469" x="-46.0469" xml:space="preserve" y="3.5">connected</text></g><defs><clipPath id="clip17"><path d="M-5,-37 L154,-37 L154,37 L-5,37 L-5,-37 z"/></clipPath></defs><g clip-path="url(#clip17)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,10,37)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="47.7188" x="0" xml:space="preserve" y="3.5">disconnect</text></g><defs><clipPath id="clip18"><path d="M-4,-66 L155,-66 L155,8 L-4,8 L-4,-66 z"/></clipPath></defs><g clip-path="url(#clip18)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,9,66)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="96.5" x="0" xml:space="preserve" y="3.5">GOcontroll V4.3.2-rc1</text></g><defs><clipPath id="clip23"><path d="M-7.5,-2.5 L161.5,-2.5 L161.5,71.5 L-7.5,71.5 L-7.5,-2.5 z"/></clipPath></defs><g clip-path="url(#clip23)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,7.5,2.5)"><path d="M0,0 L155,0 L155,70 L0,70 L0,0 z" fill-rule="evenodd" vector-effect="none"/></g></g><!--generated on ubuntu @ 2024-07-25 14:37:27 CEST--></svg>

__MWOPC_PART_BEGIN__ /simulink/libraryBrowser/Network/TCP/TCP@20@Receive.svg
<?xml version="1.0" encoding="UTF-8"?><svg width="43.3917mm" height="20.1083mm" viewBox="0 0 164 76" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><g fill="none" stroke="black" stroke-width="1" fill-rule="evenodd" stroke-linecap="square" stroke-linejoin="bevel"><g clip-path="none" fill="none" opacity="1" stroke="none" stroke-opacity="0" transform="matrix(1,0,0,1,0,0)"><path d="M0,0 L164,0 L164,76 L0,76 L0,0 z" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip3"><path d="M-157,-63 L7,-63 L7,13 L-157,13 L-157,-63 z"/></clipPath></defs><g clip-path="url(#clip3)" fill="none" opacity="1" stroke="#000000" stroke-linecap="round" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="2" transform="matrix(1,0,0,1,157,63)"><path d="M0.5,-4.5 L5.5,0.5 L0.5,5.5" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip6"><path d="M-157,-38 L7,-38 L7,38 L-157,38 L-157,-38 z"/></clipPath></defs><g clip-path="url(#clip6)" fill="none" opacity="1" stroke="#000000" stroke-linecap="round" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="2" transform="matrix(1,0,0,1,157,38)"><path d="M0.5,-4.5 L5.5,0.5 L0.5,5.5" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip9"><path d="M-157,-13 L7,-13 L7,63 L-157,63 L-157,-13 z"/></clipPath></defs><g clip-path="url(#clip9)" fill="none" opacity="1" stroke="#000000" stroke-linecap="round" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="2" transform="matrix(1,0,0,1,157,13)"><path d="M0.5,-4.5 L5.5,0.5 L0.5,5.5" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip12"><path d="M-2,-2 L162,-2 L162,74 L-2,74 L-2,-2 z"/></clipPath></defs><g clip-path="url(#clip12)" fill="#ffaa00" fill-opacity="1" opacity="1" stroke="none" stroke-opacity="0" transform="matrix(1,0,0,1,2,2)"><path d="M0,0 L155,0 L155,72 L0,72 L0,0 z" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip16"><path d="M-79,-32 L80,-32 L80,44 L-79,44 L-79,-32 z"/></clipPath></defs><g clip-path="url(#clip16)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,79,32)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="58.625" x="-29.3125" xml:space="preserve" y="3.5">TCP Receive</text></g><defs><clipPath id="clip17"><path d="M-79,-44 L80,-44 L80,32 L-79,32 L-79,-44 z"/></clipPath></defs><g clip-path="url(#clip17)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,79,44)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="43.8125" x="-21.9063" xml:space="preserve" y="3.5">Socket: id</text></g><defs><clipPath id="clip18"><path d="M-4,-68 L155,-68 L155,8 L-4,8 L-4,-68 z"/></clipPath></defs><g clip-path="url(#clip18)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,4,68)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="96.5" x="0" xml:space="preserve" y="3.5">GOcontroll V4.3.2-rc1</text></g><defs><clipPath id="clip19"><path d="M-154,-13 L5,-13 L5,63 L-154,63 L-154,-13 z"/></clipPath></defs><g clip-path="url(#clip19)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,154,13)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="52.6875" x="-52.6875" xml:space="preserve" y="3.5">function call</text></g><defs><clipPath id="clip20"><path d="M-154,-38 L5,-38 L5,38 L-154,38 L-154,-38 z"/></clipPath></defs><g clip-path="url(#clip20)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,154,38)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="40.5156" x="-40.5156" xml:space="preserve" y="3.5">message</text></g><defs><clipPath id="clip21"><path d="M-154,-63 L5,-63 L5,13 L-154,13 L-154,-63 z"/></clipPath></defs><g clip-path="url(#clip21)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,154,63)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="70.4531" x="-70.4531" xml:space="preserve" y="3.5">message length</text></g><defs><clipPath id="clip26"><path d="M-2.5,-2.5 L161.5,-2.5 L161.5,73.5 L-2.5,73.5 L-2.5,-2.5 z"/></clipPath></defs><g clip-path="url(#clip26)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,2.5,2.5)"><path d="M0,0 L155,0 L155,72 L0,72 L0,0 z" fill-rule="evenodd" vector-effect="none"/></g></g><!--generated on ubuntu @ 2024-07-25 14:37:27 CEST--></svg>

__MWOPC_PART_BEGIN__ /simulink/libraryBrowser/Network/TCP/TCP@20@Send.svg
<?xml version="1.0" encoding="UTF-8"?><svg width="43.3917mm" height="21.1667mm" viewBox="0 0 164 80" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><g fill="none" stroke="black" stroke-width="1" fill-rule="evenodd" stroke-linecap="square" stroke-linejoin="bevel"><g clip-path="none" fill="none" opacity="1" stroke="none" stroke-opacity="0" transform="matrix(1,0,0,1,0,0)"><path d="M0,0 L164,0 L164,80 L0,80 L0,0 z" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip3"><path d="M7,40 L-157,40 L-157,-40 L7,-40 L7,40 z"/></clipPath></defs><g clip-path="url(#clip3)" fill="none" opacity="1" stroke="#000000" stroke-linecap="round" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="2" transform="matrix(-1,0,0,-1,7,40)"><path d="M4.5,-5.5 L-0.5,-0.5 L4.5,4.5" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip6"><path d="M-7,-2 L157,-2 L157,78 L-7,78 L-7,-2 z"/></clipPath></defs><g clip-path="url(#clip6)" fill="#ffaa00" fill-opacity="1" opacity="1" stroke="none" stroke-opacity="0" transform="matrix(1,0,0,1,7,2)"><path d="M0,0 L155,0 L155,76 L0,76 L0,0 z" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip10"><path d="M-79,-34 L80,-34 L80,46 L-79,46 L-79,-34 z"/></clipPath></defs><g clip-path="url(#clip10)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,84,34)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="45.8438" x="-22.9219" xml:space="preserve" y="3.5">TCP Send</text></g><defs><clipPath id="clip11"><path d="M-79,-46 L80,-46 L80,34 L-79,34 L-79,-46 z"/></clipPath></defs><g clip-path="url(#clip11)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,84,46)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="43.8125" x="-21.9063" xml:space="preserve" y="3.5">Socket: id</text></g><defs><clipPath id="clip12"><path d="M-5,-40 L154,-40 L154,40 L-5,40 L-5,-40 z"/></clipPath></defs><g clip-path="url(#clip12)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,10,40)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="40.5156" x="0" xml:space="preserve" y="3.5">message</text></g><defs><clipPath id="clip13"><path d="M-4,-72 L155,-72 L155,8 L-4,8 L-4,-72 z"/></clipPath></defs><g clip-path="url(#clip13)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,9,72)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="96.5" x="0" xml:space="preserve" y="3.5">GOcontroll V4.3.2-rc1</text></g><defs><clipPath id="clip18"><path d="M-7.5,-2.5 L156.5,-2.5 L156.5,77.5 L-7.5,77.5 L-7.5,-2.5 z"/></clipPath></defs><g clip-path="url(#clip18)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,7.5,2.5)"><path d="M0,0 L155,0 L155,76 L0,76 L0,0 z" fill-rule="evenodd" vector-effect="none"/></g></g><!--generated on ubuntu @ 2024-07-25 14:37:27 CEST--></svg>

__MWOPC_PART_BEGIN__ /simulink/libraryBrowser/Network/UDP.svg
<?xml version="1.0" encoding="UTF-8"?><svg width="27.5167mm" height="12.1708mm" viewBox="0 0 104 46" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><g fill="none" stroke="black" stroke-width="1" fill-rule="evenodd" stroke-linecap="square" stroke-linejoin="bevel"><g clip-path="none" fill="none" opacity="1" stroke="none" stroke-opacity="0" transform="matrix(1,0,0,1,0,0)"><path d="M0,0 L104,0 L104,46 L0,46 L0,0 z" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip3"><path d="M-2,-2 L102,-2 L102,44 L-2,44 L-2,-2 z"/></clipPath></defs><g clip-path="url(#clip3)" fill="#ffaa00" fill-opacity="1" opacity="1" stroke="none" stroke-opacity="0" transform="matrix(1,0,0,1,2,2)"><path d="M0,0 L100,0 L100,42 L0,42 L0,0 z" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip7"><path d="M-52,-23 L52,-23 L52,23 L-52,23 L-52,-23 z"/></clipPath></defs><g clip-path="url(#clip7)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,52,23)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="21.0938" x="-10.5469" xml:space="preserve" y="3.5">UDP</text></g><defs><clipPath id="clip12"><path d="M-2.5,-2.5 L101.5,-2.5 L101.5,43.5 L-2.5,43.5 L-2.5,-2.5 z"/></clipPath></defs><g clip-path="url(#clip12)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,2.5,2.5)"><path d="M0,0 L100,0 L100,42 L0,42 L0,0 z" fill-rule="evenodd" vector-effect="none"/></g></g><!--generated on ubuntu @ 2024-07-25 14:37:27 CEST--></svg>

__MWOPC_PART_BEGIN__ /simulink/libraryBrowser/Network/UDP/UDP@20@Configure.svg
<?xml version="1.0" encoding="UTF-8"?><svg width="42.0688mm" height="19.5792mm" viewBox="0 0 159 74" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><g fill="none" stroke="black" stroke-width="1" fill-rule="evenodd" stroke-linecap="square" stroke-linejoin="bevel"><g clip-path="none" fill="none" opacity="1" stroke="none" stroke-opacity="0" transform="matrix(1,0,0,1,0,0)"><path d="M0,0 L159,0 L159,74 L0,74 L0,0 z" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip3"><path d="M-2,-2 L157,-2 L157,72 L-2,72 L-2,-2 z"/></clipPath></defs><g clip-path="url(#clip3)" fill="#ffaa00" fill-opacity="1" opacity="1" stroke="none" stroke-opacity="0" transform="matrix(1,0,0,1,2,2)"><path d="M0,0 L155,0 L155,70 L0,70 L0,0 z" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip7"><path d="M-79,-19 L80,-19 L80,55 L-79,55 L-79,-19 z"/></clipPath></defs><g clip-path="url(#clip7)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,79,19)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="98.5625" x="-49.2813" xml:space="preserve" y="3.5">Configure UDP socket</text></g><defs><clipPath id="clip8"><path d="M-79,-31 L80,-31 L80,43 L-79,43 L-79,-31 z"/></clipPath></defs><g clip-path="url(#clip8)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,79,31)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="48.2031" x="-24.0938" xml:space="preserve" y="3.5"> IP: 0.0.0.0</text></g><defs><clipPath id="clip9"><path d="M-79,-43 L80,-43 L80,31 L-79,31 L-79,-43 z"/></clipPath></defs><g clip-path="url(#clip9)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,79,43)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="46.0156" x="-23" xml:space="preserve" y="3.5">Port: 9001</text></g><defs><clipPath id="clip10"><path d="M-79,-55 L80,-55 L80,19 L-79,19 L-79,-55 z"/></clipPath></defs><g clip-path="url(#clip10)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,79,55)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="58.25" x="-29.125" xml:space="preserve" y="3.5">Broadcasting</text></g><defs><clipPath id="clip11"><path d="M-4,-66 L155,-66 L155,8 L-4,8 L-4,-66 z"/></clipPath></defs><g clip-path="url(#clip11)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,4,66)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="96.5" x="0" xml:space="preserve" y="3.5">GOcontroll V4.3.2-rc1</text></g><defs><clipPath id="clip16"><path d="M-2.5,-2.5 L156.5,-2.5 L156.5,71.5 L-2.5,71.5 L-2.5,-2.5 z"/></clipPath></defs><g clip-path="url(#clip16)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,2.5,2.5)"><path d="M0,0 L155,0 L155,70 L0,70 L0,0 z" fill-rule="evenodd" vector-effect="none"/></g></g><!--generated on ubuntu @ 2024-07-25 14:37:27 CEST--></svg>

__MWOPC_PART_BEGIN__ /simulink/libraryBrowser/Network/UDP/UDP@20@Example.svg
<?xml version="1.0" encoding="UTF-8"?><svg width="42.0688mm" height="22.7542mm" viewBox="0 0 159 86" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><g fill="none" stroke="black" stroke-width="1" fill-rule="evenodd" stroke-linecap="square" stroke-linejoin="bevel"><g clip-path="none" fill="none" opacity="1" stroke="none" stroke-opacity="0" transform="matrix(1,0,0,1,0,0)"><path d="M0,0 L159,0 L159,86 L0,86 L0,0 z" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip3"><path d="M-2,-2 L157,-2 L157,84 L-2,84 L-2,-2 z"/></clipPath></defs><g clip-path="url(#clip3)" fill="#ffffff" fill-opacity="1" opacity="1" stroke="none" stroke-opacity="0" transform="matrix(1,0,0,1,2,2)"><path d="M0,0 L155,0 L155,82 L0,82 L0,0 z" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip11"><path d="M-2.5,-2.5 L156.5,-2.5 L156.5,83.5 L-2.5,83.5 L-2.5,-2.5 z"/></clipPath></defs><g clip-path="url(#clip11)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,2.5,2.5)"><path d="M0,0 L155,0 L155,82 L0,82 L0,0 z" fill-rule="evenodd" vector-effect="none"/></g></g><!--generated on ubuntu @ 2024-07-25 14:37:27 CEST--></svg>

__MWOPC_PART_BEGIN__ /simulink/libraryBrowser/Network/UDP/UDP@20@Receive.svg
<?xml version="1.0" encoding="UTF-8"?><svg width="43.3917mm" height="20.1083mm" viewBox="0 0 164 76" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><g fill="none" stroke="black" stroke-width="1" fill-rule="evenodd" stroke-linecap="square" stroke-linejoin="bevel"><g clip-path="none" fill="none" opacity="1" stroke="none" stroke-opacity="0" transform="matrix(1,0,0,1,0,0)"><path d="M0,0 L164,0 L164,76 L0,76 L0,0 z" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip3"><path d="M-157,-63 L7,-63 L7,13 L-157,13 L-157,-63 z"/></clipPath></defs><g clip-path="url(#clip3)" fill="none" opacity="1" stroke="#000000" stroke-linecap="round" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="2" transform="matrix(1,0,0,1,157,63)"><path d="M0.5,-4.5 L5.5,0.5 L0.5,5.5" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip6"><path d="M-157,-38 L7,-38 L7,38 L-157,38 L-157,-38 z"/></clipPath></defs><g clip-path="url(#clip6)" fill="none" opacity="1" stroke="#000000" stroke-linecap="round" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="2" transform="matrix(1,0,0,1,157,38)"><path d="M0.5,-4.5 L5.5,0.5 L0.5,5.5" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip9"><path d="M-157,-13 L7,-13 L7,63 L-157,63 L-157,-13 z"/></clipPath></defs><g clip-path="url(#clip9)" fill="none" opacity="1" stroke="#000000" stroke-linecap="round" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="2" transform="matrix(1,0,0,1,157,13)"><path d="M0.5,-4.5 L5.5,0.5 L0.5,5.5" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip12"><path d="M-2,-2 L162,-2 L162,74 L-2,74 L-2,-2 z"/></clipPath></defs><g clip-path="url(#clip12)" fill="#ffaa00" fill-opacity="1" opacity="1" stroke="none" stroke-opacity="0" transform="matrix(1,0,0,1,2,2)"><path d="M0,0 L155,0 L155,72 L0,72 L0,0 z" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip16"><path d="M-79,-38 L80,-38 L80,38 L-79,38 L-79,-38 z"/></clipPath></defs><g clip-path="url(#clip16)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,79,38)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="59.75" x="-29.875" xml:space="preserve" y="3.5">UDP Receive</text></g><defs><clipPath id="clip17"><path d="M-4,-68 L155,-68 L155,8 L-4,8 L-4,-68 z"/></clipPath></defs><g clip-path="url(#clip17)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,4,68)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="96.5" x="0" xml:space="preserve" y="3.5">GOcontroll V4.3.2-rc1</text></g><defs><clipPath id="clip18"><path d="M-154,-13 L5,-13 L5,63 L-154,63 L-154,-13 z"/></clipPath></defs><g clip-path="url(#clip18)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,154,13)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="52.6875" x="-52.6875" xml:space="preserve" y="3.5">function call</text></g><defs><clipPath id="clip19"><path d="M-154,-38 L5,-38 L5,38 L-154,38 L-154,-38 z"/></clipPath></defs><g clip-path="url(#clip19)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,154,38)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="40.5156" x="-40.5156" xml:space="preserve" y="3.5">message</text></g><defs><clipPath id="clip20"><path d="M-154,-63 L5,-63 L5,13 L-154,13 L-154,-63 z"/></clipPath></defs><g clip-path="url(#clip20)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,154,63)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="70.4531" x="-70.4531" xml:space="preserve" y="3.5">message length</text></g><defs><clipPath id="clip25"><path d="M-2.5,-2.5 L161.5,-2.5 L161.5,73.5 L-2.5,73.5 L-2.5,-2.5 z"/></clipPath></defs><g clip-path="url(#clip25)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,2.5,2.5)"><path d="M0,0 L155,0 L155,72 L0,72 L0,0 z" fill-rule="evenodd" vector-effect="none"/></g></g><!--generated on ubuntu @ 2024-07-25 14:37:27 CEST--></svg>

__MWOPC_PART_BEGIN__ /simulink/libraryBrowser/Network/UDP/UDP@20@Send.svg
<?xml version="1.0" encoding="UTF-8"?><svg width="43.3917mm" height="21.1667mm" viewBox="0 0 164 80" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><g fill="none" stroke="black" stroke-width="1" fill-rule="evenodd" stroke-linecap="square" stroke-linejoin="bevel"><g clip-path="none" fill="none" opacity="1" stroke="none" stroke-opacity="0" transform="matrix(1,0,0,1,0,0)"><path d="M0,0 L164,0 L164,80 L0,80 L0,0 z" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip3"><path d="M7,40 L-157,40 L-157,-40 L7,-40 L7,40 z"/></clipPath></defs><g clip-path="url(#clip3)" fill="none" opacity="1" stroke="#000000" stroke-linecap="round" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="2" transform="matrix(-1,0,0,-1,7,40)"><path d="M4.5,-5.5 L-0.5,-0.5 L4.5,4.5" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip6"><path d="M-7,-2 L157,-2 L157,78 L-7,78 L-7,-2 z"/></clipPath></defs><g clip-path="url(#clip6)" fill="#ffaa00" fill-opacity="1" opacity="1" stroke="none" stroke-opacity="0" transform="matrix(1,0,0,1,7,2)"><path d="M0,0 L155,0 L155,76 L0,76 L0,0 z" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip10"><path d="M-79,-28 L80,-28 L80,52 L-79,52 L-79,-28 z"/></clipPath></defs><g clip-path="url(#clip10)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,84,28)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="46.9688" x="-23.4844" xml:space="preserve" y="3.5">UDP Send</text></g><defs><clipPath id="clip11"><path d="M-79,-40 L80,-40 L80,40 L-79,40 L-79,-40 z"/></clipPath></defs><g clip-path="url(#clip11)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,84,40)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="45.4375" x="-22.7188" xml:space="preserve" y="3.5">IP: 0.0.0.0</text></g><defs><clipPath id="clip12"><path d="M-79,-52 L80,-52 L80,28 L-79,28 L-79,-52 z"/></clipPath></defs><g clip-path="url(#clip12)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,84,52)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="46.0156" x="-23" xml:space="preserve" y="3.5">Port: 9001</text></g><defs><clipPath id="clip13"><path d="M-5,-40 L154,-40 L154,40 L-5,40 L-5,-40 z"/></clipPath></defs><g clip-path="url(#clip13)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,10,40)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="40.5156" x="0" xml:space="preserve" y="3.5">message</text></g><defs><clipPath id="clip14"><path d="M-4,-72 L155,-72 L155,8 L-4,8 L-4,-72 z"/></clipPath></defs><g clip-path="url(#clip14)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,9,72)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="96.5" x="0" xml:space="preserve" y="3.5">GOcontroll V4.3.2-rc1</text></g><defs><clipPath id="clip19"><path d="M-7.5,-2.5 L156.5,-2.5 L156.5,77.5 L-7.5,77.5 L-7.5,-2.5 z"/></clipPath></defs><g clip-path="url(#clip19)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,7.5,2.5)"><path d="M0,0 L155,0 L155,76 L0,76 L0,0 z" fill-rule="evenodd" vector-effect="none"/></g></g><!--generated on ubuntu @ 2024-07-25 14:37:27 CEST--></svg>

__MWOPC_PART_BEGIN__ /simulink/libraryBrowser/slLibraryBrowser.xml
<?xml version="1.0" encoding="UTF-8" standalone="no" ?><library hasTree="1" revision="R2023b"><block_node SID="2725" hasTree="1"><block_name>CAN</block_name><block_class></block_class><block_desc></block_desc><block_path>$bdroot/CAN</block_path><block_open>$bdroot/CAN</block_open><block_isNotLeafBlk>1</block_isNotLeafBlk><block_position>-330 -536 -230 -494</block_position><block_icon>CAN.svg</block_icon><keywords></keywords><port_domains>NA.NA:0</port_domains><block_type>SubSystem</block_type><block_reference></block_reference><block_node SID="3212" hasTree="0"><block_name>CAN 2.0B</block_name><block_class></block_class><block_desc></block_desc><block_path>$bdroot/CAN/CAN 2.0B</block_path><block_open>$bdroot/CAN/CAN 2.0B</block_open><block_isNotLeafBlk>1</block_isNotLeafBlk><block_position>25   24  125   66</block_position><block_icon>CAN/CAN@20@2@2E@0B.svg</block_icon><keywords></keywords><port_domains>NA.NA:0</port_domains><block_type>SubSystem</block_type><block_reference></block_reference><block_node SID="4135" hasTree="0"><block_name>CAN send1</block_name><block_class>CAN send (Legacy)</block_class><block_desc>!! Legacy block, use the CAN send instead of CAN send1 in future projects !!
!! These will not work together, either use the legacy blocks or the new ones !!


Function
==========
Send a message on the CAN channel.

Parameters
========== 
Controller Type        The controller type, only changes the available CAN channels and puts the correct pinout for that type
CAN channel:           The CAN channel to send the message on.
Identifier type:         normal or extended ID's
Input ports:              The amount of input ports
Sample time:            -1 or divisible by base sample time [seconds] 

Input
==========
Port 1:                   CAN ID(uint32) in hexadecimal ie: hex2dec('0a')
Port 2..9                CAN message data (uint8)</block_desc><block_path>$bdroot/CAN/CAN 2.0B/CAN send1</block_path><block_open>$bdroot/CAN/CAN 2.0B/CAN send1</block_open><block_isNotLeafBlk>0</block_isNotLeafBlk><block_position>40   39  145  201</block_position><block_icon>CAN/CAN@20@2@2E@0B/CAN@20@send1.svg</block_icon><keywords></keywords><port_domains>signal.in_signal:2</port_domains><block_type>M-S-Function</block_type><block_reference></block_reference></block_node><block_node SID="4134" hasTree="0"><block_name>CAN receive1</block_name><block_class>CAN receive (Legacy)</block_class><block_desc>!! Legacy block, use the CAN receive instead of CAN receive1 in future projects !!
!! These will not work together, either use the legacy blocks or the new ones !!

Function
==========
Receive the newest message from the specified CAN channel.

Parameters
========== 
Controller Type          The controller type, only changes the available CAN channels and puts the correct pinout for that type
CAN channel:             The CAN channel to send the message on.
Output ports:             The amount of output ports
Output datatype:       The datatype of the output ports
Byte order:                 Select MSB or LSB first
Sample time:              -1 or divisible by base sample time [seconds] 

Input
==========
Port 1:                       CAN ID(uint32) in hexadecimal ie: hex2dec('0a')

Output
==========
Port 1:                       Checks for new message(int8)
Port 2..9                     Message data
</block_desc><block_path>$bdroot/CAN/CAN 2.0B/CAN receive1</block_path><block_open>$bdroot/CAN/CAN 2.0B/CAN receive1</block_open><block_isNotLeafBlk>0</block_isNotLeafBlk><block_position>185   40  290  200</block_position><block_icon>CAN/CAN@20@2@2E@0B/CAN@20@receive1.svg</block_icon><keywords></keywords><port_domains>signal.in_signal:1,signal.out_signal:2</port_domains><block_type>M-S-Function</block_type><block_reference></block_reference></block_node><block_node SID="4133" hasTree="0"><block_name>CAN Send</block_name><block_class>CAN Send</block_class><block_desc>&lt;p&gt;Send a CAN message.&lt;/p&gt;
&lt;p&gt;Expects a CAN_MESSAGE object as an input. Use CAN Pack to create the CAN_MESSAGE object.&lt;/p&gt;</block_desc><block_path>$bdroot/CAN/CAN 2.0B/CAN Send</block_path><block_open>$bdroot/CAN/CAN 2.0B/CAN Send</block_open><block_isNotLeafBlk>0</block_isNotLeafBlk><block_position>15  265  145  345</block_position><block_icon>CAN/CAN@20@2@2E@0B/CAN@20@Send.svg</block_icon><keywords></keywords><port_domains>signal.in_signal:1</port_domains><block_type>S-Function</block_type><block_reference></block_reference></block_node><block_node SID="4132" hasTree="0"><block_name>CAN Receive</block_name><block_class>CAN Receive</block_class><block_desc>&lt;p&gt;Receive a messages from the CAN bus.&lt;/p&gt;
&lt;p&gt;The output is a CAN_MESSAGE object. CAN Unpack block can be used to unpack the data from CAN_MESSAGE object.&lt;/p&gt;
&lt;p&gt;A Function-call subsystem is triggered every time when a new message has been received.&lt;/p&gt;
&lt;p&gt;There can be only one receive block on a given CAN bus, this receive block will receive all CAN messages on this bus. To filter them use the CAN Unpack blocks inside of a function call subsystem&lt;/p&gt;</block_desc><block_path>$bdroot/CAN/CAN 2.0B/CAN Receive</block_path><block_open>$bdroot/CAN/CAN 2.0B/CAN Receive</block_open><block_isNotLeafBlk>0</block_isNotLeafBlk><block_position>185  265  315  345</block_position><block_icon>CAN/CAN@20@2@2E@0B/CAN@20@Receive.svg</block_icon><keywords></keywords><port_domains>signal.out_signal:2</port_domains><block_type>S-Function</block_type><block_reference></block_reference></block_node></block_node><block_node SID="4136" hasTree="0"><block_name> CAN Example</block_name><block_class>SubSystem</block_class><block_desc>Simulink:blkprm_prompts:SubsysParameterDialogDescr</block_desc><block_path>$bdroot/CAN/ CAN Example</block_path><block_open>$bdroot/CAN/ CAN Example</block_open><block_isNotLeafBlk>0</block_isNotLeafBlk><block_position>25  134  125  176</block_position><block_icon>CAN/@20@CAN@20@Example.svg</block_icon><keywords></keywords><port_domains>NA.NA:0</port_domains><block_type>SubSystem</block_type><block_reference></block_reference></block_node></block_node><block_node SID="4051" hasTree="0"><block_name>LIN</block_name><block_class></block_class><block_desc></block_desc><block_path>$bdroot/LIN</block_path><block_open>$bdroot/LIN</block_open><block_isNotLeafBlk>1</block_isNotLeafBlk><block_position>-330 -471 -230 -429</block_position><block_icon>LIN.svg</block_icon><keywords></keywords><port_domains>NA.NA:0</port_domains><block_type>SubSystem</block_type><block_reference></block_reference><block_node SID="4115" hasTree="0"><block_name>LIN Master</block_name><block_class>LIN Master</block_class><block_desc>Function
==========
This block implements the LIN master functionality for communication with LIN 
slaves. The block complies with LIN 1.3 an LIN 2.0. When sending data to a slave 
device, this block will add the data to the LIN bus. When retrieving data from slaves, The block will wait for incoming data over LIN.

Parameters
========== 
Identifier: 
Selects the identifier to communicate with

Direction: 
Request data from a slave device or send data to a slave device

Datalength:
Defines the number of bytes that need to be send to- or requested from the slave 

Checksum: 
Select Classic for checksum based on databytes only. Enhanced for databytes and 
ID byte

Sample time:
Defines the execution interval of the block.

Input
==========
Port 1..8               LIN Data bytes to be send to a slave

Output
==========
Port 1..8               LIN Data bytes that are received from the slave</block_desc><block_path>$bdroot/LIN/LIN Master</block_path><block_open>$bdroot/LIN/LIN Master</block_open><block_isNotLeafBlk>0</block_isNotLeafBlk><block_position>-30   96   90  354</block_position><block_icon>LIN/LIN@20@Master.svg</block_icon><keywords></keywords><port_domains>signal.in_signal:2</port_domains><block_type>M-S-Function</block_type><block_reference></block_reference></block_node></block_node><block_node SID="3908" hasTree="1"><block_name>Network</block_name><block_class></block_class><block_desc></block_desc><block_path>$bdroot/Network</block_path><block_open>$bdroot/Network</block_open><block_isNotLeafBlk>1</block_isNotLeafBlk><block_position>-330 -406 -230 -364</block_position><block_icon>Network.svg</block_icon><keywords></keywords><port_domains>NA.NA:0</port_domains><block_type>SubSystem</block_type><block_reference></block_reference><block_node SID="4229" hasTree="0"><block_name>TCP</block_name><block_class></block_class><block_desc></block_desc><block_path>$bdroot/Network/TCP</block_path><block_open>$bdroot/Network/TCP</block_open><block_isNotLeafBlk>1</block_isNotLeafBlk><block_position>25 -146  125 -104</block_position><block_icon>Network/TCP.svg</block_icon><keywords></keywords><port_domains>NA.NA:0</port_domains><block_type>SubSystem</block_type><block_reference></block_reference><block_node SID="4230" hasTree="0"><block_name>TCP Configure</block_name><block_class>TCP Configure</block_class><block_desc>Block to configure a TCP scoket

The socket ID should be a unique identifier to link the send and receive blocks to.
The name of the actual socket in the C code will be socket_&lt;socket id&gt;, so characters that would not work in a C variable name will not work.

Setting the ip to 0.0.0.0 makes the controller accept messages on all interfaces.
Set it to the ip of a specific interface to limit this.

The socket mode determines whether this socket will listen for a connection or actively try to make one to a given ip and port.
Server will wait for something to connect to it, the client will try to connect to a server at the given ip and port

Setting the timeout to zero disables the timeout

When the disconnect input is true, it will close the current connection if there is one, if there isn't one it will not allow a connection to be made as long as it is true.

Outputs whether or not the socket currently has an active connection (true means connnected)</block_desc><block_path>$bdroot/Network/TCP/TCP Configure</block_path><block_open>$bdroot/Network/TCP/TCP Configure</block_open><block_isNotLeafBlk>0</block_isNotLeafBlk><block_position>1070   425  1225   495</block_position><block_icon>Network/TCP/TCP@20@Configure.svg</block_icon><keywords></keywords><port_domains>signal.in_signal:1,signal.out_signal:1</port_domains><block_type>M-S-Function</block_type><block_reference></block_reference></block_node><block_node SID="4272" hasTree="0"><block_name>TCP Receive</block_name><block_class>TCP Receive</block_class><block_desc>Receive all TCP messages on the given socket

For every message received this block will call the functions attached to the function call output.
In these function calls you can then use the message and message length outputs to process/buffer the received messages.

Outputs:
function call:
Attach to a function call subsystem or something like it to call that function every time a message is received.

message:
The uint8 vector received from the socket. The length of this vector is likely longer than the actual number of bytes received.

message length:
The number of bytes actually received, use this to get the actual fresh bytes from the message.

Parameters:
buffer size:
The maximum number of bytes that can be read from the socket in one message, this also determines the width of the message vector.</block_desc><block_path>$bdroot/Network/TCP/TCP Receive</block_path><block_open>$bdroot/Network/TCP/TCP Receive</block_open><block_isNotLeafBlk>0</block_isNotLeafBlk><block_position>1070   524  1225   596</block_position><block_icon>Network/TCP/TCP@20@Receive.svg</block_icon><keywords></keywords><port_domains>signal.out_signal:3</port_domains><block_type>S-Function</block_type><block_reference></block_reference></block_node><block_node SID="4273" hasTree="0"><block_name>TCP Send</block_name><block_class>TCP Send</block_class><block_desc>Send a TCP message to the chosen sockets connection, whether it be client or server.

The Message input should be a uint8 vector, if you end up with a [1xn] or [nx1] matrix, use the reshape block to turn it into a vector.</block_desc><block_path>$bdroot/Network/TCP/TCP Send</block_path><block_open>$bdroot/Network/TCP/TCP Send</block_open><block_isNotLeafBlk>0</block_isNotLeafBlk><block_position>1070   627  1225   703</block_position><block_icon>Network/TCP/TCP@20@Send.svg</block_icon><keywords></keywords><port_domains>signal.in_signal:1</port_domains><block_type>M-S-Function</block_type><block_reference></block_reference></block_node></block_node><block_node SID="4065" hasTree="0"><block_name>UDP</block_name><block_class></block_class><block_desc></block_desc><block_path>$bdroot/Network/UDP</block_path><block_open>$bdroot/Network/UDP</block_open><block_isNotLeafBlk>1</block_isNotLeafBlk><block_position>25  -61  125  -19</block_position><block_icon>Network/UDP.svg</block_icon><keywords></keywords><port_domains>NA.NA:0</port_domains><block_type>SubSystem</block_type><block_reference></block_reference><block_node SID="4091" hasTree="0"><block_name>UDP Configure</block_name><block_class>UDP Configure</block_class><block_desc>Block to configure a UDP connection

The socket ID should be a unique identifier to link the send and receive blocks to.
The name of the actual socket in the C code will be socket_&lt;socket id&gt;, so characters that would not work in a C variable name will not work.

Setting the ip to 0.0.0.0 makes the controller accept messages on all interfaces.
Set it to the ip of a specific interface to limit this.

Allowing broadcasting enables you to send messages to a full range of ip addresses, for example:
192.168.255.255 sends messages to 192.168.1.1, 192.168.2.1 ... 192.168.1.2, 192.168.1.3...</block_desc><block_path>$bdroot/Network/UDP/UDP Configure</block_path><block_open>$bdroot/Network/UDP/UDP Configure</block_open><block_isNotLeafBlk>0</block_isNotLeafBlk><block_position>1070   425  1225   495</block_position><block_icon>Network/UDP/UDP@20@Configure.svg</block_icon><keywords></keywords><port_domains>NA.NA:0</port_domains><block_type>M-S-Function</block_type><block_reference></block_reference></block_node><block_node SID="4092" hasTree="0"><block_name>UDP Receive</block_name><block_class>UDP Receive</block_class><block_desc>Receive all UDP messages

For every message received this block will call the functions attached to the function call output.
In these function calls you can then use the message and message length outputs to process/buffer the received messages.

Outputs:
function call:
Attach to a function call subsystem or something like it to call that function every time a message is received.

message:
The uint8 vector received from the socket. The length of this vector is likely longer than the actual number of bytes received.

message length:
The number of bytes actually received, use this to get the actual fresh bytes from the message.

Parameters:
buffer size:
The maximum number of bytes that can be read from the socket in one message, this also determines the width of the message vector.</block_desc><block_path>$bdroot/Network/UDP/UDP Receive</block_path><block_open>$bdroot/Network/UDP/UDP Receive</block_open><block_isNotLeafBlk>0</block_isNotLeafBlk><block_position>1070   524  1225   596</block_position><block_icon>Network/UDP/UDP@20@Receive.svg</block_icon><keywords></keywords><port_domains>signal.out_signal:3</port_domains><block_type>S-Function</block_type><block_reference></block_reference></block_node><block_node SID="4093" hasTree="0"><block_name>UDP Send</block_name><block_class>UDP Send</block_class><block_desc>Send a UDP message to the designated address.

The Message input should be a uint8 vector, if you end up with a [1xn] or [nx1] matrix, use the reshape block to turn it into a vector.

IP address should be a valid IP address as a string

Port should be a within the range of a uint16</block_desc><block_path>$bdroot/Network/UDP/UDP Send</block_path><block_open>$bdroot/Network/UDP/UDP Send</block_open><block_isNotLeafBlk>0</block_isNotLeafBlk><block_position>1070   627  1225   703</block_position><block_icon>Network/UDP/UDP@20@Send.svg</block_icon><keywords></keywords><port_domains>signal.in_signal:1</port_domains><block_type>M-S-Function</block_type><block_reference></block_reference></block_node><block_node SID="4175" hasTree="0"><block_name>UDP Example</block_name><block_class>SubSystem</block_class><block_desc>Simulink:blkprm_prompts:SubsysParameterDialogDescr</block_desc><block_path>$bdroot/Network/UDP/UDP Example</block_path><block_open>$bdroot/Network/UDP/UDP Example</block_open><block_isNotLeafBlk>0</block_isNotLeafBlk><block_position>1070   734  1225   816</block_position><block_icon>Network/UDP/UDP@20@Example.svg</block_icon><keywords></keywords><port_domains>NA.NA:0</port_domains><block_type>SubSystem</block_type><block_reference></block_reference></block_node></block_node></block_node><block_node SID="3919" hasTree="1"><block_name>Modules</block_name><block_class></block_class><block_desc></block_desc><block_path>$bdroot/Modules</block_path><block_open>$bdroot/Modules</block_open><block_isNotLeafBlk>1</block_isNotLeafBlk><block_position>-330 -336 -230 -294</block_position><block_icon>Modules.svg</block_icon><keywords></keywords><port_domains>NA.NA:0</port_domains><block_type>SubSystem</block_type><block_reference></block_reference><block_node SID="3989" hasTree="0"><block_name>Input Module</block_name><block_class></block_class><block_desc></block_desc><block_path>$bdroot/Modules/Input Module</block_path><block_open>$bdroot/Modules/Input Module</block_open><block_isNotLeafBlk>1</block_isNotLeafBlk><block_position>290 -236  400 -194</block_position><block_icon>Modules/Input@20@Module.svg</block_icon><keywords></keywords><port_domains>NA.NA:0</port_domains><block_type>SubSystem</block_type><block_reference></block_reference><block_node SID="4108" hasTree="0"><block_name>Input Module (6 channel)</block_name><block_class>Input Module</block_class><block_desc>Whit this function block, you can configure each channel of the 6 channel input module (201001xx). The configuration of the module is executed once so the input module acts acording the setting. During runtime, the block outputs give the measured values from eacht measured channel which can directly be used inside the model. 

Module location:
Sets the location of the module slot where the module is physically 
plugged into.

Channel tabs:
Each channel has its own configuration tab.

Function select:
Select the desired input signal configuration.

Voltage range:
Select the expected input range of the signal.

Analog filter samples:
The number of samples that are passed into a moving average filter. 
(only active in case of an analog input)

Pulses per rotation
The number of pulses for one rotation. This parameter is needed in case the
module needs to calculate the rotation speed from i.e. an axle.

Pull Up:
If required, a pull-up resistance can be added to the input signal.

Pull Down:
If required, a pull-down resistance can be added to the input signal.</block_desc><block_path>$bdroot/Modules/Input Module/Input Module (6 channel)</block_path><block_open>$bdroot/Modules/Input Module/Input Module (6 channel)</block_open><block_isNotLeafBlk>0</block_isNotLeafBlk><block_position>205   92  390  183</block_position><block_icon>Modules/Input@20@Module/Input@20@Module@20@@28@6@20@channel@29@.svg</block_icon><keywords></keywords><port_domains>signal.out_signal:6</port_domains><block_type>M-S-Function</block_type><block_reference></block_reference></block_node><block_node SID="4109" hasTree="0"><block_name>Input Module (10 channel)</block_name><block_class>Input Module</block_class><block_desc>Whit this function block, you can configure each channel of the 6 channel input module (201001xx). The configuration of the module is executed once so the input module acts acording the setting. During runtime, the block outputs give the measured values from eacht measured channel which can directly be used inside the model. 

Module location:
Sets the location of the module slot where the module is physically 
plugged into.

Channel tabs:
Each channel has its own configuration tab.

Function select:
Select the desired input signal configuration.

Voltage range:
Select the expected input range of the signal.

Analog filter samples:
The number of samples that are passed into a moving average filter. 
(only active in case of an analog input)

Pulses per rotation
The number of pulses for one rotation. This parameter is needed in case the
module needs to calculate the rotation speed from i.e. an axle.

Pull Up:
If required, a pull-up resistance can be added to the input signal.

Pull Down:
If required, a pull-down resistance can be added to the input signal.</block_desc><block_path>$bdroot/Modules/Input Module/Input Module (10 channel)</block_path><block_open>$bdroot/Modules/Input Module/Input Module (10 channel)</block_open><block_isNotLeafBlk>0</block_isNotLeafBlk><block_position>205  216  390  379</block_position><block_icon>Modules/Input@20@Module/Input@20@Module@20@@28@10@20@channel@29@.svg</block_icon><keywords></keywords><port_domains>signal.out_signal:10</port_domains><block_type>M-S-Function</block_type><block_reference></block_reference></block_node><block_node SID="4110" hasTree="0"><block_name>Reset Puls Counter (6 channel)</block_name><block_class>Reset puls counter</block_class><block_desc>This function block resets the pulscounter from a specified input channel of the input module that is configured as a pulscounter. A trigger on input pin 1 wil set the pulscounter to the value applied on pin 2 </block_desc><block_path>$bdroot/Modules/Input Module/Reset Puls Counter (6 channel)</block_path><block_open>$bdroot/Modules/Input Module/Reset Puls Counter (6 channel)</block_open><block_isNotLeafBlk>0</block_isNotLeafBlk><block_position>205  415  390  470</block_position><block_icon>Modules/Input@20@Module/Reset@20@Puls@20@Counter@20@@28@6@20@channel@29@.svg</block_icon><keywords></keywords><port_domains>signal.in_signal:2</port_domains><block_type>M-S-Function</block_type><block_reference></block_reference></block_node><block_node SID="4111" hasTree="0"><block_name>Input Module 4-20 mA (10 channel)</block_name><block_class>4-20 mA Input Module</block_class><block_desc>Controller type:
Selects the controller that is to be programmed. Pinning on the mask will be adopted accordingly.

Module slot:
Sets the location of the module slot where the module is physically plugged into.

Supply for different channels:
Enables the 16V supply per 2 channels. When some input pins are not used, it is recommended to disable these inputs to prevent controller pins floating at 16V.

Module status:
The status output provides information of the actual state per 2 channels:

0x00 all channels are supplied no problems.
0x01Channel 1 &amp; 2 over current detected and supply disconnected.
0x02Channel 3 &amp; 4 over current detected and supply disconnected.
0x04Channel 5 &amp; 6 over current detected and supply disconnected.
0x08Channel 7 &amp; 8 over current detected and supply disconnected.
0x10Channel 9 &amp; 10 over current detected and supply disconnected.
</block_desc><block_path>$bdroot/Modules/Input Module/Input Module 4-20 mA (10 channel)</block_path><block_open>$bdroot/Modules/Input Module/Input Module 4-20 mA (10 channel)</block_open><block_isNotLeafBlk>0</block_isNotLeafBlk><block_position>205  509  390  671</block_position><block_icon>Modules/Input@20@Module/Input@20@Module@20@4@2D@20@20@mA@20@@28@10@20@channel@29@.svg</block_icon><keywords></keywords><port_domains>signal.out_signal:11</port_domains><block_type>M-S-Function</block_type><block_reference></block_reference></block_node></block_node><block_node SID="3990" hasTree="0"><block_name>Output Module</block_name><block_class></block_class><block_desc></block_desc><block_path>$bdroot/Modules/Output Module</block_path><block_open>$bdroot/Modules/Output Module</block_open><block_isNotLeafBlk>1</block_isNotLeafBlk><block_position>290 -171  400 -129</block_position><block_icon>Modules/Output@20@Module.svg</block_icon><keywords></keywords><port_domains>NA.NA:0</port_domains><block_type>SubSystem</block_type><block_reference></block_reference><block_node SID="4112" hasTree="0"><block_name>Output Module (6 channel)</block_name><block_class>6 Channel Output Module</block_class><block_desc>With this function block, you can configure each output of the 6 channel output module (202002xx). During initialization of the controller, the corresponding outputs of the module are set according the settings. During runtime, the value pushed into the block will control the outputs.

Sample time:
Execution frequency from function block. For proper functioning of the output module, us a sampletime of 100 ms or lower.

Module slot:
Sets the location of the module slot where the module is physically plugged into.

Frequency:
In case a duty Cycle is used, select the frequency.

Function select:
Select the desired output configuration for each channel
</block_desc><block_path>$bdroot/Modules/Output Module/Output Module (6 channel)</block_path><block_open>$bdroot/Modules/Output Module/Output Module (6 channel)</block_open><block_isNotLeafBlk>0</block_isNotLeafBlk><block_position>625  275  840  380</block_position><block_icon>Modules/Output@20@Module/Output@20@Module@20@@28@6@20@channel@29@.svg</block_icon><keywords></keywords><port_domains>signal.in_signal:6</port_domains><block_type>M-S-Function</block_type><block_reference></block_reference></block_node><block_node SID="4113" hasTree="0"><block_name>Output Module (10 channel)</block_name><block_class>10 Channel Output Module</block_class><block_desc>With this function block, you can configure each output of the 6 channel output module (202002xx). During initialization of the controller, the corresponding outputs of the module are set according the settings. During runtime, the value pushed into the block will control the outputs.

Sample time:
Execution frequency from function block. For proper functioning of the output module, us a sampletime of 100 ms or lower.

Module slot:
Sets the location of the module slot where the module is physically plugged into.

Frequency:
In case a duty Cycle is used, select the frequency.

Function select:
Select the desired output configuration for each channel
</block_desc><block_path>$bdroot/Modules/Output Module/Output Module (10 channel)</block_path><block_open>$bdroot/Modules/Output Module/Output Module (10 channel)</block_open><block_isNotLeafBlk>0</block_isNotLeafBlk><block_position>625  399  840  566</block_position><block_icon>Modules/Output@20@Module/Output@20@Module@20@@28@10@20@channel@29@.svg</block_icon><keywords></keywords><port_domains>signal.in_signal:10</port_domains><block_type>M-S-Function</block_type><block_reference></block_reference></block_node><block_node SID="4114" hasTree="0"><block_name>Output Module Monitor (6 channel)</block_name><block_class>Output Module Monitor</block_class><block_desc>With this function block, you can read parameters from the specified 6 channel output module (202002xx). The block will provide some information about the module such as:

Module temperature:
The temperature in degrees from the output module.

Module ground shift
In case the ground connection of the module is poor, the power ground is shifted. The value gives the ground difference in mV and schould be beneath 50 mV

Module supply voltage
The measured supply voltage of the module in mV. This output only works for hardware version 7 and above, gives off 0 otherwise.

Channel current
The current from each channel is measured and given in mA. If the ouput is configured as high side, the result will be positive. If the ouput is configured as low side, the value will be negative

Channel dutycycle
This output only appears if the corresponding output module block has a channel in peak and hold mode, and it only works for module firmware 2.1.0 and higher for module hardware version 6.
This output can be used to monitor the actual output dutycycle, because the peak and hold function works with current control this value was not known. This value can then be used to perform extra checks on the output in this mode.
</block_desc><block_path>$bdroot/Modules/Output Module/Output Module Monitor (6 channel)</block_path><block_open>$bdroot/Modules/Output Module/Output Module Monitor (6 channel)</block_open><block_isNotLeafBlk>0</block_isNotLeafBlk><block_position>625  583  925  717</block_position><block_icon>Modules/Output@20@Module/Output@20@Module@20@Monitor@20@@28@6@20@channel@29@.svg</block_icon><keywords></keywords><port_domains>signal.out_signal:10</port_domains><block_type>M-S-Function</block_type><block_reference></block_reference></block_node></block_node><block_node SID="4026" hasTree="0"><block_name>Bridge Module</block_name><block_class></block_class><block_desc></block_desc><block_path>$bdroot/Modules/Bridge Module</block_path><block_open>$bdroot/Modules/Bridge Module</block_open><block_isNotLeafBlk>1</block_isNotLeafBlk><block_position>290 -106  400  -64</block_position><block_icon>Modules/Bridge@20@Module.svg</block_icon><keywords></keywords><port_domains>NA.NA:0</port_domains><block_type>SubSystem</block_type><block_reference></block_reference><block_node SID="4105" hasTree="0"><block_name>Bridge Module</block_name><block_class>Bridge Module</block_class><block_desc>With this function block, you can configure each output of the bridge module (202001xx). During initialization of the controller, the corresponding outputs of the module are set according the settings. During runtime, the value pushed into the block will control the outputs.

Module slot:
Sets the location of the module slot where the module is physically 
plugged into.

Channel tabs:
Each ouput has its own configuration tab.

Function select:
Select the desired output configuration.

Frequency:
In case a duty Cycle is used, select the frequency.
</block_desc><block_path>$bdroot/Modules/Bridge Module/Bridge Module</block_path><block_open>$bdroot/Modules/Bridge Module/Bridge Module</block_open><block_isNotLeafBlk>0</block_isNotLeafBlk><block_position>640  355  885  430</block_position><block_icon>Modules/Bridge@20@Module/Bridge@20@Module.svg</block_icon><keywords></keywords><port_domains>signal.in_signal:2</port_domains><block_type>M-S-Function</block_type><block_reference></block_reference></block_node><block_node SID="4107" hasTree="0"><block_name>Bridge Module Monitor</block_name><block_class>Bridge Module Monitor</block_class><block_desc>With this function block, you can read parameters from the specified bridge module (202001xx). The block will provide some information about the module such as:

Module temperature:
The temperature in degrees from the output module.

Module ground shift
In case the ground connection of the module is poor, the power ground is shifted. The value gives the ground difference in mV and schould be beneath 50 mV

Channel current
Current related output for each output channel
</block_desc><block_path>$bdroot/Modules/Bridge Module/Bridge Module Monitor</block_path><block_open>$bdroot/Modules/Bridge Module/Bridge Module Monitor</block_open><block_isNotLeafBlk>0</block_isNotLeafBlk><block_position>640  486  885  564</block_position><block_icon>Modules/Bridge@20@Module/Bridge@20@Module@20@Monitor.svg</block_icon><keywords></keywords><port_domains>signal.out_signal:4</port_domains><block_type>M-S-Function</block_type><block_reference></block_reference></block_node></block_node></block_node><block_node SID="3975" hasTree="0"><block_name>Enclosure LED's</block_name><block_class></block_class><block_desc></block_desc><block_path>$bdroot/Enclosure LED's</block_path><block_open>$bdroot/Enclosure LED's</block_open><block_isNotLeafBlk>1</block_isNotLeafBlk><block_position>-330 -266 -230 -224</block_position><block_icon>Enclosure@20@LED@27@s.svg</block_icon><keywords></keywords><port_domains>NA.NA:0</port_domains><block_type>SubSystem</block_type><block_reference></block_reference><block_node SID="4102" hasTree="0"><block_name>Enclosure LED</block_name><block_class>Enclosure LED's</block_class><block_desc>The Moduline controller is equipped with 4 RGB status LED's. To control them, simply configure the mask ( LED and color) and control them using uint8 values. 

Note: Moduline IV HW &gt;= 3.02 has duty cycle controlled LED's. The intensity can be set from 0 (0%) to 255 (100%). 

LED: Select the LED that is needs to be controlled.

Color: Select the color the LED needs to illuminate.</block_desc><block_path>$bdroot/Enclosure LED's/Enclosure LED</block_path><block_open>$bdroot/Enclosure LED's/Enclosure LED</block_open><block_isNotLeafBlk>0</block_isNotLeafBlk><block_position>-20 -166  130 -124</block_position><block_icon>Enclosure@20@LED@27@s/Enclosure@20@LED.svg</block_icon><keywords></keywords><port_domains>signal.in_signal:1</port_domains><block_type>M-S-Function</block_type><block_reference></block_reference></block_node></block_node><block_node SID="3980" hasTree="0"><block_name>Supply control</block_name><block_class></block_class><block_desc></block_desc><block_path>$bdroot/Supply control</block_path><block_open>$bdroot/Supply control</block_open><block_isNotLeafBlk>1</block_isNotLeafBlk><block_position>-330 -196 -230 -154</block_position><block_icon>Supply@20@control.svg</block_icon><keywords></keywords><port_domains>NA.NA:0</port_domains><block_type>SubSystem</block_type><block_reference></block_reference><block_node SID="4097" hasTree="0"><block_name>Controller Active</block_name><block_class>Controller Active</block_class><block_desc>The GOcontroll Moduline IV is able to keep itself alive. As long the K30 power is applied (connector C pin 5-7) and the input of the Controller Active function block is high, the controller will stay on even if the K15 pins (connector C pin 2,3 or 4) are low. 
If the controller is switched off by software, a restart is only possible when the device is activated by one of the K15 pins of connector C.

To detect an external shutdown (K15 pins goes low), simply drag in the K15 Voltage block. This block provides the input voltage from the K15 pins </block_desc><block_path>$bdroot/Supply control/Controller Active</block_path><block_open>$bdroot/Supply control/Controller Active</block_open><block_isNotLeafBlk>0</block_isNotLeafBlk><block_position>110  334  260  376</block_position><block_icon>Supply@20@control/Controller@20@Active.svg</block_icon><keywords></keywords><port_domains>signal.in_signal:1</port_domains><block_type>M-S-Function</block_type><block_reference></block_reference></block_node><block_node SID="4095" hasTree="0"><block_name>K15 Voltage</block_name><block_class>Contact Voltage</block_class><block_desc>The K15 voltage provides the K15 voltage in mV that is applied on connector C pin 2,3 or 4. A positive voltage on one of these pins will start-up the controller. These function blocks can be used to read out which K15 input pin triggered the startup.</block_desc><block_path>$bdroot/Supply control/K15 Voltage</block_path><block_open>$bdroot/Supply control/K15 Voltage</block_open><block_isNotLeafBlk>0</block_isNotLeafBlk><block_position>110  399  260  441</block_position><block_icon>Supply@20@control/K15@20@Voltage.svg</block_icon><keywords></keywords><port_domains>signal.out_signal:1</port_domains><block_type>M-S-Function</block_type><block_reference></block_reference></block_node><block_node SID="4096" hasTree="0"><block_name>K30 Voltage</block_name><block_class>Supply voltage</block_class><block_desc>The K30 voltage provides the power supply in mV that is applied on connector C pin 5-7</block_desc><block_path>$bdroot/Supply control/K30 Voltage</block_path><block_open>$bdroot/Supply control/K30 Voltage</block_open><block_isNotLeafBlk>0</block_isNotLeafBlk><block_position>110  464  260  506</block_position><block_icon>Supply@20@control/K30@20@Voltage.svg</block_icon><keywords></keywords><port_domains>signal.out_signal:1</port_domains><block_type>M-S-Function</block_type><block_reference></block_reference></block_node></block_node><block_node SID="4007" hasTree="1"><block_name>Memory store</block_name><block_class></block_class><block_desc></block_desc><block_path>$bdroot/Memory store</block_path><block_open>$bdroot/Memory store</block_open><block_isNotLeafBlk>1</block_isNotLeafBlk><block_position>-330 -131 -230  -89</block_position><block_icon>Memory@20@store.svg</block_icon><keywords></keywords><port_domains>NA.NA:0</port_domains><block_type>SubSystem</block_type><block_reference></block_reference><block_node SID="4032" hasTree="0"><block_name>Variable to memory</block_name><block_class></block_class><block_desc></block_desc><block_path>$bdroot/Memory store/Variable to memory</block_path><block_open>$bdroot/Memory store/Variable to memory</block_open><block_isNotLeafBlk>1</block_isNotLeafBlk><block_position>470  439  570  481</block_position><block_icon>Memory@20@store/Variable@20@to@20@memory.svg</block_icon><keywords></keywords><port_domains>NA.NA:0</port_domains><block_type>SubSystem</block_type><block_reference></block_reference><block_node SID="4103" hasTree="0"><block_name>Memory write</block_name><block_class>Store data to memory</block_class><block_desc>This function block stores a value to the memory with a specified key. To get the stored value from memory, use the read from memory function block and retrieve the value by key</block_desc><block_path>$bdroot/Memory store/Variable to memory/Memory write</block_path><block_open>$bdroot/Memory store/Variable to memory/Memory write</block_open><block_isNotLeafBlk>0</block_isNotLeafBlk><block_position>485  511  640  559</block_position><block_icon>Memory@20@store/Variable@20@to@20@memory/Memory@20@write.svg</block_icon><keywords></keywords><port_domains>signal.in_signal:1</port_domains><block_type>M-S-Function</block_type><block_reference></block_reference></block_node><block_node SID="4104" hasTree="0"><block_name>Memory read</block_name><block_class>Read value from memory</block_class><block_desc>This function block reads a value from memory by the specified key. To store a value to memory, use the store to memory function block.</block_desc><block_path>$bdroot/Memory store/Variable to memory/Memory read</block_path><block_open>$bdroot/Memory store/Variable to memory/Memory read</block_open><block_isNotLeafBlk>0</block_isNotLeafBlk><block_position>485  585  640  635</block_position><block_icon>Memory@20@store/Variable@20@to@20@memory/Memory@20@read.svg</block_icon><keywords></keywords><port_domains>signal.out_signal:1</port_domains><block_type>M-S-Function</block_type><block_reference></block_reference></block_node></block_node><block_node SID="4035" hasTree="0"><block_name>Diagnostic to memory</block_name><block_class></block_class><block_desc></block_desc><block_path>$bdroot/Memory store/Diagnostic to memory</block_path><block_open>$bdroot/Memory store/Diagnostic to memory</block_open><block_isNotLeafBlk>1</block_isNotLeafBlk><block_position>470  519  570  561</block_position><block_icon>Memory@20@store/Diagnostic@20@to@20@memory.svg</block_icon><keywords></keywords><port_domains>NA.NA:0</port_domains><block_type>SubSystem</block_type><block_reference></block_reference><block_node SID="4117" hasTree="0"><block_name>Store diagnostic code with freeze frame</block_name><block_class>Store diagnostic code to memory with freeze frame</block_class><block_desc>This function block stores a diagnostic code to memory including a number of signal values.

Diagnostic code type:
The type defines the severity of the diagnostic code.

Freeze frame signals:
A string array of signal names like ["signal1", "signal2"], make sure to use the double quotes " instead of single quotes '
Single quotes will concatinate the string instead of making an array.

You should place this block in a triggered subsystem.
</block_desc><block_path>$bdroot/Memory store/Diagnostic to memory/Store diagnostic code with freeze frame</block_path><block_open>$bdroot/Memory store/Diagnostic to memory/Store diagnostic code with freeze frame</block_open><block_isNotLeafBlk>0</block_isNotLeafBlk><block_position>495  407  730  503</block_position><block_icon>Memory@20@store/Diagnostic@20@to@20@memory/Store@20@diagnostic@20@code@20@with@20@freeze@20@frame.svg</block_icon><keywords></keywords><port_domains>signal.in_signal:2</port_domains><block_type>M-S-Function</block_type><block_reference></block_reference></block_node><block_node SID="4125" hasTree="0"><block_name>Store diagnostic code</block_name><block_class>Store diagnostic code to memory</block_class><block_desc>This function block stores a diagnostic code to memory.

Diagnostic code type:
The type defines the severity of the diagnostic code.</block_desc><block_path>$bdroot/Memory store/Diagnostic to memory/Store diagnostic code</block_path><block_open>$bdroot/Memory store/Diagnostic to memory/Store diagnostic code</block_open><block_isNotLeafBlk>0</block_isNotLeafBlk><block_position>495  539  730  591</block_position><block_icon>Memory@20@store/Diagnostic@20@to@20@memory/Store@20@diagnostic@20@code.svg</block_icon><keywords></keywords><port_domains>signal.in_signal:2</port_domains><block_type>SubSystem</block_type><block_reference></block_reference></block_node><block_node SID="4119" hasTree="0"><block_name>Number of stored diagnostic codes</block_name><block_class>Read number of stored codes</block_class><block_desc>This function block reads the number of stored codes under the specified diagnostic code type.

Sample time:
Execution period for the function block.
You might want to put this block in a triggered subsystem or a function call subsystem

Diagnostic code type:
The type defines the severity of the diagnostic code categorie that is read.</block_desc><block_path>$bdroot/Memory store/Diagnostic to memory/Number of stored diagnostic codes</block_path><block_open>$bdroot/Memory store/Diagnostic to memory/Number of stored diagnostic codes</block_open><block_isNotLeafBlk>0</block_isNotLeafBlk><block_position>490  628  730  672</block_position><block_icon>Memory@20@store/Diagnostic@20@to@20@memory/Number@20@of@20@stored@20@diagnostic@20@codes.svg</block_icon><keywords></keywords><port_domains>signal.out_signal:1</port_domains><block_type>M-S-Function</block_type><block_reference></block_reference></block_node><block_node SID="4121" hasTree="0"><block_name>Delete all codes for one group</block_name><block_class>Delete diagnostic codes from memory</block_class><block_desc>This function block deletes stored codes under the specified diagnostic code type.

Diagnostic code type:
The type defines the severity of the diagnostic code categorie that is deleted.</block_desc><block_path>$bdroot/Memory store/Diagnostic to memory/Delete all codes for one group</block_path><block_open>$bdroot/Memory store/Diagnostic to memory/Delete all codes for one group</block_open><block_isNotLeafBlk>0</block_isNotLeafBlk><block_position>490  710  730  745</block_position><block_icon>Memory@20@store/Diagnostic@20@to@20@memory/Delete@20@all@20@codes@20@for@20@one@20@group.svg</block_icon><keywords></keywords><port_domains>signal.in_signal:1</port_domains><block_type>SubSystem</block_type><block_reference></block_reference></block_node><block_node SID="4124" hasTree="0"><block_name>Read diagnostic code</block_name><block_class>Read a diagnostic code from memory</block_class><block_desc>This function block reads a stored diagnostic code from a specified diagnostic type. The code that is read from memory is specified by the index numper on input port 2. The stored code goes out of the functionblock as a uint32 value.

Sample time:
Execution period for the function block.

It might be a good idea to use this block in a triggered subsystem or a function call subsystem</block_desc><block_path>$bdroot/Memory store/Diagnostic to memory/Read diagnostic code</block_path><block_open>$bdroot/Memory store/Diagnostic to memory/Read diagnostic code</block_open><block_isNotLeafBlk>0</block_isNotLeafBlk><block_position>490  783  730  872</block_position><block_icon>Memory@20@store/Diagnostic@20@to@20@memory/Read@20@diagnostic@20@code.svg</block_icon><keywords></keywords><port_domains>signal.in_signal:2,signal.out_signal:1</port_domains><block_type>M-S-Function</block_type><block_reference></block_reference></block_node></block_node></block_node><block_node SID="4017" hasTree="0"><block_name>System</block_name><block_class></block_class><block_desc></block_desc><block_path>$bdroot/System</block_path><block_open>$bdroot/System</block_open><block_isNotLeafBlk>1</block_isNotLeafBlk><block_position>-330  -66 -230  -24</block_position><block_icon>System.svg</block_icon><keywords></keywords><port_domains>NA.NA:0</port_domains><block_type>SubSystem</block_type><block_reference></block_reference><block_node SID="4100" hasTree="0"><block_name>Execute shell command</block_name><block_class>Execute shell command</block_class><block_desc>Execute a Linux Shell command when the input is true.

Accepts a Boolean input, use a triggered subsystem to call the function only once on a state change instead of every sample.</block_desc><block_path>$bdroot/System/Execute shell command</block_path><block_open>$bdroot/System/Execute shell command</block_open><block_isNotLeafBlk>0</block_isNotLeafBlk><block_position>515  170  665  220</block_position><block_icon>System/Execute@20@shell@20@command.svg</block_icon><keywords></keywords><port_domains>signal.in_signal:1</port_domains><block_type>M-S-Function</block_type><block_reference></block_reference></block_node><block_node SID="4101" hasTree="0"><block_name>License Key</block_name><block_class>Check software license key</block_class><block_desc>Function block to check the controller for a license key upon executing the software.

example lines are literal to what should be in the field

Encryption key:

An array of 16, 24 or 32 bytes, for example:
hex2dec(["0x01", "0x23", "0x45", "0x67", "0x89", "0xAB", "0xCD", "0xEF", "0x01", "0x23", "0x45", "0x67", "0x89", "0xAB", "0xCD", "0xEF"])

bytes can be written in any form accepted by the c compiler: 0x00/0 to 0xFf/255.

Inititialisation vector:

A string of characters (max 16 bytes) example:
'123kdgh34ndfg84'


License file:

A string containing the path to the license file, example:
'/etc/simulink/license'


Check file:

A string containing the path to the license file, example:
'/etc/simulink/check_file'


Method of operation:
This block uses the &lt;a href="https://github.com/jhjin/OpenAES"&gt;OpenAES library&lt;/a&gt;. It also has a tool that can be used to generate an encryption key and to encrypt a file with said key.

This block will attempt to decrypt the "license file" with the given key and initialisation vector, it will then be compared to the "check file". If these match the program is allowed to continue.

To make this work effectively it is essential to encrypt a file that is unique for the system and can't be easily edited. for example "/sys/class/net/eth0/address".

An important note with using this block is that the bytes of the key are swapped and so need to be entered slightly differently in this block, for example:
key: byte 1 byte 2 byte 3 byte 4 byte 5 byte 6 ...
block: {byte 2, byte 1, byte 4, byte 3, byte 6, byte 5, ...}

If the model terminates with the error:
Error: Failed to decrypt2. return code: ##</block_desc><block_path>$bdroot/System/License Key</block_path><block_open>$bdroot/System/License Key</block_open><block_isNotLeafBlk>0</block_isNotLeafBlk><block_position>515  268  665  312</block_position><block_icon>System/License@20@Key.svg</block_icon><keywords></keywords><port_domains>NA.NA:0</port_domains><block_type>M-S-Function</block_type><block_reference></block_reference></block_node><block_node SID="4099" hasTree="0"><block_name>CPU temperature</block_name><block_class>Get CPU temperature</block_class><block_desc>Function block to retrieve the CPU temperature from the i.MX core</block_desc><block_path>$bdroot/System/CPU temperature</block_path><block_open>$bdroot/System/CPU temperature</block_open><block_isNotLeafBlk>0</block_isNotLeafBlk><block_position>515  363  665  407</block_position><block_icon>System/CPU@20@temperature.svg</block_icon><keywords></keywords><port_domains>signal.out_signal:1</port_domains><block_type>M-S-Function</block_type><block_reference></block_reference></block_node><block_node SID="4228" hasTree="0"><block_name>XCP Server</block_name><block_class>XCP Server</block_class><block_desc>Having one block of this type in your model enables the XCP server to use with HANtune</block_desc><block_path>$bdroot/System/XCP Server</block_path><block_open>$bdroot/System/XCP Server</block_open><block_isNotLeafBlk>0</block_isNotLeafBlk><block_position>515  459  665  501</block_position><block_icon>System/XCP@20@Server.svg</block_icon><keywords></keywords><port_domains>NA.NA:0</port_domains><block_type>M-S-Function</block_type><block_reference></block_reference></block_node></block_node><block_node SID="4089" hasTree="0"><block_name>Display specific</block_name><block_class></block_class><block_desc></block_desc><block_path>$bdroot/Display specific</block_path><block_open>$bdroot/Display specific</block_open><block_isNotLeafBlk>1</block_isNotLeafBlk><block_position>-330    5 -230   45</block_position><block_icon>Display@20@specific.svg</block_icon><keywords></keywords><port_domains>NA.NA:0</port_domains><block_type>SubSystem</block_type><block_reference></block_reference><block_node SID="4098" hasTree="0"><block_name>Set display brightness</block_name><block_class>Set display brightness</block_class><block_desc>Set the brightness of a display (only works with the max25014 driver currently)
Keeps the original brightness untill the first non zero value is received</block_desc><block_path>$bdroot/Display specific/Set display brightness</block_path><block_open>$bdroot/Display specific/Set display brightness</block_open><block_isNotLeafBlk>0</block_isNotLeafBlk><block_position>70  114  215  166</block_position><block_icon>Display@20@specific/Set@20@display@20@brightness.svg</block_icon><keywords></keywords><port_domains>signal.in_signal:1</port_domains><block_type>M-S-Function</block_type><block_reference></block_reference></block_node></block_node></library>
__MWOPC_PART_BEGIN__ /simulink/libraryBrowser/Supply@20@control.svg
<?xml version="1.0" encoding="UTF-8"?><svg width="27.5167mm" height="12.1708mm" viewBox="0 0 104 46" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><g fill="none" stroke="black" stroke-width="1" fill-rule="evenodd" stroke-linecap="square" stroke-linejoin="bevel"><g clip-path="none" fill="none" opacity="1" stroke="none" stroke-opacity="0" transform="matrix(1,0,0,1,0,0)"><path d="M0,0 L104,0 L104,46 L0,46 L0,0 z" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip3"><path d="M-2,-2 L102,-2 L102,44 L-2,44 L-2,-2 z"/></clipPath></defs><g clip-path="url(#clip3)" fill="#ffaa00" fill-opacity="1" opacity="1" stroke="none" stroke-opacity="0" transform="matrix(1,0,0,1,2,2)"><path d="M0,0 L100,0 L100,42 L0,42 L0,0 z" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip7"><path d="M-52,-23 L52,-23 L52,23 L-52,23 L-52,-23 z"/></clipPath></defs><g clip-path="url(#clip7)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,52,23)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="65.4531" x="-32.7188" xml:space="preserve" y="3.5">Supply Control</text></g><defs><clipPath id="clip12"><path d="M-2.5,-2.5 L101.5,-2.5 L101.5,43.5 L-2.5,43.5 L-2.5,-2.5 z"/></clipPath></defs><g clip-path="url(#clip12)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,2.5,2.5)"><path d="M0,0 L100,0 L100,42 L0,42 L0,0 z" fill-rule="evenodd" vector-effect="none"/></g></g><!--generated on ubuntu @ 2024-07-25 14:37:27 CEST--></svg>

__MWOPC_PART_BEGIN__ /simulink/libraryBrowser/Supply@20@control/Controller@20@Active.svg
<?xml version="1.0" encoding="UTF-8"?><svg width="42.0688mm" height="12.1708mm" viewBox="0 0 159 46" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><g fill="none" stroke="black" stroke-width="1" fill-rule="evenodd" stroke-linecap="square" stroke-linejoin="bevel"><g clip-path="none" fill="none" opacity="1" stroke="none" stroke-opacity="0" transform="matrix(1,0,0,1,0,0)"><path d="M0,0 L159,0 L159,46 L0,46 L0,0 z" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip3"><path d="M7,23 L-152,23 L-152,-23 L7,-23 L7,23 z"/></clipPath></defs><g clip-path="url(#clip3)" fill="none" opacity="1" stroke="#000000" stroke-linecap="round" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="2" transform="matrix(-1,0,0,-1,7,23)"><path d="M4.5,-5.5 L-0.5,-0.5 L4.5,4.5" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip6"><path d="M-7,-2 L152,-2 L152,44 L-7,44 L-7,-2 z"/></clipPath></defs><g clip-path="url(#clip6)" fill="#ffaa00" fill-opacity="1" opacity="1" stroke="none" stroke-opacity="0" transform="matrix(1,0,0,1,7,2)"><path d="M0,0 L150,0 L150,42 L0,42 L0,0 z" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip10"><path d="M-77,-23 L77,-23 L77,23 L-77,23 L-77,-23 z"/></clipPath></defs><g clip-path="url(#clip10)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,82,23)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="72.6719" x="-36.3281" xml:space="preserve" y="3.5">Controller Active</text></g><defs><clipPath id="clip11"><path d="M-4,-38 L150,-38 L150,8 L-4,8 L-4,-38 z"/></clipPath></defs><g clip-path="url(#clip11)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,9,38)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="96.5" x="0" xml:space="preserve" y="3.5">GOcontroll V4.3.2-rc1</text></g><defs><clipPath id="clip16"><path d="M-7.5,-2.5 L151.5,-2.5 L151.5,43.5 L-7.5,43.5 L-7.5,-2.5 z"/></clipPath></defs><g clip-path="url(#clip16)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,7.5,2.5)"><path d="M0,0 L150,0 L150,42 L0,42 L0,0 z" fill-rule="evenodd" vector-effect="none"/></g></g><!--generated on ubuntu @ 2024-07-25 14:37:27 CEST--></svg>

__MWOPC_PART_BEGIN__ /simulink/libraryBrowser/Supply@20@control/K15@20@Voltage.svg
<?xml version="1.0" encoding="UTF-8"?><svg width="42.0688mm" height="12.1708mm" viewBox="0 0 159 46" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><g fill="none" stroke="black" stroke-width="1" fill-rule="evenodd" stroke-linecap="square" stroke-linejoin="bevel"><g clip-path="none" fill="none" opacity="1" stroke="none" stroke-opacity="0" transform="matrix(1,0,0,1,0,0)"><path d="M0,0 L159,0 L159,46 L0,46 L0,0 z" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip3"><path d="M-152,-23 L7,-23 L7,23 L-152,23 L-152,-23 z"/></clipPath></defs><g clip-path="url(#clip3)" fill="none" opacity="1" stroke="#000000" stroke-linecap="round" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="2" transform="matrix(1,0,0,1,152,23)"><path d="M0.5,-4.5 L5.5,0.5 L0.5,5.5" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip6"><path d="M-2,-2 L157,-2 L157,44 L-2,44 L-2,-2 z"/></clipPath></defs><g clip-path="url(#clip6)" fill="#ffaa00" fill-opacity="1" opacity="1" stroke="none" stroke-opacity="0" transform="matrix(1,0,0,1,2,2)"><path d="M0,0 L150,0 L150,42 L0,42 L0,0 z" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip10"><path d="M-77,-17 L77,-17 L77,29 L-77,29 L-77,-17 z"/></clipPath></defs><g clip-path="url(#clip10)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,77,17)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="56.0313" x="-28.0156" xml:space="preserve" y="3.5">ADC voltage</text></g><defs><clipPath id="clip11"><path d="M-77,-29 L77,-29 L77,17 L-77,17 L-77,-29 z"/></clipPath></defs><g clip-path="url(#clip11)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,77,29)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="116.469" x="-58.2344" xml:space="preserve" y="3.5">K15-1 (Connector C pin 2)</text></g><defs><clipPath id="clip12"><path d="M-4,-38 L150,-38 L150,8 L-4,8 L-4,-38 z"/></clipPath></defs><g clip-path="url(#clip12)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,4,38)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="96.5" x="0" xml:space="preserve" y="3.5">GOcontroll V4.3.2-rc1</text></g><defs><clipPath id="clip17"><path d="M-2.5,-2.5 L156.5,-2.5 L156.5,43.5 L-2.5,43.5 L-2.5,-2.5 z"/></clipPath></defs><g clip-path="url(#clip17)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,2.5,2.5)"><path d="M0,0 L150,0 L150,42 L0,42 L0,0 z" fill-rule="evenodd" vector-effect="none"/></g></g><!--generated on ubuntu @ 2024-07-25 14:37:27 CEST--></svg>

__MWOPC_PART_BEGIN__ /simulink/libraryBrowser/Supply@20@control/K30@20@Voltage.svg
<?xml version="1.0" encoding="UTF-8"?><svg width="42.0688mm" height="12.1708mm" viewBox="0 0 159 46" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><g fill="none" stroke="black" stroke-width="1" fill-rule="evenodd" stroke-linecap="square" stroke-linejoin="bevel"><g clip-path="none" fill="none" opacity="1" stroke="none" stroke-opacity="0" transform="matrix(1,0,0,1,0,0)"><path d="M0,0 L159,0 L159,46 L0,46 L0,0 z" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip3"><path d="M-152,-23 L7,-23 L7,23 L-152,23 L-152,-23 z"/></clipPath></defs><g clip-path="url(#clip3)" fill="none" opacity="1" stroke="#000000" stroke-linecap="round" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="2" transform="matrix(1,0,0,1,152,23)"><path d="M0.5,-4.5 L5.5,0.5 L0.5,5.5" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip6"><path d="M-2,-2 L157,-2 L157,44 L-2,44 L-2,-2 z"/></clipPath></defs><g clip-path="url(#clip6)" fill="#ffaa00" fill-opacity="1" opacity="1" stroke="none" stroke-opacity="0" transform="matrix(1,0,0,1,2,2)"><path d="M0,0 L150,0 L150,42 L0,42 L0,0 z" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip10"><path d="M-77,-17 L77,-17 L77,29 L-77,29 L-77,-17 z"/></clipPath></defs><g clip-path="url(#clip10)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,77,17)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="53.7969" x="-26.8906" xml:space="preserve" y="3.5">K30 Voltage</text></g><defs><clipPath id="clip11"><path d="M-77,-29 L77,-29 L77,17 L-77,17 L-77,-29 z"/></clipPath></defs><g clip-path="url(#clip11)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,77,29)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="89.2969" x="-44.6406" xml:space="preserve" y="3.5">Connector C pin 5-7</text></g><defs><clipPath id="clip12"><path d="M-4,-38 L150,-38 L150,8 L-4,8 L-4,-38 z"/></clipPath></defs><g clip-path="url(#clip12)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,4,38)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="96.5" x="0" xml:space="preserve" y="3.5">GOcontroll V4.3.2-rc1</text></g><defs><clipPath id="clip17"><path d="M-2.5,-2.5 L156.5,-2.5 L156.5,43.5 L-2.5,43.5 L-2.5,-2.5 z"/></clipPath></defs><g clip-path="url(#clip17)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,2.5,2.5)"><path d="M0,0 L150,0 L150,42 L0,42 L0,0 z" fill-rule="evenodd" vector-effect="none"/></g></g><!--generated on ubuntu @ 2024-07-25 14:37:27 CEST--></svg>

__MWOPC_PART_BEGIN__ /simulink/libraryBrowser/System.svg
<?xml version="1.0" encoding="UTF-8"?><svg width="27.5167mm" height="12.1708mm" viewBox="0 0 104 46" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><g fill="none" stroke="black" stroke-width="1" fill-rule="evenodd" stroke-linecap="square" stroke-linejoin="bevel"><g clip-path="none" fill="none" opacity="1" stroke="none" stroke-opacity="0" transform="matrix(1,0,0,1,0,0)"><path d="M0,0 L104,0 L104,46 L0,46 L0,0 z" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip3"><path d="M-2,-2 L102,-2 L102,44 L-2,44 L-2,-2 z"/></clipPath></defs><g clip-path="url(#clip3)" fill="#ffaa00" fill-opacity="1" opacity="1" stroke="none" stroke-opacity="0" transform="matrix(1,0,0,1,2,2)"><path d="M0,0 L100,0 L100,42 L0,42 L0,0 z" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip7"><path d="M-52,-23 L52,-23 L52,23 L-52,23 L-52,-23 z"/></clipPath></defs><g clip-path="url(#clip7)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,52,23)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="33.2969" x="-16.6406" xml:space="preserve" y="3.5">System</text></g><defs><clipPath id="clip12"><path d="M-2.5,-2.5 L101.5,-2.5 L101.5,43.5 L-2.5,43.5 L-2.5,-2.5 z"/></clipPath></defs><g clip-path="url(#clip12)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,2.5,2.5)"><path d="M0,0 L100,0 L100,42 L0,42 L0,0 z" fill-rule="evenodd" vector-effect="none"/></g></g><!--generated on ubuntu @ 2024-07-25 14:37:27 CEST--></svg>

__MWOPC_PART_BEGIN__ /simulink/libraryBrowser/System/CPU@20@temperature.svg
<?xml version="1.0" encoding="UTF-8"?><svg width="42.0688mm" height="12.7mm" viewBox="0 0 159 48" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><g fill="none" stroke="black" stroke-width="1" fill-rule="evenodd" stroke-linecap="square" stroke-linejoin="bevel"><g clip-path="none" fill="none" opacity="1" stroke="none" stroke-opacity="0" transform="matrix(1,0,0,1,0,0)"><path d="M0,0 L159,0 L159,48 L0,48 L0,0 z" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip3"><path d="M-152,-24 L7,-24 L7,24 L-152,24 L-152,-24 z"/></clipPath></defs><g clip-path="url(#clip3)" fill="none" opacity="1" stroke="#000000" stroke-linecap="round" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="2" transform="matrix(1,0,0,1,152,24)"><path d="M0.5,-4.5 L5.5,0.5 L0.5,5.5" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip6"><path d="M-2,-2 L157,-2 L157,46 L-2,46 L-2,-2 z"/></clipPath></defs><g clip-path="url(#clip6)" fill="#ffaa00" fill-opacity="1" opacity="1" stroke="none" stroke-opacity="0" transform="matrix(1,0,0,1,2,2)"><path d="M0,0 L150,0 L150,44 L0,44 L0,0 z" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip10"><path d="M-77,-24 L77,-24 L77,24 L-77,24 L-77,-24 z"/></clipPath></defs><g clip-path="url(#clip10)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,77,24)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="96.5" x="-48.25" xml:space="preserve" y="3.5">Get CPU temperature</text></g><defs><clipPath id="clip11"><path d="M-4,-40 L150,-40 L150,8 L-4,8 L-4,-40 z"/></clipPath></defs><g clip-path="url(#clip11)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,4,40)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="96.5" x="0" xml:space="preserve" y="3.5">GOcontroll V4.3.2-rc1</text></g><defs><clipPath id="clip16"><path d="M-2.5,-2.5 L156.5,-2.5 L156.5,45.5 L-2.5,45.5 L-2.5,-2.5 z"/></clipPath></defs><g clip-path="url(#clip16)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,2.5,2.5)"><path d="M0,0 L150,0 L150,44 L0,44 L0,0 z" fill-rule="evenodd" vector-effect="none"/></g></g><!--generated on ubuntu @ 2024-07-25 14:37:27 CEST--></svg>

__MWOPC_PART_BEGIN__ /simulink/libraryBrowser/System/Execute@20@shell@20@command.svg
<?xml version="1.0" encoding="UTF-8"?><svg width="42.0688mm" height="14.2875mm" viewBox="0 0 159 54" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><g fill="none" stroke="black" stroke-width="1" fill-rule="evenodd" stroke-linecap="square" stroke-linejoin="bevel"><g clip-path="none" fill="none" opacity="1" stroke="none" stroke-opacity="0" transform="matrix(1,0,0,1,0,0)"><path d="M0,0 L159,0 L159,54 L0,54 L0,0 z" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip3"><path d="M7,27 L-152,27 L-152,-27 L7,-27 L7,27 z"/></clipPath></defs><g clip-path="url(#clip3)" fill="none" opacity="1" stroke="#000000" stroke-linecap="round" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="2" transform="matrix(-1,0,0,-1,7,27)"><path d="M4.5,-5.5 L-0.5,-0.5 L4.5,4.5" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip6"><path d="M-7,-2 L152,-2 L152,52 L-7,52 L-7,-2 z"/></clipPath></defs><g clip-path="url(#clip6)" fill="#ffaa00" fill-opacity="1" opacity="1" stroke="none" stroke-opacity="0" transform="matrix(1,0,0,1,7,2)"><path d="M0,0 L150,0 L150,50 L0,50 L0,0 z" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip10"><path d="M-77,-21 L77,-21 L77,33 L-77,33 L-77,-21 z"/></clipPath></defs><g clip-path="url(#clip10)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,82,21)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="85.4375" x="-42.7188" xml:space="preserve" y="3.5">Execute command:</text></g><defs><clipPath id="clip11"><path d="M-77,-33 L77,-33 L77,21 L-77,21 L-77,-33 z"/></clipPath></defs><g clip-path="url(#clip11)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,82,33)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="43.8438" x="-21.9219" xml:space="preserve" y="3.5">command</text></g><defs><clipPath id="clip12"><path d="M-4,-46 L150,-46 L150,8 L-4,8 L-4,-46 z"/></clipPath></defs><g clip-path="url(#clip12)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,9,46)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="96.5" x="0" xml:space="preserve" y="3.5">GOcontroll V4.3.2-rc1</text></g><defs><clipPath id="clip17"><path d="M-7.5,-2.5 L151.5,-2.5 L151.5,51.5 L-7.5,51.5 L-7.5,-2.5 z"/></clipPath></defs><g clip-path="url(#clip17)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,7.5,2.5)"><path d="M0,0 L150,0 L150,50 L0,50 L0,0 z" fill-rule="evenodd" vector-effect="none"/></g></g><!--generated on ubuntu @ 2024-07-25 14:37:27 CEST--></svg>

__MWOPC_PART_BEGIN__ /simulink/libraryBrowser/System/License@20@Key.svg
<?xml version="1.0" encoding="UTF-8"?><svg width="40.7458mm" height="12.7mm" viewBox="0 0 154 48" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><g fill="none" stroke="black" stroke-width="1" fill-rule="evenodd" stroke-linecap="square" stroke-linejoin="bevel"><g clip-path="none" fill="none" opacity="1" stroke="none" stroke-opacity="0" transform="matrix(1,0,0,1,0,0)"><path d="M0,0 L154,0 L154,48 L0,48 L0,0 z" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip3"><path d="M-2,-2 L152,-2 L152,46 L-2,46 L-2,-2 z"/></clipPath></defs><g clip-path="url(#clip3)" fill="#ffaa00" fill-opacity="1" opacity="1" stroke="none" stroke-opacity="0" transform="matrix(1,0,0,1,2,2)"><path d="M0,0 L150,0 L150,44 L0,44 L0,0 z" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip7"><path d="M-77,-24 L77,-24 L77,24 L-77,24 L-77,-24 z"/></clipPath></defs><g clip-path="url(#clip7)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,77,24)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="102.641" x="-51.3125" xml:space="preserve" y="3.5">Check software license</text></g><defs><clipPath id="clip8"><path d="M-4,-40 L150,-40 L150,8 L-4,8 L-4,-40 z"/></clipPath></defs><g clip-path="url(#clip8)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,4,40)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="96.5" x="0" xml:space="preserve" y="3.5">GOcontroll V4.3.2-rc1</text></g><defs><clipPath id="clip13"><path d="M-2.5,-2.5 L151.5,-2.5 L151.5,45.5 L-2.5,45.5 L-2.5,-2.5 z"/></clipPath></defs><g clip-path="url(#clip13)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,2.5,2.5)"><path d="M0,0 L150,0 L150,44 L0,44 L0,0 z" fill-rule="evenodd" vector-effect="none"/></g></g><!--generated on ubuntu @ 2024-07-25 14:37:27 CEST--></svg>

__MWOPC_PART_BEGIN__ /simulink/libraryBrowser/System/XCP@20@Server.svg
<?xml version="1.0" encoding="UTF-8"?><svg width="40.7458mm" height="12.1708mm" viewBox="0 0 154 46" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><g fill="none" stroke="black" stroke-width="1" fill-rule="evenodd" stroke-linecap="square" stroke-linejoin="bevel"><g clip-path="none" fill="none" opacity="1" stroke="none" stroke-opacity="0" transform="matrix(1,0,0,1,0,0)"><path d="M0,0 L154,0 L154,46 L0,46 L0,0 z" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip3"><path d="M-2,-2 L152,-2 L152,44 L-2,44 L-2,-2 z"/></clipPath></defs><g clip-path="url(#clip3)" fill="#ffaa00" fill-opacity="1" opacity="1" stroke="none" stroke-opacity="0" transform="matrix(1,0,0,1,2,2)"><path d="M0,0 L150,0 L150,42 L0,42 L0,0 z" fill-rule="evenodd" vector-effect="none"/></g><defs><clipPath id="clip7"><path d="M-77,-17 L77,-17 L77,29 L-77,29 L-77,-17 z"/></clipPath></defs><g clip-path="url(#clip7)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,77,17)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="52.5156" x="-26.25" xml:space="preserve" y="3.5">XCP Server</text></g><defs><clipPath id="clip8"><path d="M-77,-29 L77,-29 L77,17 L-77,17 L-77,-29 z"/></clipPath></defs><g clip-path="url(#clip8)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,77,29)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="19.9688" x="-9.98438" xml:space="preserve" y="3.5">TCP</text></g><defs><clipPath id="clip9"><path d="M-4,-38 L150,-38 L150,8 L-4,8 L-4,-38 z"/></clipPath></defs><g clip-path="url(#clip9)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,4,38)"><text fill="#000000" fill-opacity="1" font-family="Liberation Sans" font-size="10" font-style="normal" font-weight="400" stroke="none" textLength="96.5" x="0" xml:space="preserve" y="3.5">GOcontroll V4.3.2-rc1</text></g><defs><clipPath id="clip14"><path d="M-2.5,-2.5 L151.5,-2.5 L151.5,43.5 L-2.5,43.5 L-2.5,-2.5 z"/></clipPath></defs><g clip-path="url(#clip14)" fill="none" opacity="1" stroke="#000000" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="2" stroke-opacity="1" stroke-width="1" transform="matrix(1,0,0,1,2.5,2.5)"><path d="M0,0 L150,0 L150,42 L0,42 L0,0 z" fill-rule="evenodd" vector-effect="none"/></g></g><!--generated on ubuntu @ 2024-07-25 14:37:27 CEST--></svg>

__MWOPC_PART_BEGIN__ /simulink/modelDictionary.xml
<?xml version="1.0" encoding="UTF-8"?>
<MF0 version="1.1" defaultPackage="slid" packageUris="http://schema.mathworks.com/mf0/slid/R2023a_20220628">
  <System type="System" uuid="491bd28f-d93e-4d49-b902-8e19bbfe37c4">
    <Interface type="Interface" uuid="092b8c9f-f7b3-4251-8160-57ddc633d523"/>
  </System>
</MF0>
__MWOPC_PART_BEGIN__ /simulink/systems/_rels/system_2725.xml.rels
<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<Relationships xmlns="http://schemas.openxmlformats.org/package/2006/relationships">
  <Relationship Id="system_3212" Target="system_3212.xml" Type="http://schemas.mathworks.com/simulink/2010/relationships/system"/>
  <Relationship Id="system_4136" Target="system_4136.xml" Type="http://schemas.mathworks.com/simulink/2010/relationships/system"/>
</Relationships>

__MWOPC_PART_BEGIN__ /simulink/systems/_rels/system_3908.xml.rels
<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<Relationships xmlns="http://schemas.openxmlformats.org/package/2006/relationships">
  <Relationship Id="system_3909" Target="system_3909.xml" Type="http://schemas.mathworks.com/simulink/2010/relationships/system"/>
  <Relationship Id="system_4065" Target="system_4065.xml" Type="http://schemas.mathworks.com/simulink/2010/relationships/system"/>
  <Relationship Id="system_4229" Target="system_4229.xml" Type="http://schemas.mathworks.com/simulink/2010/relationships/system"/>
</Relationships>

__MWOPC_PART_BEGIN__ /simulink/systems/_rels/system_3919.xml.rels
<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<Relationships xmlns="http://schemas.openxmlformats.org/package/2006/relationships">
  <Relationship Id="system_3989" Target="system_3989.xml" Type="http://schemas.mathworks.com/simulink/2010/relationships/system"/>
  <Relationship Id="system_3990" Target="system_3990.xml" Type="http://schemas.mathworks.com/simulink/2010/relationships/system"/>
  <Relationship Id="system_4026" Target="system_4026.xml" Type="http://schemas.mathworks.com/simulink/2010/relationships/system"/>
</Relationships>

__MWOPC_PART_BEGIN__ /simulink/systems/_rels/system_4007.xml.rels
<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<Relationships xmlns="http://schemas.openxmlformats.org/package/2006/relationships">
  <Relationship Id="system_4032" Target="system_4032.xml" Type="http://schemas.mathworks.com/simulink/2010/relationships/system"/>
  <Relationship Id="system_4035" Target="system_4035.xml" Type="http://schemas.mathworks.com/simulink/2010/relationships/system"/>
</Relationships>

__MWOPC_PART_BEGIN__ /simulink/systems/_rels/system_4035.xml.rels
<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<Relationships xmlns="http://schemas.openxmlformats.org/package/2006/relationships">
  <Relationship Id="system_4121" Target="system_4121.xml" Type="http://schemas.mathworks.com/simulink/2010/relationships/system"/>
  <Relationship Id="system_4125" Target="system_4125.xml" Type="http://schemas.mathworks.com/simulink/2010/relationships/system"/>
</Relationships>

__MWOPC_PART_BEGIN__ /simulink/systems/_rels/system_4065.xml.rels
<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<Relationships xmlns="http://schemas.openxmlformats.org/package/2006/relationships">
  <Relationship Id="system_4175" Target="system_4175.xml" Type="http://schemas.mathworks.com/simulink/2010/relationships/system"/>
</Relationships>

__MWOPC_PART_BEGIN__ /simulink/systems/_rels/system_4136.xml.rels
<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<Relationships xmlns="http://schemas.openxmlformats.org/package/2006/relationships">
  <Relationship Id="system_4148" Target="system_4148.xml" Type="http://schemas.mathworks.com/simulink/2010/relationships/system"/>
</Relationships>

__MWOPC_PART_BEGIN__ /simulink/systems/_rels/system_4148.xml.rels
<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<Relationships xmlns="http://schemas.openxmlformats.org/package/2006/relationships">
  <Relationship Id="system_4153" Target="system_4153.xml" Type="http://schemas.mathworks.com/simulink/2010/relationships/system"/>
  <Relationship Id="system_4159" Target="system_4159.xml" Type="http://schemas.mathworks.com/simulink/2010/relationships/system"/>
</Relationships>

__MWOPC_PART_BEGIN__ /simulink/systems/_rels/system_4175.xml.rels
<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<Relationships xmlns="http://schemas.openxmlformats.org/package/2006/relationships">
  <Relationship Id="system_4182" Target="system_4182.xml" Type="http://schemas.mathworks.com/simulink/2010/relationships/system"/>
</Relationships>

__MWOPC_PART_BEGIN__ /simulink/systems/_rels/system_4182.xml.rels
<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<Relationships xmlns="http://schemas.openxmlformats.org/package/2006/relationships">
  <Relationship Id="system_4219" Target="system_4219.xml" Type="http://schemas.mathworks.com/simulink/2010/relationships/system"/>
</Relationships>

__MWOPC_PART_BEGIN__ /simulink/systems/_rels/system_4219.xml.rels
<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<Relationships xmlns="http://schemas.openxmlformats.org/package/2006/relationships">
  <Relationship Id="system_4189" Target="system_4189.xml" Type="http://schemas.mathworks.com/simulink/2010/relationships/system"/>
</Relationships>

__MWOPC_PART_BEGIN__ /simulink/systems/_rels/system_root.xml.rels
<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<Relationships xmlns="http://schemas.openxmlformats.org/package/2006/relationships">
  <Relationship Id="system_2725" Target="system_2725.xml" Type="http://schemas.mathworks.com/simulink/2010/relationships/system"/>
  <Relationship Id="system_3908" Target="system_3908.xml" Type="http://schemas.mathworks.com/simulink/2010/relationships/system"/>
  <Relationship Id="system_3919" Target="system_3919.xml" Type="http://schemas.mathworks.com/simulink/2010/relationships/system"/>
  <Relationship Id="system_3975" Target="system_3975.xml" Type="http://schemas.mathworks.com/simulink/2010/relationships/system"/>
  <Relationship Id="system_3980" Target="system_3980.xml" Type="http://schemas.mathworks.com/simulink/2010/relationships/system"/>
  <Relationship Id="system_4007" Target="system_4007.xml" Type="http://schemas.mathworks.com/simulink/2010/relationships/system"/>
  <Relationship Id="system_4017" Target="system_4017.xml" Type="http://schemas.mathworks.com/simulink/2010/relationships/system"/>
  <Relationship Id="system_4051" Target="system_4051.xml" Type="http://schemas.mathworks.com/simulink/2010/relationships/system"/>
  <Relationship Id="system_4089" Target="system_4089.xml" Type="http://schemas.mathworks.com/simulink/2010/relationships/system"/>
</Relationships>

__MWOPC_PART_BEGIN__ /simulink/systems/system_2725.xml
<?xml version="1.0" encoding="utf-8"?>
<System>
  <P Name="Location">[3912, 0, 7680, 2160]</P>
  <P Name="PaperType">usletter</P>
  <P Name="PaperUnits">inches</P>
  <P Name="TiledPaperMargins">[0.500000, 0.500000, 0.500000, 0.500000]</P>
  <P Name="ZoomFactor">380</P>
  <Block BlockType="SubSystem" Name=" CAN Example" SID="4136">
    <PortCounts/>
    <P Name="Position">[25, 134, 125, 176]</P>
    <P Name="ZOrder">1</P>
    <P Name="HideAutomaticName">off</P>
    <System Ref="system_4136"/>
  </Block>
  <Block BlockType="SubSystem" Name="CAN 2.0B" SID="3212">
    <PortCounts/>
    <P Name="Position">[25, 24, 125, 66]</P>
    <P Name="ZOrder">-1</P>
    <P Name="BackgroundColor">[1.000000, 0.666667, 0.000000]</P>
    <P Name="UserDataPersistent">on</P>
    <Mask>
      <Display RunInitForIconRedraw="on" IconUnits="pixels">fprintf(&apos;CAN 2.0B&apos;);</Display>
    </Mask>
    <System Ref="system_3212"/>
  </Block>
</System>

__MWOPC_PART_BEGIN__ /simulink/systems/system_3212.xml
<?xml version="1.0" encoding="utf-8"?>
<System>
  <P Name="Location">[3912, 0, 7680, 2160]</P>
  <P Name="PaperType">usletter</P>
  <P Name="PaperUnits">inches</P>
  <P Name="TiledPaperMargins">[0.500000, 0.500000, 0.500000, 0.500000]</P>
  <P Name="ZoomFactor">294</P>
  <Block BlockType="S-Function" Name="CAN Receive" SID="4132">
    <PortCounts out="2"/>
    <P Name="Position">[185, 265, 315, 345]</P>
    <P Name="ZOrder">226</P>
    <P Name="BackgroundColor">[1.000000, 0.666667, 0.000000]</P>
    <P Name="FunctionName">sfcn_can_receive_v2</P>
    <P Name="Parameters">module_id, tsamp</P>
    <P Name="SFunctionDeploymentMode">off</P>
    <P Name="EnableBusSupport">off</P>
    <P Name="SFcnIsStateOwnerBlock">off</P>
    <Mask SelfModifiable="on">
      <Type>CAN Receive</Type>
      <Display IconUnits="pixels">fprintf(&apos;Receive on\nCAN %x&apos;, module_id);

port_label(&apos;output&apos;, 1, &apos;function call&apos;);
port_label(&apos;output&apos;, 2, &apos;message&apos;);
text(2, 6, ert_linux_target_version());</Display>
      <Description>&lt;p&gt;Receive a messages from the CAN bus.&lt;/p&gt;
&lt;p&gt;The output is a CAN_MESSAGE object. CAN Unpack block can be used to unpack the data from CAN_MESSAGE object.&lt;/p&gt;
&lt;p&gt;A Function-call subsystem is triggered every time when a new message has been received.&lt;/p&gt;
&lt;p&gt;There can be only one receive block on a given CAN bus, this receive block will receive all CAN messages on this bus. To filter them use the CAN Unpack blocks inside of a function call subsystem&lt;/p&gt;</Description>
      <MaskParameter Name="ContrType" Type="popup" Tunable="off">
        <Prompt>Controller Type</Prompt>
        <Value>GOcontroll Moduline IV</Value>
        <Callback>controller = get_param(gcb, &apos;ContrType&apos;);
mask = Simulink.Mask.get(gcb);
can_ifs = mask.getParameter(&apos;module_id&apos;);

if(controller == &quot;GOcontroll Moduline IV&quot;)
can_ifs.TypeOptions = {&apos;CAN1 - Connector C pin 14 (L) and pin 15 (H)&apos;,&apos;CAN2 - Connector C pin 20 (L) and pin 21 (H)&apos;,...
    &apos;CAN3 - Connector C pin 19 (L) and pin 18 (H)&apos;,&apos;CAN4 - Connector C pin 13 (L) and pin 12 (H)&apos;};
elseif (controller == &quot;GOcontroll Moduline Mini&quot;)
 can_ifs.TypeOptions = {&apos;CAN1 - Connector B pin 24 (L) and pin 25 (H)&apos;,&apos;CAN2 - Connector A pin 24 (L) and pin 25 (H)&apos;}; 
 
elseif (controller == &quot;GOcontroll Moduline Display&quot;)
can_ifs.TypeOptions = {&apos;CAN1 - Connector A pin 16 (L) and pin 17 (H)&apos;,&apos;CAN2 - Connector A pin 24 (L) and pin 25 (H)&apos;}; 
end</Callback>
        <TypeOptions>
          <Option>GOcontroll Moduline IV</Option>
          <Option>GOcontroll Moduline Mini</Option>
          <Option>GOcontroll Moduline Display</Option>
        </TypeOptions>
      </MaskParameter>
      <MaskParameter Name="module_id" Type="popup" Tunable="off">
        <Prompt>CAN Bus</Prompt>
        <Value>CAN1</Value>
        <TypeOptions>
          <Option>CAN1 - Connector C pin 14 (L) and pin 15 (H)</Option>
          <Option>CAN2 - Connector C pin 20 (L) and pin 21 (H)</Option>
          <Option>CAN3 - Connector C pin 19 (L) and pin 18 (H)</Option>
          <Option>CAN4 - Connector C pin 13 (L) and pin 12 (H)</Option>
        </TypeOptions>
      </MaskParameter>
      <MaskParameter Name="tsamp" Type="edit" Tunable="off">
        <Prompt>Sample time</Prompt>
        <Value>-1</Value>
      </MaskParameter>
      <DialogControl Type="Group" Name="DescGroupVar">
        <Prompt>%&lt;MaskType&gt;</Prompt>
        <DialogControl Type="Text" Name="DescTextVar">
          <Prompt>%&lt;MaskDescription&gt;</Prompt>
        </DialogControl>
      </DialogControl>
      <DialogControl Type="Group" Name="ParameterGroupVar">
        <Prompt>Simulink:studio:ToolBarParametersMenu</Prompt>
        <DialogControl Type="Popup" Name="ContrType">
          <Prompt>Controller Type</Prompt>
          <ControlOptions PromptLocation="left"/>
        </DialogControl>
        <DialogControl Type="Popup" Name="module_id">
          <Prompt>CAN Bus</Prompt>
          <ControlOptions PromptLocation="left"/>
        </DialogControl>
        <DialogControl Type="Edit" Name="tsamp">
          <Prompt>Sample time</Prompt>
          <ControlOptions PromptLocation="left"/>
        </DialogControl>
      </DialogControl>
    </Mask>
  </Block>
  <Block BlockType="S-Function" Name="CAN Send" SID="4133">
    <PortCounts in="1"/>
    <P Name="Position">[15, 265, 145, 345]</P>
    <P Name="ZOrder">225</P>
    <P Name="BackgroundColor">[1.000000, 0.666667, 0.000000]</P>
    <P Name="FunctionName">sfcn_can_send_v2</P>
    <P Name="Parameters">module_id, tsamp</P>
    <P Name="SFunctionDeploymentMode">off</P>
    <P Name="EnableBusSupport">off</P>
    <P Name="SFcnIsStateOwnerBlock">off</P>
    <Mask SelfModifiable="on">
      <Type>CAN Send</Type>
      <Display IconUnits="pixels">fprintf(&apos;Send on\nCAN%x&apos;, module_id);
port_label(&apos;input&apos;, 1, &apos;Msg&apos;);

text(2, 6, ert_linux_target_version());</Display>
      <Description>&lt;p&gt;Send a CAN message.&lt;/p&gt;
&lt;p&gt;Expects a CAN_MESSAGE object as an input. Use CAN Pack to create the CAN_MESSAGE object.&lt;/p&gt;</Description>
      <MaskParameter Name="ContrType" Type="popup" Tunable="off">
        <Prompt>Controller Type</Prompt>
        <Value>GOcontroll Moduline IV</Value>
        <Callback>controller = get_param(gcb, &apos;ContrType&apos;);
mask = Simulink.Mask.get(gcb);
can_ifs = mask.getParameter(&apos;module_id&apos;);

if(controller == &quot;GOcontroll Moduline IV&quot;)
    can_ifs.TypeOptions = {&apos;CAN1 - Connector C pin 14 (L) and pin 15 (H)&apos;,&apos;CAN2 - Connector C pin 20 (L) and pin 21 (H)&apos;,...
        &apos;CAN3 - Connector C pin 19 (L) and pin 18 (H)&apos;,&apos;CAN4 - Connector C pin 13 (L) and pin 12 (H)&apos;};
elseif (controller == &quot;GOcontroll Moduline Mini&quot;)
    can_ifs.TypeOptions = {&apos;CAN1 - Connector B pin 24 (L) and pin 25 (H)&apos;,&apos;CAN2 - Connector A pin 24 (L) and pin 25 (H)&apos;};

elseif (controller == &quot;GOcontroll Moduline Display&quot;)
    can_ifs.TypeOptions = {&apos;CAN1 - Connector A pin 16 (L) and pin 17 (H)&apos;,&apos;CAN2 - Connector A pin 24 (L) and pin 25 (H)&apos;};
end</Callback>
        <TypeOptions>
          <Option>GOcontroll Moduline IV</Option>
          <Option>GOcontroll Moduline Mini</Option>
          <Option>GOcontroll Moduline Display</Option>
        </TypeOptions>
      </MaskParameter>
      <MaskParameter Name="module_id" Type="popup" Tunable="off">
        <Prompt>CAN Bus</Prompt>
        <Value>CAN1</Value>
        <TypeOptions>
          <Option>CAN1 - Connector C pin 14 (L) and pin 15 (H)</Option>
          <Option>CAN2 - Connector C pin 20 (L) and pin 21 (H)</Option>
          <Option>CAN3 - Connector C pin 19 (L) and pin 18 (H)</Option>
          <Option>CAN4 - Connector C pin 13 (L) and pin 12 (H)</Option>
        </TypeOptions>
      </MaskParameter>
      <MaskParameter Name="tsamp" Type="edit">
        <Prompt>Sample time</Prompt>
        <Value>0.1</Value>
      </MaskParameter>
      <DialogControl Type="Group" Name="DescGroupVar">
        <Prompt>%&lt;MaskType&gt;</Prompt>
        <DialogControl Type="Text" Name="DescTextVar">
          <Prompt>%&lt;MaskDescription&gt;</Prompt>
        </DialogControl>
      </DialogControl>
      <DialogControl Type="Group" Name="ParameterGroupVar">
        <Prompt>Simulink:studio:ToolBarParametersMenu</Prompt>
        <DialogControl Type="Popup" Name="ContrType">
          <Prompt>Controller Type</Prompt>
          <ControlOptions PromptLocation="left"/>
        </DialogControl>
        <DialogControl Type="Popup" Name="module_id">
          <Prompt>CAN Bus</Prompt>
          <ControlOptions PromptLocation="left"/>
        </DialogControl>
        <DialogControl Type="Edit" Name="tsamp">
          <Prompt>Sample time</Prompt>
          <ControlOptions PromptLocation="left"/>
        </DialogControl>
      </DialogControl>
    </Mask>
  </Block>
  <Block BlockType="M-S-Function" Name="CAN receive1" SID="4134">
    <PortCounts in="1" out="2"/>
    <P Name="Position">[185, 40, 290, 200]</P>
    <P Name="ZOrder">227</P>
    <P Name="BackgroundColor">[1.000000, 0.666667, 0.000000]</P>
    <List ListType="RTWdata">
      <P Name="canBus">0</P>
      <P Name="outputNumber">1</P>
      <P Name="dataType">2</P>
      <P Name="byteOrder">1</P>
      <P Name="dataLength">1</P>
    </List>
    <P Name="FunctionName">sfcn_can_receive</P>
    <P Name="Parameters">tsamp,canBus,outputNumber,dataType, byteOrder</P>
    <Mask SelfModifiable="on">
      <Type>CAN receive (Legacy)</Type>
      <Display RunInitForIconRedraw="on" IconUnits="pixels">fprintf(&apos;Receive on\nCAN %x&apos;, canBus);
port_label(&apos;output&apos;, 1, &apos;new&apos;)
port_label(&apos;input&apos;, 1, &apos;ID&apos;);
text(2, 6, ert_linux_target_version());</Display>
      <Description>!! Legacy block, use the CAN receive instead of CAN receive1 in future projects !!
!! These will not work together, either use the legacy blocks or the new ones !!

Function
==========
Receive the newest message from the specified CAN channel.

Parameters
========== 
Controller Type          The controller type, only changes the available CAN channels and puts the correct pinout for that type
CAN channel:             The CAN channel to send the message on.
Output ports:             The amount of output ports
Output datatype:       The datatype of the output ports
Byte order:                 Select MSB or LSB first
Sample time:              -1 or divisible by base sample time [seconds] 

Input
==========
Port 1:                       CAN ID(uint32) in hexadecimal ie: hex2dec(&apos;0a&apos;)

Output
==========
Port 1:                       Checks for new message(int8)
Port 2..9                     Message data
</Description>
      <Initialization>% calculate the data length (targe specific)
dataLength = 0;
switch(dataType)
    case {1,2,7}
        % data length of 1 byte
        dataLength = outputNumber * 1;
    case {3,4}
        % data length of 2 bytes
        dataLength = outputNumber * 2;
    case {5,6}
        % data length of 4 bytes
        dataLength = outputNumber * 4;
end

% check if number of outputs, combined with the data type, is exceeding the
% maximum data length
if (dataLength &lt; 1)
    error (&apos;The CAN message has a minimum of 1 byte&apos;);
elseif (dataLength &gt; 8)
    error(&apos;The CAN message supports only up to 8 data bytes&apos;);
end

% Create resource keywords to be reserved in resource database
modelRTWFields = struct(&apos;canBus&apos;, int2str(canBus-1),...
    &apos;outputNumber&apos;, int2str(outputNumber), &apos;dataType&apos;, int2str(dataType), &apos;byteOrder&apos;, int2str(byteOrder),...
    &apos;dataLength&apos;, int2str(dataLength));

set_param(gcb, &apos;RTWdata&apos;, modelRTWFields);
</Initialization>
      <MaskParameter Name="ContrType" Type="popup" Tunable="off">
        <Prompt>Controller Type</Prompt>
        <Value>GOcontroll Moduline IV</Value>
        <Callback>controller = get_param(gcb, &apos;ContrType&apos;);
mask = Simulink.Mask.get(gcb);
can_ifs = mask.getParameter(&apos;canBus&apos;);

if(controller == &quot;GOcontroll Moduline IV&quot;)
    can_ifs.TypeOptions = {&apos;CAN1 - Connector C pin 14 (L) and pin 15 (H)&apos;,&apos;CAN2 - Connector C pin 20 (L) and pin 21 (H)&apos;,...
        &apos;CAN3 - Connector C pin 19 (L) and pin 18 (H)&apos;,&apos;CAN4 - Connector C pin 13 (L) and pin 12 (H)&apos;};
elseif (controller == &quot;GOcontroll Moduline Mini&quot;)
    can_ifs.TypeOptions = {&apos;CAN1 - Connector B pin 24 (L) and pin 25 (H)&apos;,&apos;CAN2 - Connector A pin 24 (L) and pin 25 (H)&apos;};

elseif (controller == &quot;GOcontroll Moduline Display&quot;)
    can_ifs.TypeOptions = {&apos;CAN1 - Connector A pin 16 (L) and pin 17 (H)&apos;,&apos;CAN2 - Connector A pin 24 (L) and pin 25 (H)&apos;};
end</Callback>
        <TypeOptions>
          <Option>GOcontroll Moduline IV</Option>
          <Option>GOcontroll Moduline Mini</Option>
          <Option>GOcontroll Moduline Display</Option>
        </TypeOptions>
      </MaskParameter>
      <MaskParameter Name="canBus" Type="popup" Tunable="off">
        <Prompt>CAN channel</Prompt>
        <Value>CAN1 - Connector C pin 14 (L) and pin 15 (H)</Value>
        <TypeOptions>
          <Option>CAN1 - Connector C pin 14 (L) and pin 15 (H)</Option>
          <Option>CAN2 - Connector C pin 20 (L) and pin 21 (H)</Option>
          <Option>CAN3 - Connector C pin 19 (L) and pin 18 (H)</Option>
          <Option>CAN4 - Connector C pin 13 (L) and pin 12 (H)</Option>
        </TypeOptions>
      </MaskParameter>
      <MaskParameter Name="outputNumber" Type="edit" Tunable="off">
        <Prompt>Output ports</Prompt>
        <Value>1</Value>
      </MaskParameter>
      <MaskParameter Name="dataType" Type="popup" Tunable="off">
        <Prompt>Output datatype</Prompt>
        <Value>uint8</Value>
        <TypeOptions>
          <Option>int8</Option>
          <Option>uint8</Option>
          <Option>int16</Option>
          <Option>uint16</Option>
          <Option>int32</Option>
          <Option>uint32</Option>
          <Option>boolean</Option>
        </TypeOptions>
      </MaskParameter>
      <MaskParameter Name="byteOrder" Type="checkbox" Tunable="off">
        <Prompt>Byte order: Checked = MSB first, unchecked = LSB first.</Prompt>
        <Value>on</Value>
      </MaskParameter>
      <MaskParameter Name="tsamp" Type="edit" Tunable="off">
        <Prompt>Sample time</Prompt>
        <Value>-1</Value>
      </MaskParameter>
      <DialogControl Type="Group" Name="DescGroupVar">
        <Prompt>%&lt;MaskType&gt;</Prompt>
        <DialogControl Type="Text" Name="DescTextVar">
          <Prompt>%&lt;MaskDescription&gt;</Prompt>
        </DialogControl>
      </DialogControl>
      <DialogControl Type="Group" Name="ParameterGroupVar">
        <Prompt>Simulink:studio:ToolBarParametersMenu</Prompt>
        <DialogControl Type="Popup" Name="ContrType">
          <Prompt>Controller Type</Prompt>
          <ControlOptions PromptLocation="left"/>
        </DialogControl>
        <DialogControl Type="Popup" Name="canBus">
          <Prompt>CAN channel</Prompt>
          <ControlOptions PromptLocation="left"/>
        </DialogControl>
        <DialogControl Type="Edit" Name="outputNumber">
          <Prompt>Output ports</Prompt>
        </DialogControl>
        <DialogControl Type="Popup" Name="dataType">
          <Prompt>Output datatype</Prompt>
          <ControlOptions PromptLocation="left"/>
        </DialogControl>
        <DialogControl Type="CheckBox" Name="byteOrder">
          <Prompt>Byte order: Checked = MSB first, unchecked = LSB first.</Prompt>
        </DialogControl>
        <DialogControl Type="Edit" Name="tsamp">
          <Prompt>Sample time</Prompt>
        </DialogControl>
      </DialogControl>
    </Mask>
  </Block>
  <Block BlockType="M-S-Function" Name="CAN send1" SID="4135">
    <PortCounts in="2"/>
    <P Name="Position">[40, 39, 145, 201]</P>
    <P Name="ZOrder">228</P>
    <P Name="BackgroundColor">[1.000000, 0.666667, 0.000000]</P>
    <List ListType="RTWdata">
      <P Name="canBus">0</P>
      <P Name="frameType">1</P>
      <P Name="inputNumber">1</P>
      <P Name="dataLength">1</P>
      <P Name="RTR">0</P>
    </List>
    <P Name="FunctionName">sfcn_can_send</P>
    <P Name="Parameters">tsamp, canBus, frameType, inputNumber,RTR</P>
    <Mask SelfModifiable="on">
      <Type>CAN send (Legacy)</Type>
      <Display RunInitForIconRedraw="on" IconUnits="pixels">fprintf(&apos;Send on\nCAN%x&apos;, canBus);
port_label(&apos;input&apos;, 1, &apos;ID&apos;);
if RTR
    fprintf(&apos;\n\n\n\nRTR&apos;);
end
text(2, 6, ert_linux_target_version());</Display>
      <Description>!! Legacy block, use the CAN send instead of CAN send1 in future projects !!
!! These will not work together, either use the legacy blocks or the new ones !!


Function
==========
Send a message on the CAN channel.

Parameters
========== 
Controller Type        The controller type, only changes the available CAN channels and puts the correct pinout for that type
CAN channel:           The CAN channel to send the message on.
Identifier type:         normal or extended ID&apos;s
Input ports:              The amount of input ports
Sample time:            -1 or divisible by base sample time [seconds] 

Input
==========
Port 1:                   CAN ID(uint32) in hexadecimal ie: hex2dec(&apos;0a&apos;)
Port 2..9                CAN message data (uint8)</Description>
      <Initialization>% check if number of inputs, combined with the data type, is exceeding the
% maximum data length
if (inputNumber &gt; 8)
    error(&apos;The CAN message supports only up to 8 data bytes&apos;);
elseif (inputNumber &lt; 0)
	error(&apos;The CAN message cant have a negative number of bytes&apos;);
end

% Create resource keywords to be reserved in resource database
modelRTWFields = struct(&apos;canBus&apos;, int2str(canBus-1), &apos;frameType&apos;, int2str(frameType),...
    &apos;inputNumber&apos;, int2str(inputNumber), &apos;dataLength&apos;, int2str(inputNumber), &apos;RTR&apos;, int2str(RTR));

set_param(gcb, &apos;RTWdata&apos;, modelRTWFields);</Initialization>
      <MaskParameter Name="ContrType" Type="popup" Tunable="off">
        <Prompt>Controller Type</Prompt>
        <Value>GOcontroll Moduline IV</Value>
        <Callback>controller = get_param(gcb, &apos;ContrType&apos;);
mask = Simulink.Mask.get(gcb);
can_ifs = mask.getParameter(&apos;canBus&apos;);

if(controller == &quot;GOcontroll Moduline IV&quot;)
    can_ifs.TypeOptions = {&apos;CAN1 - Connector C pin 14 (L) and pin 15 (H)&apos;,&apos;CAN2 - Connector C pin 20 (L) and pin 21 (H)&apos;,...
        &apos;CAN3 - Connector C pin 19 (L) and pin 18 (H)&apos;,&apos;CAN4 - Connector C pin 13 (L) and pin 12 (H)&apos;};
elseif (controller == &quot;GOcontroll Moduline Mini&quot;)
    can_ifs.TypeOptions = {&apos;CAN1 - Connector B pin 24 (L) and pin 25 (H)&apos;,&apos;CAN2 - Connector A pin 24 (L) and pin 25 (H)&apos;};

elseif (controller == &quot;GOcontroll Moduline Display&quot;)
    can_ifs.TypeOptions = {&apos;CAN1 - Connector A pin 16 (L) and pin 17 (H)&apos;,&apos;CAN2 - Connector A pin 24 (L) and pin 25 (H)&apos;};
end</Callback>
        <TypeOptions>
          <Option>GOcontroll Moduline IV</Option>
          <Option>GOcontroll Moduline Mini</Option>
          <Option>GOcontroll Moduline Display</Option>
        </TypeOptions>
      </MaskParameter>
      <MaskParameter Name="canBus" Type="popup" Tunable="off">
        <Prompt>CAN channel</Prompt>
        <Value>CAN1 - Connector C pin 14 (L) and pin 15 (H)</Value>
        <TypeOptions>
          <Option>CAN1 - Connector C pin 14 (L) and pin 15 (H)</Option>
          <Option>CAN2 - Connector C pin 20 (L) and pin 21 (H)</Option>
          <Option>CAN3 - Connector C pin 19 (L) and pin 18 (H)</Option>
          <Option>CAN4 - Connector C pin 13 (L) and pin 12 (H)</Option>
        </TypeOptions>
      </MaskParameter>
      <MaskParameter Name="frameType" Type="popup" Tunable="off">
        <Prompt>Identifier type</Prompt>
        <Value>Standard (11 bit)</Value>
        <TypeOptions>
          <Option>Standard (11 bit)</Option>
          <Option>Extended (29 bit)</Option>
        </TypeOptions>
      </MaskParameter>
      <MaskParameter Name="inputNumber" Type="edit" Tunable="off">
        <Prompt>Input ports</Prompt>
        <Value>1</Value>
      </MaskParameter>
      <MaskParameter Name="RTR" Type="checkbox" Tunable="off">
        <Prompt>Remote Transmission Request</Prompt>
        <Value>off</Value>
      </MaskParameter>
      <MaskParameter Name="tsamp" Type="edit" Tunable="off">
        <Prompt>Sample time</Prompt>
        <Value>-1</Value>
      </MaskParameter>
      <DialogControl Type="Group" Name="DescGroupVar">
        <Prompt>%&lt;MaskType&gt;</Prompt>
        <DialogControl Type="Text" Name="DescTextVar">
          <Prompt>%&lt;MaskDescription&gt;</Prompt>
        </DialogControl>
      </DialogControl>
      <DialogControl Type="Group" Name="ParameterGroupVar">
        <Prompt>Simulink:studio:ToolBarParametersMenu</Prompt>
        <DialogControl Type="Popup" Name="ContrType">
          <Prompt>Controller Type</Prompt>
          <ControlOptions PromptLocation="left"/>
        </DialogControl>
        <DialogControl Type="Popup" Name="canBus">
          <Prompt>CAN channel</Prompt>
          <ControlOptions PromptLocation="left"/>
        </DialogControl>
        <DialogControl Type="Popup" Name="frameType">
          <Prompt>Identifier type</Prompt>
          <ControlOptions PromptLocation="left"/>
        </DialogControl>
        <DialogControl Type="Edit" Name="inputNumber">
          <Prompt>Input ports</Prompt>
        </DialogControl>
        <DialogControl Type="CheckBox" Name="RTR">
          <Prompt>Remote Transmission Request</Prompt>
        </DialogControl>
        <DialogControl Type="Edit" Name="tsamp">
          <Prompt>Sample time</Prompt>
        </DialogControl>
      </DialogControl>
    </Mask>
  </Block>
</System>

__MWOPC_PART_BEGIN__ /simulink/systems/system_3908.xml
<?xml version="1.0" encoding="utf-8"?>
<System>
  <P Name="Location">[3912, 0, 7680, 2160]</P>
  <P Name="PaperType">usletter</P>
  <P Name="PaperUnits">inches</P>
  <P Name="TiledPaperMargins">[0.500000, 0.500000, 0.500000, 0.500000]</P>
  <P Name="ZoomFactor">355</P>
  <Block BlockType="SubSystem" Name="MQTT" SID="3909">
    <PortCounts/>
    <P Name="Position">[25, 24, 125, 66]</P>
    <P Name="ZOrder">-1</P>
    <P Name="BackgroundColor">[1.000000, 0.666667, 0.000000]</P>
    <P Name="Commented">on</P>
    <P Name="UserDataPersistent">on</P>
    <Mask>
      <Display RunInitForIconRedraw="on" IconUnits="pixels">fprintf(&apos;MQTT&apos;);</Display>
    </Mask>
    <System Ref="system_3909"/>
  </Block>
  <Block BlockType="SubSystem" Name="TCP" SID="4229">
    <PortCounts/>
    <P Name="Position">[25, -146, 125, -104]</P>
    <P Name="ZOrder">2</P>
    <P Name="BackgroundColor">[1.000000, 0.666667, 0.000000]</P>
    <P Name="UserDataPersistent">on</P>
    <Mask>
      <Display RunInitForIconRedraw="on" IconUnits="pixels">fprintf(&apos;TCP&apos;);</Display>
    </Mask>
    <System Ref="system_4229"/>
  </Block>
  <Block BlockType="SubSystem" Name="UDP" SID="4065">
    <PortCounts/>
    <P Name="Position">[25, -61, 125, -19]</P>
    <P Name="ZOrder">1</P>
    <P Name="BackgroundColor">[1.000000, 0.666667, 0.000000]</P>
    <P Name="UserDataPersistent">on</P>
    <Mask>
      <Display RunInitForIconRedraw="on" IconUnits="pixels">fprintf(&apos;UDP&apos;);</Display>
    </Mask>
    <System Ref="system_4065"/>
  </Block>
</System>

__MWOPC_PART_BEGIN__ /simulink/systems/system_3909.xml
<?xml version="1.0" encoding="utf-8"?>
<System>
  <P Name="Location">[3912, 0, 7680, 2160]</P>
  <P Name="PaperType">usletter</P>
  <P Name="PaperUnits">inches</P>
  <P Name="TiledPaperMargins">[0.500000, 0.500000, 0.500000, 0.500000]</P>
</System>

__MWOPC_PART_BEGIN__ /simulink/systems/system_3919.xml
<?xml version="1.0" encoding="utf-8"?>
<System>
  <P Name="Location">[3912, 0, 7680, 2160]</P>
  <P Name="PaperType">usletter</P>
  <P Name="PaperUnits">inches</P>
  <P Name="TiledPaperMargins">[0.500000, 0.500000, 0.500000, 0.500000]</P>
  <P Name="ZoomFactor">238</P>
  <Block BlockType="SubSystem" Name="Bridge Module" SID="4026">
    <PortCounts/>
    <P Name="Position">[290, -106, 400, -64]</P>
    <P Name="ZOrder">97</P>
    <P Name="BackgroundColor">[1.000000, 0.666667, 0.000000]</P>
    <P Name="UserDataPersistent">on</P>
    <Mask>
      <Display RunInitForIconRedraw="on" IconUnits="pixels">fprintf(&apos;Bridge Module&apos;);
</Display>
    </Mask>
    <System Ref="system_4026"/>
  </Block>
  <Block BlockType="SubSystem" Name="Input Module" SID="3989">
    <PortCounts/>
    <P Name="Position">[290, -236, 400, -194]</P>
    <P Name="ZOrder">95</P>
    <P Name="BackgroundColor">[1.000000, 0.666667, 0.000000]</P>
    <P Name="UserDataPersistent">on</P>
    <Mask>
      <Display RunInitForIconRedraw="on" IconUnits="pixels">fprintf(&apos;Input Module&apos;);
</Display>
    </Mask>
    <System Ref="system_3989"/>
  </Block>
  <Block BlockType="SubSystem" Name="Output Module" SID="3990">
    <PortCounts/>
    <P Name="Position">[290, -171, 400, -129]</P>
    <P Name="ZOrder">96</P>
    <P Name="BackgroundColor">[1.000000, 0.666667, 0.000000]</P>
    <P Name="UserDataPersistent">on</P>
    <Mask>
      <Display RunInitForIconRedraw="on" IconUnits="pixels">fprintf(&apos;Output Module&apos;);
</Display>
    </Mask>
    <System Ref="system_3990"/>
  </Block>
</System>

__MWOPC_PART_BEGIN__ /simulink/systems/system_3975.xml
<?xml version="1.0" encoding="utf-8"?>
<System>
  <P Name="Location">[3912, 0, 7680, 2160]</P>
  <P Name="PaperType">usletter</P>
  <P Name="PaperUnits">inches</P>
  <P Name="TiledPaperMargins">[0.500000, 0.500000, 0.500000, 0.500000]</P>
  <P Name="ZoomFactor">500</P>
  <Block BlockType="M-S-Function" Name="Enclosure LED" SID="4102">
    <PortCounts in="1"/>
    <P Name="Position">[-20, -166, 130, -124]</P>
    <P Name="ZOrder">96</P>
    <P Name="BackgroundColor">[1.000000, 0.666667, 0.000000]</P>
    <List ListType="RTWdata">
      <P Name="led">1</P>
      <P Name="color">1</P>
    </List>
    <P Name="FunctionName">sfcn_gocontroll_status_led</P>
    <P Name="Parameters">tsamp</P>
    <Mask>
      <Type>Enclosure LED&apos;s</Type>
      <Display RunInitForIconRedraw="on" IconUnits="pixels">fprintf(&apos;Status LED %d\nColor: %s&apos;,led,colorInfoStr);
text(2, 6, ert_linux_target_version());</Display>
      <Description>The Moduline controller is equipped with 4 RGB status LED&apos;s. To control them, simply configure the mask ( LED and color) and control them using uint8 values. 

Note: Moduline IV HW &gt;= 3.02 has duty cycle controlled LED&apos;s. The intensity can be set from 0 (0%) to 255 (100%). 

LED: Select the LED that is needs to be controlled.

Color: Select the color the LED needs to illuminate.</Description>
      <Initialization>    colorInfoString = {&apos;Red&apos;, &apos;Green&apos;, &apos;Blue&apos;};
    colorInfoStr = colorInfoString{color};

    % update RTWdata to run WriteRTW again
    modelRTWFields = struct(&apos;led&apos;, int2str(led),&apos;color&apos;, int2str(color));
    % Insert modelRTWFields in the I/O block S-Function containing the Tag starting with &apos;HANcoder_TARGET_&apos;
    HANcoder_TARGET_DataBlock = find_system(gcb, &apos;RegExp&apos;, &apos;on&apos;, &apos;FollowLinks&apos;, &apos;on&apos;, &apos;LookUnderMasks&apos;, &apos;all&apos;, &apos;BlockType&apos;, &apos;M-S-Function&apos;);
    set_param(HANcoder_TARGET_DataBlock{1}, &apos;RTWdata&apos;, modelRTWFields);</Initialization>
      <MaskParameter Name="tsamp" Type="edit">
        <Prompt>Sample time</Prompt>
        <Value>-1</Value>
      </MaskParameter>
      <MaskParameter Name="led" Type="popup" Tunable="off">
        <Prompt>Led</Prompt>
        <Value>1</Value>
        <TypeOptions>
          <Option>1</Option>
          <Option>2</Option>
          <Option>3</Option>
          <Option>4</Option>
        </TypeOptions>
      </MaskParameter>
      <MaskParameter Name="color" Type="popup" Tunable="off">
        <Prompt>Color</Prompt>
        <Value>Red</Value>
        <TypeOptions>
          <Option>Red</Option>
          <Option>Green</Option>
          <Option>Blue</Option>
        </TypeOptions>
      </MaskParameter>
      <DialogControl Type="Group" Name="DescGroupVar">
        <Prompt>%&lt;MaskType&gt;</Prompt>
        <DialogControl Type="Text" Name="DescTextVar">
          <Prompt>%&lt;MaskDescription&gt;</Prompt>
        </DialogControl>
      </DialogControl>
      <DialogControl Type="Group" Name="ParameterGroupVar">
        <Prompt>Parameters</Prompt>
        <DialogControl Type="Edit" Name="tsamp">
          <Prompt>Sample time</Prompt>
          <ControlOptions PromptLocation="left"/>
        </DialogControl>
        <DialogControl Type="Popup" Name="led">
          <Prompt>Led</Prompt>
          <ControlOptions PromptLocation="left"/>
        </DialogControl>
        <DialogControl Type="Popup" Name="color">
          <Prompt>Color</Prompt>
          <ControlOptions PromptLocation="left"/>
        </DialogControl>
      </DialogControl>
    </Mask>
  </Block>
</System>

__MWOPC_PART_BEGIN__ /simulink/systems/system_3980.xml
<?xml version="1.0" encoding="utf-8"?>
<System>
  <P Name="Location">[3912, 0, 7680, 2160]</P>
  <P Name="PaperType">usletter</P>
  <P Name="PaperUnits">inches</P>
  <P Name="TiledPaperMargins">[0.500000, 0.500000, 0.500000, 0.500000]</P>
  <P Name="ZoomFactor">491</P>
  <Block BlockType="M-S-Function" Name="Controller Active" SID="4097">
    <PortCounts in="1"/>
    <P Name="Position">[110, 334, 260, 376]</P>
    <P Name="ZOrder">10</P>
    <P Name="BackgroundColor">[1.000000, 0.666667, 0.000000]</P>
    <P Name="FunctionName">sfcn_gocontroll_controller_active</P>
    <P Name="Parameters">tsamp</P>
    <Mask>
      <Type>Controller Active</Type>
      <Display RunInitForIconRedraw="on" IconUnits="pixels">fprintf(&apos;Controller Active&apos;);
text(2, 6, ert_linux_target_version());</Display>
      <Description>The GOcontroll Moduline IV is able to keep itself alive. As long the K30 power is applied (connector C pin 5-7) and the input of the Controller Active function block is high, the controller will stay on even if the K15 pins (connector C pin 2,3 or 4) are low. 
If the controller is switched off by software, a restart is only possible when the device is activated by one of the K15 pins of connector C.

To detect an external shutdown (K15 pins goes low), simply drag in the K15 Voltage block. This block provides the input voltage from the K15 pins </Description>
      <MaskParameter Name="tsamp" Type="edit" Tunable="off">
        <Prompt>Sample time</Prompt>
        <Value>1</Value>
      </MaskParameter>
      <DialogControl Type="Group" Name="DescGroupVar">
        <Prompt>%&lt;MaskType&gt;</Prompt>
        <DialogControl Type="Text" Name="DescTextVar">
          <Prompt>%&lt;MaskDescription&gt;</Prompt>
        </DialogControl>
      </DialogControl>
      <DialogControl Type="Group" Name="ParameterGroupVar">
        <Prompt>Parameters</Prompt>
      </DialogControl>
      <DialogControl Type="Edit" Name="tsamp">
        <Prompt>Sample time</Prompt>
        <ControlOptions PromptLocation="left"/>
      </DialogControl>
    </Mask>
  </Block>
  <Block BlockType="M-S-Function" Name="K15 Voltage" SID="4095">
    <PortCounts out="1"/>
    <P Name="Position">[110, 399, 260, 441]</P>
    <P Name="ZOrder">8</P>
    <P Name="BackgroundColor">[1.000000, 0.666667, 0.000000]</P>
    <List ListType="RTWdata">
      <P Name="k15pin">1</P>
    </List>
    <P Name="FunctionName">sfcn_gocontroll_k15_voltage</P>
    <P Name="Parameters">tsamp,k15pin</P>
    <Mask SelfModifiable="on">
      <Type>Contact Voltage</Type>
      <Display IconUnits="pixels">fprintf(&apos;ADC voltage\n%s&apos;,get_param(gcb, &apos;k15pin&apos;));
text(2, 6, ert_linux_target_version());</Display>
      <Description>The K15 voltage provides the K15 voltage in mV that is applied on connector C pin 2,3 or 4. A positive voltage on one of these pins will start-up the controller. These function blocks can be used to read out which K15 input pin triggered the startup.</Description>
      <Initialization>    %update RTWdata to run WriteRTW again
    modelRTWFields = struct(&apos;k15pin&apos;, int2str(k15pin));
    % Insert modelRTWFields in the I/O block S-Function containing the Tag starting with &apos;HANcoder_TARGET_&apos;
    HANcoder_TARGET_DataBlock = find_system(gcb, &apos;RegExp&apos;, &apos;on&apos;, &apos;FollowLinks&apos;, &apos;on&apos;, &apos;LookUnderMasks&apos;, &apos;all&apos;, &apos;BlockType&apos;, &apos;M-S-Function&apos;);
    set_param(HANcoder_TARGET_DataBlock{1}, &apos;RTWdata&apos;, modelRTWFields);</Initialization>
      <MaskParameter Name="ContrType" Type="popup" Tunable="off">
        <Prompt>Controller Type</Prompt>
        <Value>GOcontroll Moduline IV</Value>
        <Callback>controller = get_param(gcb, &apos;ContrType&apos;);
mask = Simulink.Mask.get(gcb);
adc = mask.getParameter(&apos;k15pin&apos;);

if(controller == &quot;GOcontroll Moduline IV&quot;)
    adc.TypeOptions = {&apos;K15-1 (Connector C pin 2)&apos;,&apos;K15-2 (Connector C pin 3)&apos;,&apos;K15-3 (Connector C pin 4)&apos;};
elseif (controller == &quot;GOcontroll Moduline Mini&quot;)
    adc.TypeOptions = {&apos;K15-1 (Connector B pin 17)&apos;,&apos;K15-2 (Connector A pin 16)&apos;,&apos;K15-3 (Connector A pin 17)&apos;};
elseif (controller == &quot;GOcontroll Moduline Display&quot;)
    adc.TypeOptions = {&apos;K15 (Connector A pin 9)&apos;,&apos;Sensor (6 pin Minitek pin 3)&apos;,&apos;Adapter board Sensor&apos;};
end</Callback>
        <TypeOptions>
          <Option>GOcontroll Moduline IV</Option>
          <Option>GOcontroll Moduline Mini</Option>
          <Option>GOcontroll Moduline Display</Option>
        </TypeOptions>
      </MaskParameter>
      <MaskParameter Name="tsamp" Type="edit" Tunable="off">
        <Prompt>Sample time</Prompt>
        <Value>1</Value>
      </MaskParameter>
      <MaskParameter Name="k15pin" Type="popup" Tunable="off">
        <Prompt>K15 input pin</Prompt>
        <Value>K15-1 (Connector C pin 2)</Value>
        <TypeOptions>
          <Option>K15-1 (Connector C pin 2)</Option>
          <Option>K15-2 (Connector C pin 3)</Option>
          <Option>K15-3 (Connector C pin 4)</Option>
        </TypeOptions>
      </MaskParameter>
      <DialogControl Type="Group" Name="DescGroupVar">
        <Prompt>%&lt;MaskType&gt;</Prompt>
        <DialogControl Type="Text" Name="DescTextVar">
          <Prompt>%&lt;MaskDescription&gt;</Prompt>
        </DialogControl>
      </DialogControl>
      <DialogControl Type="Group" Name="ParameterGroupVar">
        <Prompt>Parameters</Prompt>
        <DialogControl Type="Popup" Name="ContrType">
          <Prompt>Controller Type</Prompt>
          <ControlOptions PromptLocation="left"/>
        </DialogControl>
        <DialogControl Type="Edit" Name="tsamp">
          <Prompt>Sample time</Prompt>
          <ControlOptions PromptLocation="left"/>
        </DialogControl>
        <DialogControl Type="Popup" Name="k15pin">
          <Prompt>K15 input pin</Prompt>
          <ControlOptions PromptLocation="left"/>
        </DialogControl>
      </DialogControl>
    </Mask>
  </Block>
  <Block BlockType="M-S-Function" Name="K30 Voltage" SID="4096">
    <PortCounts out="1"/>
    <P Name="Position">[110, 464, 260, 506]</P>
    <P Name="ZOrder">9</P>
    <P Name="BackgroundColor">[1.000000, 0.666667, 0.000000]</P>
    <P Name="FunctionName">sfcn_gocontroll_k30_voltage</P>
    <P Name="Parameters">tsamp</P>
    <Mask>
      <Type>Supply voltage</Type>
      <Display RunInitForIconRedraw="on" IconUnits="pixels">if ContrType == 1
    fprintf(&apos;K30 Voltage\nConnector C pin 5-7&apos;);
elseif ContrType == 2
    fprintf(&apos;K30 Voltage\nConnector B pin 8-9&apos;);
elseif ContrType == 3
    fprintf(&apos;K30 Voltage\nConnector A pin 9&apos;);
end
text(2, 6, ert_linux_target_version());</Display>
      <Description>The K30 voltage provides the power supply in mV that is applied on connector C pin 5-7</Description>
      <MaskParameter Name="ContrType" Type="popup" Tunable="off">
        <Prompt>Controller type</Prompt>
        <Value>GOcontroll Moduline IV</Value>
        <TypeOptions>
          <Option>GOcontroll Moduline IV</Option>
          <Option>GOcontroll Moduline Mini</Option>
          <Option>GOcontroll Moduline Display</Option>
        </TypeOptions>
      </MaskParameter>
      <MaskParameter Name="tsamp" Type="edit" Tunable="off">
        <Prompt>Sample time</Prompt>
        <Value>1</Value>
      </MaskParameter>
      <DialogControl Type="Group" Name="DescGroupVar">
        <Prompt>%&lt;MaskType&gt;</Prompt>
        <DialogControl Type="Text" Name="DescTextVar">
          <Prompt>%&lt;MaskDescription&gt;</Prompt>
        </DialogControl>
      </DialogControl>
      <DialogControl Type="Group" Name="ParameterGroupVar">
        <Prompt>Parameters</Prompt>
        <DialogControl Type="Popup" Name="ContrType">
          <Prompt>Controller type</Prompt>
          <ControlOptions PromptLocation="left"/>
        </DialogControl>
        <DialogControl Type="Edit" Name="tsamp">
          <Prompt>Sample time</Prompt>
          <ControlOptions PromptLocation="left"/>
        </DialogControl>
      </DialogControl>
    </Mask>
  </Block>
</System>

__MWOPC_PART_BEGIN__ /simulink/systems/system_3989.xml
<?xml version="1.0" encoding="utf-8"?>
<System>
  <P Name="Location">[3912, 0, 7680, 2160]</P>
  <P Name="PaperType">usletter</P>
  <P Name="PaperUnits">inches</P>
  <P Name="TiledPaperMargins">[0.500000, 0.500000, 0.500000, 0.500000]</P>
  <P Name="ZoomFactor">242</P>
  <Block BlockType="M-S-Function" Name="Input Module (10 channel)" SID="4109">
    <PortCounts out="10"/>
    <P Name="Position">[205, 216, 390, 379]</P>
    <P Name="ZOrder">8</P>
    <P Name="BackgroundColor">[1.000000, 0.666667, 0.000000]</P>
    <List ListType="RTWdata">
      <P Name="moduleSlot">1</P>
      <P Name="C1func">1</P>
      <P Name="C1pu">1</P>
      <P Name="C1pd">1</P>
      <P Name="C2func">1</P>
      <P Name="C2pu">1</P>
      <P Name="C2pd">1</P>
      <P Name="C3func">1</P>
      <P Name="C3pu">1</P>
      <P Name="C3pd">1</P>
      <P Name="C4func">1</P>
      <P Name="C4pu">1</P>
      <P Name="C4pd">1</P>
      <P Name="C5func">1</P>
      <P Name="C5pu">1</P>
      <P Name="C5pd">1</P>
      <P Name="C6func">1</P>
      <P Name="C6pu">1</P>
      <P Name="C6pd">1</P>
      <P Name="C7func">1</P>
      <P Name="C7pu">1</P>
      <P Name="C7pd">1</P>
      <P Name="C8func">1</P>
      <P Name="C8pu">1</P>
      <P Name="C8pd">1</P>
      <P Name="C9func">1</P>
      <P Name="C9pu">1</P>
      <P Name="C9pd">1</P>
      <P Name="C10func">1</P>
      <P Name="C10pu">1</P>
      <P Name="C10pd">1</P>
      <P Name="SensSup1">1</P>
      <P Name="SensSup2">1</P>
    </List>
    <P Name="FunctionName">sfcn_gocontroll_input_module_10</P>
    <P Name="Parameters">tsamp</P>
    <Mask SelfModifiable="on">
      <Type>Input Module</Type>
      <Display RunInitForIconRedraw="on" IconUnits="pixels">fprintf(&apos;10 Channel Input Module \n%s\n\n Controller Connector: %s&apos;, moduleSlotInfoStr,connectorId);
port_label(&apos;output&apos;, 1, pin1Id);
port_label(&apos;output&apos;, 2, pin2Id);
port_label(&apos;output&apos;, 3, pin3Id);
port_label(&apos;output&apos;, 4, pin4Id);
port_label(&apos;output&apos;, 5, pin5Id);
port_label(&apos;output&apos;, 6, pin6Id);
port_label(&apos;output&apos;, 7, pin7Id);
port_label(&apos;output&apos;, 8, pin8Id);
port_label(&apos;output&apos;, 9, pin9Id);
port_label(&apos;output&apos;, 10, pin10Id);
text(2, 6, ert_linux_target_version());</Display>
      <Description>Whit this function block, you can configure each channel of the 6 channel input module (201001xx). The configuration of the module is executed once so the input module acts acording the setting. During runtime, the block outputs give the measured values from eacht measured channel which can directly be used inside the model. 

Module location:
Sets the location of the module slot where the module is physically 
plugged into.

Channel tabs:
Each channel has its own configuration tab.

Function select:
Select the desired input signal configuration.

Voltage range:
Select the expected input range of the signal.

Analog filter samples:
The number of samples that are passed into a moving average filter. 
(only active in case of an analog input)

Pulses per rotation
The number of pulses for one rotation. This parameter is needed in case the
module needs to calculate the rotation speed from i.e. an axle.

Pull Up:
If required, a pull-up resistance can be added to the input signal.

Pull Down:
If required, a pull-down resistance can be added to the input signal.</Description>
      <Initialization>% array with module slot infos
moduleSlotInfoStrings = {  	&apos;Module slot 1&apos;,  ...\
							&apos;Module slot 2&apos;,  ...\
							&apos;Module slot 3&apos;,  ...\
							&apos;Module slot 4&apos;,  ...\
							&apos;Module slot 5&apos;,  ...\
							&apos;Module slot 6&apos;,  ...\
							&apos;Module slot 7&apos;,  ...\
							&apos;Module slot 8&apos;};

% construct the module slot info string
moduleSlotInfoStr = moduleSlotInfoStrings{moduleSlot};

if(moduleSlot == 1 || moduleSlot == 2)
connectorId = &apos;A&apos;;
elseif(moduleSlot == 3 || moduleSlot == 4)
connectorId = &apos;B&apos;;
elseif(moduleSlot == 5 || moduleSlot == 6)
connectorId = &apos;D&apos;;
else
connectorId = &apos;E&apos;;
end

if(ContrType == 1) % Moduline IV
	if(moduleSlot == 1 || moduleSlot == 3 || moduleSlot == 5 || moduleSlot == 7)
		pin1Id = &apos;Pin 13&apos;;
		pin2Id = &apos;Pin 19&apos;;
		pin3Id = &apos;Pin 12&apos;;
		pin4Id = &apos;Pin 18&apos;;
		pin5Id = &apos;Pin 11&apos;;
		pin6Id = &apos;Pin 17&apos;;
		pin7Id = &apos;Pin 25&apos;;
		pin8Id = &apos;Pin 24&apos;;
		pin9Id = &apos;Pin 5&apos;;
		pin10Id = &apos;Pin 4&apos;;
	else
		pin1Id = &apos;Pin 8&apos;;
		pin2Id = &apos;Pin 14&apos;;
		pin3Id = &apos;Pin 9&apos;;
		pin4Id = &apos;Pin 15&apos;;
		pin5Id = &apos;Pin 10&apos;;
		pin6Id = &apos;Pin 16&apos;;
		pin7Id = &apos;Pin 21&apos;;
		pin8Id = &apos;Pin 22&apos;;
		pin9Id = &apos;Pin 3&apos;;
		pin10Id = &apos;Pin 23&apos;;
	end
elseif(ContrType == 2 || ContrType == 3) % Moduline mini / Moduline display
	if(moduleSlot == 1 || moduleSlot == 3)
		pin1Id = &apos;Pin 15&apos;;
		pin2Id = &apos;Pin 23&apos;;
		pin3Id = &apos;Pin 14&apos;;
		pin4Id = &apos;Pin 22&apos;;
		pin5Id = &apos;Pin 13&apos;;
		pin6Id = &apos;Pin 21&apos;;
		pin7Id = &apos;Pin 31&apos;;
		pin8Id = &apos;Pin 30&apos;;
		pin9Id = &apos;Pin 5&apos;;
		pin10Id = &apos;Pin 4&apos;;
	else
		pin1Id = &apos;Pin 10&apos;;
		pin2Id = &apos;Pin 18&apos;;
		pin3Id = &apos;Pin 11&apos;;
		pin4Id = &apos;Pin 19&apos;;
		pin5Id = &apos;Pin 12&apos;;
		pin6Id = &apos;Pin 20&apos;;
		pin7Id = &apos;Pin 27&apos;;
		pin8Id = &apos;Pin 28&apos;;
		pin9Id = &apos;Pin 3&apos;;
		pin10Id = &apos;Pin 29&apos;;
	end
end

% Create resource keywords to be reserved in resource database
modelRTWFields = struct(&apos;moduleSlot&apos;, int2str(moduleSlot),	&apos;C1func&apos;,int2str(C1func),&apos;C1pu&apos;, int2str(C1pu),&apos;C1pd&apos;, int2str(C1pd),...
															&apos;C2func&apos;, int2str(C2func),&apos;C2pu&apos;, int2str(C2pu),&apos;C2pd&apos;, int2str(C2pd),...
															&apos;C3func&apos;, int2str(C3func),&apos;C3pu&apos;, int2str(C3pu),&apos;C3pd&apos;, int2str(C3pd),...
															&apos;C4func&apos;, int2str(C4func),&apos;C4pu&apos;, int2str(C4pu),&apos;C4pd&apos;, int2str(C4pd),...
															&apos;C5func&apos;, int2str(C5func),&apos;C5pu&apos;, int2str(C5pu),&apos;C5pd&apos;, int2str(C5pd),...
															&apos;C6func&apos;, int2str(C6func),&apos;C6pu&apos;, int2str(C6pu),&apos;C6pd&apos;, int2str(C6pd),...
															&apos;C7func&apos;, int2str(C7func),&apos;C7pu&apos;, int2str(C7pu),&apos;C7pd&apos;, int2str(C7pd),...
															&apos;C8func&apos;, int2str(C8func),&apos;C8pu&apos;, int2str(C8pu),&apos;C8pd&apos;, int2str(C8pd),...
															&apos;C9func&apos;, int2str(C9func),&apos;C9pu&apos;, int2str(C9pu),&apos;C9pd&apos;, int2str(C9pd),...
															&apos;C10func&apos;, int2str(C10func),&apos;C10pu&apos;, int2str(C10pu),&apos;C10pd&apos;, int2str(C10pd),...
															&apos;SensSup1&apos;, int2str(SensSup1), &apos;SensSup2&apos;, int2str(SensSup2));

set_param(gcb, &apos;RTWdata&apos;, modelRTWFields);</Initialization>
      <MaskParameter Name="tsamp" Type="edit" Tunable="off">
        <Prompt>Sample time</Prompt>
        <Value>0.1</Value>
      </MaskParameter>
      <MaskParameter Name="ContrType" Type="popup" Tunable="off">
        <Prompt>Controller Type</Prompt>
        <Value>GOcontroll Moduline IV</Value>
        <Callback>msk = Simulink.Mask.get(gcb);
slot_param = msk.getParameter(&apos;moduleSlot&apos;);

func = get_param(gcb,&apos;ContrType&apos;);

if(func == &quot;GOcontroll Moduline IV&quot;)
    slot_param.TypeOptions = {&apos;Moduleslot 1&apos;,&apos;Moduleslot 2&apos;,&apos;Moduleslot 3&apos;,&apos;Moduleslot 4&apos;,...
                    &apos;Moduleslot 5&apos;,&apos;Moduleslot 6&apos;,&apos;Moduleslot 7&apos;,&apos;Moduleslot 8&apos;};
elseif (func == &quot;GOcontroll Moduline Mini&quot;)
    slot_param.TypeOptions = {&apos;Moduleslot 1&apos;,&apos;Moduleslot 2&apos;,&apos;Moduleslot 3&apos;,&apos;Moduleslot 4&apos;};
elseif (func == &quot;GOcontroll Moduline Display&quot;)
    slot_param.TypeOptions = {&apos;Moduleslot 1&apos;,&apos;Moduleslot 2&apos;}; 
end
</Callback>
        <TypeOptions>
          <Option>GOcontroll Moduline IV</Option>
          <Option>GOcontroll Moduline Mini</Option>
          <Option>GOcontroll Moduline Display</Option>
        </TypeOptions>
      </MaskParameter>
      <MaskParameter Name="moduleSlot" Type="popup" Tunable="off">
        <Prompt>Module Slot</Prompt>
        <Value>Moduleslot 1</Value>
        <TypeOptions>
          <Option>Moduleslot 1</Option>
          <Option>Moduleslot 2</Option>
        </TypeOptions>
      </MaskParameter>
      <MaskParameter Name="SensSup1" Type="popup">
        <Prompt>5V Sensor Supply 1</Prompt>
        <Value>Supply output enabled</Value>
        <TypeOptions>
          <Option>Supply output enabled</Option>
          <Option>Supply output disabled</Option>
        </TypeOptions>
      </MaskParameter>
      <MaskParameter Name="SensSup2" Type="popup">
        <Prompt>5V Sensor Supply 2</Prompt>
        <Value>Supply output enabled</Value>
        <TypeOptions>
          <Option>Supply output enabled</Option>
          <Option>Supply output disabled</Option>
        </TypeOptions>
      </MaskParameter>
      <MaskParameter Name="C1func" Type="popup">
        <Prompt>Function select</Prompt>
        <Value>Analog input -  decimal (12 bit resolution)</Value>
        <TypeOptions>
          <Option>Analog input -  decimal (12 bit resolution)</Option>
          <Option>Analog input -  mV (1mV resolution)</Option>
          <Option>Digital input - status (high or low)</Option>
          <Option>Digital input - frequency (1Hz to 10 kHz)</Option>
          <Option>Digital input - duty cycle low time (0.1% resolution)</Option>
          <Option>Digital input - dutycycle high time (0.1% resolution)</Option>
          <Option>Digital input - rotation speed (rpm)</Option>
          <Option>Digital input - pulse counter (in combination with channel 2)</Option>
        </TypeOptions>
      </MaskParameter>
      <MaskParameter Name="C1pu" Type="popup">
        <Prompt>Pull up on input</Prompt>
        <Value>no pull up</Value>
        <TypeOptions>
          <Option>no pull up</Option>
          <Option>3,3 K ohm</Option>
        </TypeOptions>
      </MaskParameter>
      <MaskParameter Name="C1pd" Type="popup">
        <Prompt>Pull down on input</Prompt>
        <Value>no pull down</Value>
        <TypeOptions>
          <Option>no pull down</Option>
          <Option>3,3 K ohm</Option>
        </TypeOptions>
      </MaskParameter>
      <MaskParameter Name="C2func" Type="popup">
        <Prompt>Function select</Prompt>
        <Value>Analog input -  decimal (12 bit resolution)</Value>
        <TypeOptions>
          <Option>Analog input -  decimal (12 bit resolution)</Option>
          <Option>Analog input -  mV (1mV resolution)</Option>
          <Option>Digital input - status (high or low)</Option>
          <Option>Digital input - frequency (1Hz to 10 kHz)</Option>
          <Option>Digital input - duty cycle low time (0.1% resolution)</Option>
          <Option>Digital input - dutycycle high time (0.1% resolution)</Option>
          <Option>Digital input - rotation speed (rpm)</Option>
          <Option>Digital input - pulse counter (in combination with channel 1)</Option>
        </TypeOptions>
      </MaskParameter>
      <MaskParameter Name="C2pu" Type="popup">
        <Prompt>Pull up on input</Prompt>
        <Value>no pull up</Value>
        <TypeOptions>
          <Option>no pull up</Option>
          <Option>3,3 K ohm</Option>
        </TypeOptions>
      </MaskParameter>
      <MaskParameter Name="C2pd" Type="popup">
        <Prompt>Pull down on input</Prompt>
        <Value>no pull down</Value>
        <TypeOptions>
          <Option>no pull down</Option>
          <Option>3,3 K ohm</Option>
        </TypeOptions>
      </MaskParameter>
      <MaskParameter Name="C3func" Type="popup">
        <Prompt>Function select</Prompt>
        <Value>Analog input -  decimal (12 bit resolution)</Value>
        <TypeOptions>
          <Option>Analog input -  decimal (12 bit resolution)</Option>
          <Option>Analog input -  mV (1mV resolution)</Option>
          <Option>Digital input - status (high or low)</Option>
          <Option>Digital input - frequency (1Hz to 10 kHz)</Option>
          <Option>Digital input - duty cycle low time (0.1% resolution)</Option>
          <Option>Digital input - dutycycle high time (0.1% resolution)</Option>
          <Option>Digital input - rotation speed (rpm)</Option>
          <Option>Digital input - pulse counter (in combination with channel 4)</Option>
        </TypeOptions>
      </MaskParameter>
      <MaskParameter Name="C3pu" Type="popup">
        <Prompt>Pull up on input</Prompt>
        <Value>no pull up</Value>
        <TypeOptions>
          <Option>no pull up</Option>
          <Option>3,3 K ohm</Option>
        </TypeOptions>
      </MaskParameter>
      <MaskParameter Name="C3pd" Type="popup">
        <Prompt>Pull down on input</Prompt>
        <Value>no pull down</Value>
        <TypeOptions>
          <Option>no pull down</Option>
          <Option>3,3 K ohm</Option>
        </TypeOptions>
      </MaskParameter>
      <MaskParameter Name="C4func" Type="popup">
        <Prompt>Function select</Prompt>
        <Value>Analog input -  decimal (12 bit resolution)</Value>
        <TypeOptions>
          <Option>Analog input -  decimal (12 bit resolution)</Option>
          <Option>Analog input -  mV (1mV resolution)</Option>
          <Option>Digital input - status (high or low)</Option>
          <Option>Digital input - frequency (1Hz to 10 kHz)</Option>
          <Option>Digital input - duty cycle low time (0.1% resolution)</Option>
          <Option>Digital input - dutycycle high time (0.1% resolution)</Option>
          <Option>Digital input - rotation speed (rpm)</Option>
          <Option>Digital input - pulse counter (in combination with channel 3)</Option>
        </TypeOptions>
      </MaskParameter>
      <MaskParameter Name="C4pu" Type="popup">
        <Prompt>Pull up on input</Prompt>
        <Value>no pull up</Value>
        <TypeOptions>
          <Option>no pull up</Option>
          <Option>3,3 K ohm</Option>
        </TypeOptions>
      </MaskParameter>
      <MaskParameter Name="C4pd" Type="popup">
        <Prompt>Pull down on input</Prompt>
        <Value>no pull down</Value>
        <TypeOptions>
          <Option>no pull down</Option>
          <Option>3,3 K ohm</Option>
        </TypeOptions>
      </MaskParameter>
      <MaskParameter Name="C5func" Type="popup">
        <Prompt>Function select</Prompt>
        <Value>Analog input -  decimal (12 bit resolution)</Value>
        <TypeOptions>
          <Option>Analog input -  decimal (12 bit resolution)</Option>
          <Option>Analog input -  mV (1mV resolution)</Option>
          <Option>Digital input - status (high or low)</Option>
          <Option>Digital input - frequency (1Hz to 10 kHz)</Option>
          <Option>Digital input - duty cycle low time (0.1% resolution)</Option>
          <Option>Digital input - dutycycle high time (0.1% resolution)</Option>
          <Option>Digital input - rotation speed (rpm)</Option>
          <Option>Digital input - pulse counter (in combination with channel 6)</Option>
        </TypeOptions>
      </MaskParameter>
      <MaskParameter Name="C5pu" Type="popup">
        <Prompt>Pull up on input</Prompt>
        <Value>no pull up</Value>
        <TypeOptions>
          <Option>no pull up</Option>
          <Option>3,3 K ohm</Option>
        </TypeOptions>
      </MaskParameter>
      <MaskParameter Name="C5pd" Type="popup">
        <Prompt>Pull down on input</Prompt>
        <Value>no pull down</Value>
        <TypeOptions>
          <Option>no pull down</Option>
          <Option>3,3 K ohm</Option>
        </TypeOptions>
      </MaskParameter>
      <MaskParameter Name="C6func" Type="popup">
        <Prompt>Function select</Prompt>
        <Value>Analog input -  decimal (12 bit resolution)</Value>
        <TypeOptions>
          <Option>Analog input -  decimal (12 bit resolution)</Option>
          <Option>Analog input -  mV (1mV resolution)</Option>
          <Option>Digital input - status (high or low)</Option>
          <Option>Digital input - frequency (1Hz to 10 kHz)</Option>
          <Option>Digital input - duty cycle low time (0.1% resolution)</Option>
          <Option>Digital input - dutycycle high time (0.1% resolution)</Option>
          <Option>Digital input - rotation speed (rpm)</Option>
          <Option>Digital input - pulse counter (in combination with channel 5)</Option>
        </TypeOptions>
      </MaskParameter>
      <MaskParameter Name="C6pu" Type="popup">
        <Prompt>Pull up on input</Prompt>
        <Value>no pull up</Value>
        <TypeOptions>
          <Option>no pull up</Option>
          <Option>3,3 K ohm</Option>
        </TypeOptions>
      </MaskParameter>
      <MaskParameter Name="C6pd" Type="popup">
        <Prompt>Pull down on input</Prompt>
        <Value>no pull down</Value>
        <TypeOptions>
          <Option>no pull down</Option>
          <Option>3,3 K ohm</Option>
        </TypeOptions>
      </MaskParameter>
      <MaskParameter Name="C7func" Type="popup">
        <Prompt>Function select</Prompt>
        <Value>Analog input -  decimal (12 bit resolution)</Value>
        <TypeOptions>
          <Option>Analog input -  decimal (12 bit resolution)</Option>
          <Option>Analog input -  mV (1mV resolution)</Option>
          <Option>Digital input - status (high or low)</Option>
          <Option>Digital input - frequency (1Hz to 10 kHz)</Option>
          <Option>Digital input - duty cycle low time (0.1% resolution)</Option>
          <Option>Digital input - dutycycle high time (0.1% resolution)</Option>
          <Option>Digital input - rotation speed (rpm)</Option>
          <Option>Digital input - pulse counter (in combination with channel 8)</Option>
        </TypeOptions>
      </MaskParameter>
      <MaskParameter Name="C7pu" Type="popup">
        <Prompt>Pull up on input</Prompt>
        <Value>no pull up</Value>
        <TypeOptions>
          <Option>no pull up</Option>
          <Option>3,3 K ohm</Option>
        </TypeOptions>
      </MaskParameter>
      <MaskParameter Name="C7pd" Type="popup">
        <Prompt>Pull down on input</Prompt>
        <Value>no pull down</Value>
        <TypeOptions>
          <Option>no pull down</Option>
          <Option>3,3 K ohm</Option>
        </TypeOptions>
      </MaskParameter>
      <MaskParameter Name="C8func" Type="popup">
        <Prompt>Function select</Prompt>
        <Value>Analog input -  decimal (12 bit resolution)</Value>
        <TypeOptions>
          <Option>Analog input -  decimal (12 bit resolution)</Option>
          <Option>Analog input -  mV (1mV resolution)</Option>
          <Option>Digital input - status (high or low)</Option>
          <Option>Digital input - frequency (1Hz to 10 kHz)</Option>
          <Option>Digital input - duty cycle low time (0.1% resolution)</Option>
          <Option>Digital input - dutycycle high time (0.1% resolution)</Option>
          <Option>Digital input - rotation speed (rpm)</Option>
          <Option>Digital input - pulse counter (in combination with channel 7)</Option>
        </TypeOptions>
      </MaskParameter>
      <MaskParameter Name="C8pu" Type="popup">
        <Prompt>Pull up on input</Prompt>
        <Value>no pull up</Value>
        <TypeOptions>
          <Option>no pull up</Option>
          <Option>3,3 K ohm</Option>
        </TypeOptions>
      </MaskParameter>
      <MaskParameter Name="C8pd" Type="popup">
        <Prompt>Pull down on input</Prompt>
        <Value>no pull down</Value>
        <TypeOptions>
          <Option>no pull down</Option>
          <Option>3,3 K ohm</Option>
        </TypeOptions>
      </MaskParameter>
      <MaskParameter Name="C9func" Type="popup">
        <Prompt>Function select</Prompt>
        <Value>Analog input -  decimal (12 bit resolution)</Value>
        <TypeOptions>
          <Option>Analog input -  decimal (12 bit resolution)</Option>
          <Option>Analog input -  mV (1mV resolution)</Option>
          <Option>Digital input - status (high or low)</Option>
          <Option>Digital input - frequency (1Hz to 10 kHz)</Option>
          <Option>Digital input - duty cycle low time (0.1% resolution)</Option>
          <Option>Digital input - dutycycle high time (0.1% resolution)</Option>
          <Option>Digital input - rotation speed (rpm)</Option>
          <Option>Digital input - pulse counter (in combination with channel 10)</Option>
        </TypeOptions>
      </MaskParameter>
      <MaskParameter Name="C9pu" Type="popup">
        <Prompt>Pull up on input</Prompt>
        <Value>no pull up</Value>
        <TypeOptions>
          <Option>no pull up</Option>
          <Option>3,3 K ohm</Option>
        </TypeOptions>
      </MaskParameter>
      <MaskParameter Name="C9pd" Type="popup">
        <Prompt>Pull down on input</Prompt>
        <Value>no pull down</Value>
        <TypeOptions>
          <Option>no pull down</Option>
          <Option>3,3 K ohm</Option>
        </TypeOptions>
      </MaskParameter>
      <MaskParameter Name="C10func" Type="popup">
        <Prompt>Function select</Prompt>
        <Value>Analog input -  decimal (12 bit resolution)</Value>
        <TypeOptions>
          <Option>Analog input -  decimal (12 bit resolution)</Option>
          <Option>Analog input -  mV (1mV resolution)</Option>
          <Option>Digital input - status (high or low)</Option>
          <Option>Digital input - frequency (1Hz to 10 kHz)</Option>
          <Option>Digital input - duty cycle low time (0.1% resolution)</Option>
          <Option>Digital input - dutycycle high time (0.1% resolution)</Option>
          <Option>Digital input - rotation speed (rpm)</Option>
          <Option>Digital input - pulse counter (in combination with channel 9)</Option>
        </TypeOptions>
      </MaskParameter>
      <MaskParameter Name="C10pu" Type="popup">
        <Prompt>Pull up on input</Prompt>
        <Value>no pull up</Value>
        <TypeOptions>
          <Option>no pull up</Option>
          <Option>3,3 K ohm</Option>
        </TypeOptions>
      </MaskParameter>
      <MaskParameter Name="C10pd" Type="popup">
        <Prompt>Pull down on input</Prompt>
        <Value>no pull down</Value>
        <TypeOptions>
          <Option>no pull down</Option>
          <Option>3,3 K ohm</Option>
        </TypeOptions>
      </MaskParameter>
      <DialogControl Type="Group" Name="DescGroupVar">
        <Prompt>%&lt;MaskType&gt;</Prompt>
        <DialogControl Type="Text" Name="DescTextVar">
          <Prompt>%&lt;MaskDescription&gt;</Prompt>
        </DialogControl>
      </DialogControl>
      <DialogControl Type="Group" Name="ParameterGroupVar">
        <Prompt>Simulink:studio:ToolBarParametersMenu</Prompt>
        <DialogControl Type="Edit" Name="tsamp">
          <Prompt>Sample time</Prompt>
        </DialogControl>
        <DialogControl Type="Popup" Name="ContrType">
          <Prompt>Controller Type</Prompt>
          <ControlOptions PromptLocation="left"/>
        </DialogControl>
        <DialogControl Type="Popup" Name="moduleSlot">
          <Prompt>Module Slot</Prompt>
          <ControlOptions PromptLocation="left"/>
        </DialogControl>
        <DialogControl Type="Popup" Name="SensSup1">
          <Prompt>5V Sensor Supply 1</Prompt>
          <ControlOptions PromptLocation="left"/>
        </DialogControl>
        <DialogControl Type="Popup" Name="SensSup2">
          <Prompt>5V Sensor Supply 2</Prompt>
          <ControlOptions PromptLocation="left"/>
        </DialogControl>
        <DialogControl Type="TabContainer" Name="Container3">
          <DialogControl Type="Tab" Name="Container4">
            <Prompt>Input 1</Prompt>
            <DialogControl Type="Popup" Name="C1func">
              <Prompt>Function select</Prompt>
              <ControlOptions PromptLocation="left"/>
            </DialogControl>
            <DialogControl Type="Popup" Name="C1pu">
              <Prompt>Pull up on input</Prompt>
              <ControlOptions PromptLocation="left"/>
            </DialogControl>
            <DialogControl Type="Popup" Name="C1pd">
              <Prompt>Pull down on input</Prompt>
              <ControlOptions PromptLocation="left"/>
            </DialogControl>
          </DialogControl>
          <DialogControl Type="Tab" Name="Container5">
            <Prompt>Input 2</Prompt>
            <DialogControl Type="Popup" Name="C2func">
              <Prompt>Function select</Prompt>
              <ControlOptions PromptLocation="left"/>
            </DialogControl>
            <DialogControl Type="Popup" Name="C2pu">
              <Prompt>Pull up on input</Prompt>
              <ControlOptions PromptLocation="left"/>
            </DialogControl>
            <DialogControl Type="Popup" Name="C2pd">
              <Prompt>Pull down on input</Prompt>
              <ControlOptions PromptLocation="left"/>
            </DialogControl>
          </DialogControl>
          <DialogControl Type="Tab" Name="Container8">
            <Prompt>Input 3</Prompt>
            <DialogControl Type="Popup" Name="C3func">
              <Prompt>Function select</Prompt>
              <ControlOptions PromptLocation="left"/>
            </DialogControl>
            <DialogControl Type="Popup" Name="C3pu">
              <Prompt>Pull up on input</Prompt>
              <ControlOptions PromptLocation="left"/>
            </DialogControl>
            <DialogControl Type="Popup" Name="C3pd">
              <Prompt>Pull down on input</Prompt>
              <ControlOptions PromptLocation="left"/>
            </DialogControl>
          </DialogControl>
          <DialogControl Type="Tab" Name="Container9">
            <Prompt>Input 4</Prompt>
            <DialogControl Type="Popup" Name="C4func">
              <Prompt>Function select</Prompt>
              <ControlOptions PromptLocation="left"/>
            </DialogControl>
            <DialogControl Type="Popup" Name="C4pu">
              <Prompt>Pull up on input</Prompt>
              <ControlOptions PromptLocation="left"/>
            </DialogControl>
            <DialogControl Type="Popup" Name="C4pd">
              <Prompt>Pull down on input</Prompt>
              <ControlOptions PromptLocation="left"/>
            </DialogControl>
          </DialogControl>
          <DialogControl Type="Tab" Name="Container7">
            <Prompt>Input 5</Prompt>
            <DialogControl Type="Popup" Name="C5func">
              <Prompt>Function select</Prompt>
              <ControlOptions PromptLocation="left"/>
            </DialogControl>
            <DialogControl Type="Popup" Name="C5pu">
              <Prompt>Pull up on input</Prompt>
              <ControlOptions PromptLocation="left"/>
            </DialogControl>
            <DialogControl Type="Popup" Name="C5pd">
              <Prompt>Pull down on input</Prompt>
              <ControlOptions PromptLocation="left"/>
            </DialogControl>
          </DialogControl>
          <DialogControl Type="Tab" Name="Container12">
            <Prompt>Input 6</Prompt>
            <DialogControl Type="Popup" Name="C6func">
              <Prompt>Function select</Prompt>
              <ControlOptions PromptLocation="left"/>
            </DialogControl>
            <DialogControl Type="Popup" Name="C6pu">
              <Prompt>Pull up on input</Prompt>
              <ControlOptions PromptLocation="left"/>
            </DialogControl>
            <DialogControl Type="Popup" Name="C6pd">
              <Prompt>Pull down on input</Prompt>
              <ControlOptions PromptLocation="left"/>
            </DialogControl>
          </DialogControl>
          <DialogControl Type="Tab" Name="Container6">
            <Prompt>Input 7</Prompt>
            <DialogControl Type="Popup" Name="C7func">
              <Prompt>Function select</Prompt>
              <ControlOptions PromptLocation="left"/>
            </DialogControl>
            <DialogControl Type="Popup" Name="C7pu">
              <Prompt>Pull up on input</Prompt>
              <ControlOptions PromptLocation="left"/>
            </DialogControl>
            <DialogControl Type="Popup" Name="C7pd">
              <Prompt>Pull down on input</Prompt>
              <ControlOptions PromptLocation="left"/>
            </DialogControl>
          </DialogControl>
          <DialogControl Type="Tab" Name="Container10">
            <Prompt>Input 8</Prompt>
            <DialogControl Type="Popup" Name="C8func">
              <Prompt>Function select</Prompt>
              <ControlOptions PromptLocation="left"/>
            </DialogControl>
            <DialogControl Type="Popup" Name="C8pu">
              <Prompt>Pull up on input</Prompt>
              <ControlOptions PromptLocation="left"/>
            </DialogControl>
            <DialogControl Type="Popup" Name="C8pd">
              <Prompt>Pull down on input</Prompt>
              <ControlOptions PromptLocation="left"/>
            </DialogControl>
          </DialogControl>
          <DialogControl Type="Tab" Name="Container11">
            <Prompt>Input 9</Prompt>
            <DialogControl Type="Popup" Name="C9func">
              <Prompt>Function select</Prompt>
              <ControlOptions PromptLocation="left"/>
            </DialogControl>
            <DialogControl Type="Popup" Name="C9pu">
              <Prompt>Pull up on input</Prompt>
              <ControlOptions PromptLocation="left"/>
            </DialogControl>
            <DialogControl Type="Popup" Name="C9pd">
              <Prompt>Pull down on input</Prompt>
              <ControlOptions PromptLocation="left"/>
            </DialogControl>
          </DialogControl>
          <DialogControl Type="Tab" Name="Container13">
            <Prompt>Input 10</Prompt>
            <DialogControl Type="Popup" Name="C10func">
              <Prompt>Function select</Prompt>
              <ControlOptions PromptLocation="left"/>
            </DialogControl>
            <DialogControl Type="Popup" Name="C10pu">
              <Prompt>Pull up on input</Prompt>
              <ControlOptions PromptLocation="left"/>
            </DialogControl>
            <DialogControl Type="Popup" Name="C10pd">
              <Prompt>Pull down on input</Prompt>
              <ControlOptions PromptLocation="left"/>
            </DialogControl>
          </DialogControl>
        </DialogControl>
      </DialogControl>
    </Mask>
  </Block>
  <Block BlockType="M-S-Function" Name="Input Module (6 channel)" SID="4108">
    <PortCounts out="6"/>
    <P Name="Position">[205, 92, 390, 183]</P>
    <P Name="ZOrder">7</P>
    <P Name="BackgroundColor">[1.000000, 0.666667, 0.000000]</P>
    <List ListType="RTWdata">
      <P Name="moduleSlot">1</P>
      <P Name="C1func">1</P>
      <P Name="C1volt">1</P>
      <P Name="C1afil">0</P>
      <P Name="C1dpul">1</P>
      <P Name="C1pu">1</P>
      <P Name="C1pd">1</P>
      <P Name="C2func">1</P>
      <P Name="C2volt">1</P>
      <P Name="C2afil">0</P>
      <P Name="C2dpul">1</P>
      <P Name="C2pu">1</P>
      <P Name="C2pd">1</P>
      <P Name="C3func">1</P>
      <P Name="C3volt">1</P>
      <P Name="C3afil">0</P>
      <P Name="C3dpul">1</P>
      <P Name="C3pu">1</P>
      <P Name="C3pd">1</P>
      <P Name="C4func">1</P>
      <P Name="C4volt">1</P>
      <P Name="C4afil">0</P>
      <P Name="C4dpul">1</P>
      <P Name="C4pu">1</P>
      <P Name="C4pd">1</P>
      <P Name="C5func">1</P>
      <P Name="C5volt">1</P>
      <P Name="C5afil">0</P>
      <P Name="C5dpul">1</P>
      <P Name="C5pu">1</P>
      <P Name="C5pd">1</P>
      <P Name="C6func">1</P>
      <P Name="C6volt">1</P>
      <P Name="C6afil">0</P>
      <P Name="C6dpul">1</P>
      <P Name="C6pu">1</P>
      <P Name="C6pd">1</P>
      <P Name="SensSup1">1</P>
      <P Name="SensSup2">1</P>
      <P Name="SensSup3">1</P>
    </List>
    <P Name="FunctionName">sfcn_gocontroll_input_module</P>
    <P Name="Parameters">tsamp</P>
    <Mask SelfModifiable="on">
      <Type>Input Module</Type>
      <Display RunInitForIconRedraw="on" IconUnits="pixels">fprintf(&apos;6 Channel Input Module \n%s\n\n Controller Connector: %s&apos;, moduleSlotInfoStr,connectorId);
port_label(&apos;output&apos;, 1, pin1Id);
port_label(&apos;output&apos;, 2, pin2Id);
port_label(&apos;output&apos;, 3, pin3Id);
port_label(&apos;output&apos;, 4, pin4Id);
port_label(&apos;output&apos;, 5, pin5Id);
port_label(&apos;output&apos;, 6, pin6Id);
text(2, 6, ert_linux_target_version());</Display>
      <Description>Whit this function block, you can configure each channel of the 6 channel input module (201001xx). The configuration of the module is executed once so the input module acts acording the setting. During runtime, the block outputs give the measured values from eacht measured channel which can directly be used inside the model. 

Module location:
Sets the location of the module slot where the module is physically 
plugged into.

Channel tabs:
Each channel has its own configuration tab.

Function select:
Select the desired input signal configuration.

Voltage range:
Select the expected input range of the signal.

Analog filter samples:
The number of samples that are passed into a moving average filter. 
(only active in case of an analog input)

Pulses per rotation
The number of pulses for one rotation. This parameter is needed in case the
module needs to calculate the rotation speed from i.e. an axle.

Pull Up:
If required, a pull-up resistance can be added to the input signal.

Pull Down:
If required, a pull-down resistance can be added to the input signal.</Description>
      <Initialization>  % array with module slot infos
  moduleSlotInfoStrings = {  	&apos;Module slot 1&apos;,  ...\
								&apos;Module slot 2&apos;,  ...\
								&apos;Module slot 3&apos;,  ...\
								&apos;Module slot 4&apos;,  ...\
								&apos;Module slot 5&apos;,  ...\
								&apos;Module slot 6&apos;,  ...\
								&apos;Module slot 7&apos;,  ...\
								&apos;Module slot 8&apos;};

  % construct the module slot info string
  moduleSlotInfoStr = moduleSlotInfoStrings{moduleSlot};

    if(moduleSlot == 1 || moduleSlot == 2)
	    connectorId = &apos;A&apos;;
    elseif(moduleSlot == 3 || moduleSlot == 4)
	    connectorId = &apos;B&apos;;
    elseif(moduleSlot == 5 || moduleSlot == 6)
	    connectorId = &apos;D&apos;;
    else
	    connectorId = &apos;E&apos;;
    end
    
    
    if(ContrType == 1) % Moduline IV
	    if(moduleSlot == 1 || moduleSlot == 3 || moduleSlot == 5 || moduleSlot == 7)
		    pin1Id = &apos;Pin 13&apos;;
		    pin2Id = &apos;Pin 19&apos;;
		    pin3Id = &apos;Pin 12&apos;;
		    pin4Id = &apos;Pin 18&apos;;
		    pin5Id = &apos;Pin 11&apos;;
		    pin6Id = &apos;Pin 17&apos;;
	    else
		    pin1Id = &apos;Pin 8&apos;;
		    pin2Id = &apos;Pin 14&apos;;
		    pin3Id = &apos;Pin 9&apos;;
		    pin4Id = &apos;Pin 15&apos;;
		    pin5Id = &apos;Pin 10&apos;;
		    pin6Id = &apos;Pin 16&apos;;
	    end
    elseif(ContrType == 2 || ContrType == 3) % Moduline mini / Moduline display
	    if(moduleSlot == 1 || moduleSlot == 3)
		    pin1Id = &apos;Pin 15&apos;;
		    pin2Id = &apos;Pin 23&apos;;
		    pin3Id = &apos;Pin 14&apos;;
		    pin4Id = &apos;Pin 22&apos;;
		    pin5Id = &apos;Pin 13&apos;;
		    pin6Id = &apos;Pin 21&apos;;
	    else
		    pin1Id = &apos;Pin 10&apos;;
		    pin2Id = &apos;Pin 18&apos;;
		    pin3Id = &apos;Pin 11&apos;;
		    pin4Id = &apos;Pin 19&apos;;
		    pin5Id = &apos;Pin 12&apos;;
		    pin6Id = &apos;Pin 20&apos;;
	    end
    end
    
    % Update RTWdata
    modelRTWFields = struct(&apos;moduleSlot&apos;, int2str(moduleSlot),	&apos;C1func&apos;, int2str(C1func),&apos;C1volt&apos;, int2str(C1volt), &apos;C1afil&apos;, int2str(C1afil),&apos;C1dpul&apos;, int2str(C1dpul),&apos;C1pu&apos;, int2str(C1pu),&apos;C1pd&apos;, int2str(C1pd),...
															    &apos;C2func&apos;, int2str(C2func),&apos;C2volt&apos;, int2str(C2volt), &apos;C2afil&apos;, int2str(C2afil),&apos;C2dpul&apos;, int2str(C2dpul),&apos;C2pu&apos;, int2str(C2pu),&apos;C2pd&apos;, int2str(C2pd),...
															    &apos;C3func&apos;, int2str(C3func),&apos;C3volt&apos;, int2str(C3volt), &apos;C3afil&apos;, int2str(C3afil),&apos;C3dpul&apos;, int2str(C3dpul),&apos;C3pu&apos;, int2str(C3pu),&apos;C3pd&apos;, int2str(C3pd),...
															    &apos;C4func&apos;, int2str(C4func),&apos;C4volt&apos;, int2str(C4volt), &apos;C4afil&apos;, int2str(C4afil),&apos;C4dpul&apos;, int2str(C4dpul),&apos;C4pu&apos;, int2str(C4pu),&apos;C4pd&apos;, int2str(C4pd),...
															    &apos;C5func&apos;, int2str(C5func),&apos;C5volt&apos;, int2str(C5volt), &apos;C5afil&apos;, int2str(C5afil),&apos;C5dpul&apos;, int2str(C5dpul),&apos;C5pu&apos;, int2str(C5pu),&apos;C5pd&apos;, int2str(C5pd),...
															    &apos;C6func&apos;, int2str(C6func),&apos;C6volt&apos;, int2str(C6volt), &apos;C6afil&apos;, int2str(C6afil),&apos;C6dpul&apos;, int2str(C6dpul),&apos;C6pu&apos;, int2str(C6pu),&apos;C6pd&apos;, int2str(C6pd),...
															    &apos;SensSup1&apos;, int2str(SensSup1),&apos;SensSup2&apos;, int2str(SensSup2), &apos;SensSup3&apos;, int2str(SensSup3));

    set_param(gcb, &apos;RTWdata&apos;, modelRTWFields);</Initialization>
      <MaskParameter Name="tsamp" Type="edit" Tunable="off">
        <Prompt>Sample time</Prompt>
        <Value>0.1</Value>
      </MaskParameter>
      <MaskParameter Name="ContrType" Type="popup" Tunable="off">
        <Prompt>Controller Type</Prompt>
        <Value>GOcontroll Moduline IV</Value>
        <Callback>msk = Simulink.Mask.get(gcb);
p = msk.getParameter(&apos;moduleSlot&apos;);

func = get_param(gcb,&apos;ContrType&apos;);

if(func == &quot;GOcontroll Moduline IV&quot;)
    p.TypeOptions = {&apos;Moduleslot 1&apos;,&apos;Moduleslot 2&apos;,&apos;Moduleslot 3&apos;,&apos;Moduleslot 4&apos;,...
                    &apos;Moduleslot 5&apos;,&apos;Moduleslot 6&apos;,&apos;Moduleslot 7&apos;,&apos;Moduleslot 8&apos;};
elseif (func == &quot;GOcontroll Moduline Mini&quot;)
    p.TypeOptions = {&apos;Moduleslot 1&apos;,&apos;Moduleslot 2&apos;,&apos;Moduleslot 3&apos;,&apos;Moduleslot 4&apos;}; 
elseif (func == &quot;GOcontroll Moduline Display&quot;)
    p.TypeOptions = {&apos;Moduleslot 1&apos;,&apos;Moduleslot 2&apos;}; 
end
</Callback>
        <TypeOptions>
          <Option>GOcontroll Moduline IV</Option>
          <Option>GOcontroll Moduline Mini</Option>
          <Option>GOcontroll Moduline Display</Option>
        </TypeOptions>
      </MaskParameter>
      <MaskParameter Name="moduleSlot" Type="popup" Tunable="off">
        <Prompt>Module Slot</Prompt>
        <Value>Moduleslot 1</Value>
        <TypeOptions>
          <Option>Moduleslot 1</Option>
          <Option>Moduleslot 2</Option>
          <Option>Moduleslot 3</Option>
          <Option>Moduleslot 4</Option>
          <Option>Moduleslot 5</Option>
          <Option>Moduleslot 6</Option>
          <Option>Moduleslot 7</Option>
          <Option>Moduleslot 8</Option>
        </TypeOptions>
      </MaskParameter>
      <MaskParameter Name="SensSup1" Type="popup" Tunable="off">
        <Prompt>5V Sensor Supply 1</Prompt>
        <Value>Supply output enabled</Value>
        <TypeOptions>
          <Option>Supply output enabled</Option>
          <Option>Supply output disabled</Option>
        </TypeOptions>
      </MaskParameter>
      <MaskParameter Name="SensSup2" Type="popup" Tunable="off">
        <Prompt>5V Sensor Supply 2</Prompt>
        <Value>Supply output enabled</Value>
        <TypeOptions>
          <Option>Supply output enabled</Option>
          <Option>Supply output disabled</Option>
        </TypeOptions>
      </MaskParameter>
      <MaskParameter Name="SensSup3" Type="popup" Tunable="off">
        <Prompt>5V Sensor Supply 3</Prompt>
        <Value>Supply output enabled</Value>
        <TypeOptions>
          <Option>Supply output enabled</Option>
          <Option>Supply output disabled</Option>
        </TypeOptions>
      </MaskParameter>
      <MaskParameter Name="C1func" Type="popup">
        <Prompt>Function select</Prompt>
        <Value>Analog input -  decimal (12 bit resolution)</Value>
        <TypeOptions>
          <Option>Analog input -  decimal (12 bit resolution)</Option>
          <Option>Analog input -  mV (1mV resolution)</Option>
          <Option>Digital input - status (high or low)</Option>
          <Option>Digital input - frequency (1Hz to 10 kHz)</Option>
          <Option>Digital input - duty cycle low time (0.1% resolution)</Option>
          <Option>Digital input - dutycycle high time (0.1% resolution)</Option>
          <Option>Digital input - rotation speed (rpm)</Option>
          <Option>Digital input - pulse counter (in combination with channel 2)</Option>
        </TypeOptions>
      </MaskParameter>
      <MaskParameter Name="C1volt" Type="popup">
        <Prompt>Voltage range</Prompt>
        <Value>0 - 5 V</Value>
        <TypeOptions>
          <Option>0 - 5 V</Option>
          <Option>0 - 10V (external sensor supply)</Option>
          <Option>0 - 24V (external sensor supply)</Option>
        </TypeOptions>
      </MaskParameter>
      <MaskParameter Name="C1afil" Type="edit">
        <Prompt>Analog filter samples (0 - 1000)</Prompt>
        <Value>0</Value>
      </MaskParameter>
      <MaskParameter Name="C1dpul" Type="edit">
        <Prompt>Pulses per rotation (1-200)</Prompt>
        <Value>1</Value>
      </MaskParameter>
      <MaskParameter Name="C1pu" Type="popup">
        <Prompt>Pull up on input</Prompt>
        <Value>no pull up</Value>
        <TypeOptions>
          <Option>no pull up</Option>
          <Option>3,3 K ohm</Option>
          <Option>4,7 K ohm</Option>
          <Option>10 K ohm</Option>
        </TypeOptions>
      </MaskParameter>
      <MaskParameter Name="C1pd" Type="popup">
        <Prompt>Pull down on input</Prompt>
        <Value>no pull down</Value>
        <TypeOptions>
          <Option>no pull down</Option>
          <Option>3,3 K ohm</Option>
          <Option>4,7 K ohm</Option>
          <Option>10 K ohm</Option>
        </TypeOptions>
      </MaskParameter>
      <MaskParameter Name="C2func" Type="popup">
        <Prompt>Function select</Prompt>
        <Value>Analog input -  decimal (12 bit resolution)</Value>
        <TypeOptions>
          <Option>Analog input -  decimal (12 bit resolution)</Option>
          <Option>Analog input -  mV (1mV resolution)</Option>
          <Option>Digital input - status (high or low)</Option>
          <Option>Digital input - frequency (1Hz to 10 kHz)</Option>
          <Option>Digital input - duty cycle low time (0.1% resolution)</Option>
          <Option>Digital input - dutycycle high time (0.1% resolution)</Option>
          <Option>Digital input - rotation speed (rpm)</Option>
          <Option>Digital input - pulse counter (in combination with channel 1)</Option>
        </TypeOptions>
      </MaskParameter>
      <MaskParameter Name="C2volt" Type="popup">
        <Prompt>Voltage range</Prompt>
        <Value>0 - 5 V</Value>
        <TypeOptions>
          <Option>0 - 5 V</Option>
          <Option>0 - 10V (external sensor supply)</Option>
          <Option>0 - 24V (external sensor supply)</Option>
        </TypeOptions>
      </MaskParameter>
      <MaskParameter Name="C2afil" Type="edit">
        <Prompt>Analog filter samples (0 - 1000)</Prompt>
        <Value>0</Value>
      </MaskParameter>
      <MaskParameter Name="C2dpul" Type="edit">
        <Prompt>Pulses per rotation (1-200)</Prompt>
        <Value>1</Value>
      </MaskParameter>
      <MaskParameter Name="C2pu" Type="popup">
        <Prompt>Pull up on input</Prompt>
        <Value>no pull up</Value>
        <TypeOptions>
          <Option>no pull up</Option>
          <Option>3,3 K ohm</Option>
          <Option>4,7 K ohm</Option>
          <Option>10 K ohm</Option>
        </TypeOptions>
      </MaskParameter>
      <MaskParameter Name="C2pd" Type="popup">
        <Prompt>Pull down on input</Prompt>
        <Value>no pull down</Value>
        <TypeOptions>
          <Option>no pull down</Option>
          <Option>3,3 K ohm</Option>
          <Option>4,7 K ohm</Option>
          <Option>10 K ohm</Option>
        </TypeOptions>
      </MaskParameter>
      <MaskParameter Name="C3func" Type="popup">
        <Prompt>Function select</Prompt>
        <Value>Analog input -  decimal (12 bit resolution)</Value>
        <TypeOptions>
          <Option>Analog input -  decimal (12 bit resolution)</Option>
          <Option>Analog input -  mV (1mV resolution)</Option>
          <Option>Digital input - status (high or low)</Option>
          <Option>Digital input - frequency (1Hz to 10 kHz)</Option>
          <Option>Digital input - duty cycle low time (0.1% resolution)</Option>
          <Option>Digital input - dutycycle high time (0.1% resolution)</Option>
          <Option>Digital input - rotation speed (rpm)</Option>
          <Option>Digital input - pulse counter (in combination with channel 4)</Option>
        </TypeOptions>
      </MaskParameter>
      <MaskParameter Name="C3volt" Type="popup">
        <Prompt>Voltage range</Prompt>
        <Value>0 - 5 V</Value>
        <TypeOptions>
          <Option>0 - 5 V</Option>
          <Option>0 - 10V (external sensor supply)</Option>
          <Option>0 - 24V (external sensor supply)</Option>
        </TypeOptions>
      </MaskParameter>
      <MaskParameter Name="C3afil" Type="edit">
        <Prompt>Analog filter samples (0 - 1000)</Prompt>
        <Value>0</Value>
      </MaskParameter>
      <MaskParameter Name="C3dpul" Type="edit">
        <Prompt>Pulses per rotation (1-200)</Prompt>
        <Value>1</Value>
      </MaskParameter>
      <MaskParameter Name="C3pu" Type="popup">
        <Prompt>Pull up on input</Prompt>
        <Value>no pull up</Value>
        <TypeOptions>
          <Option>no pull up</Option>
          <Option>3,3 K ohm</Option>
          <Option>4,7 K ohm</Option>
          <Option>10 K ohm</Option>
        </TypeOptions>
      </MaskParameter>
      <MaskParameter Name="C3pd" Type="popup">
        <Prompt>Pull down on input</Prompt>
        <Value>no pull down</Value>
        <TypeOptions>
          <Option>no pull down</Option>
          <Option>3,3 K ohm</Option>
          <Option>4,7 K ohm</Option>
          <Option>10 K ohm</Option>
        </TypeOptions>
      </MaskParameter>
      <MaskParameter Name="C4func" Type="popup">
        <Prompt>Function select</Prompt>
        <Value>Analog input -  decimal (12 bit resolution)</Value>
        <TypeOptions>
          <Option>Analog input -  decimal (12 bit resolution)</Option>
          <Option>Analog input -  mV (1mV resolution)</Option>
          <Option>Digital input - status (high or low)</Option>
          <Option>Digital input - frequency (1Hz to 10 kHz)</Option>
          <Option>Digital input - duty cycle low time (0.1% resolution)</Option>
          <Option>Digital input - dutycycle high time (0.1% resolution)</Option>
          <Option>Digital input - rotation speed (rpm)</Option>
          <Option>Digital input - pulse counter (in combination with channel 3)</Option>
          <Option>TFmini plus - Benewake LIDAR sensor</Option>
        </TypeOptions>
      </MaskParameter>
      <MaskParameter Name="C4volt" Type="popup">
        <Prompt>Voltage range</Prompt>
        <Value>0 - 5 V</Value>
        <TypeOptions>
          <Option>0 - 5 V</Option>
          <Option>0 - 10V (external sensor supply)</Option>
          <Option>0 - 24V (external sensor supply)</Option>
        </TypeOptions>
      </MaskParameter>
      <MaskParameter Name="C4afil" Type="edit">
        <Prompt>Analog filter samples (0 - 1000)</Prompt>
        <Value>0</Value>
      </MaskParameter>
      <MaskParameter Name="C4dpul" Type="edit">
        <Prompt>Pulses per rotation (1-200)</Prompt>
        <Value>1</Value>
      </MaskParameter>
      <MaskParameter Name="C4pu" Type="popup">
        <Prompt>Pull up on input</Prompt>
        <Value>no pull up</Value>
        <TypeOptions>
          <Option>no pull up</Option>
          <Option>3,3 K ohm</Option>
          <Option>4,7 K ohm</Option>
          <Option>10 K ohm</Option>
        </TypeOptions>
      </MaskParameter>
      <MaskParameter Name="C4pd" Type="popup">
        <Prompt>Pull down on input</Prompt>
        <Value>no pull down</Value>
        <TypeOptions>
          <Option>no pull down</Option>
          <Option>3,3 K ohm</Option>
          <Option>4,7 K ohm</Option>
          <Option>10 K ohm</Option>
        </TypeOptions>
      </MaskParameter>
      <MaskParameter Name="C5func" Type="popup">
        <Prompt>Function select</Prompt>
        <Value>Analog input -  decimal (12 bit resolution)</Value>
        <TypeOptions>
          <Option>Analog input -  decimal (12 bit resolution)</Option>
          <Option>Analog input -  mV (1mV resolution)</Option>
          <Option>Digital input - status (high or low)</Option>
          <Option>Digital input - frequency (1Hz to 10 kHz)</Option>
          <Option>Digital input - duty cycle low time (0.1% resolution)</Option>
          <Option>Digital input - dutycycle high time (0.1% resolution)</Option>
          <Option>Digital input - rotation speed (rpm)</Option>
          <Option>Digital input - pulse counter (in combination with channel 6)</Option>
        </TypeOptions>
      </MaskParameter>
      <MaskParameter Name="C5volt" Type="popup">
        <Prompt>Voltage range</Prompt>
        <Value>0 - 5 V</Value>
        <TypeOptions>
          <Option>0 - 5 V</Option>
          <Option>0 - 10V (external sensor supply)</Option>
          <Option>0 - 24V (external sensor supply)</Option>
        </TypeOptions>
      </MaskParameter>
      <MaskParameter Name="C5afil" Type="edit">
        <Prompt>Analog filter samples (0 - 1000)</Prompt>
        <Value>0</Value>
      </MaskParameter>
      <MaskParameter Name="C5dpul" Type="edit">
        <Prompt>Pulses per rotation (1-200)</Prompt>
        <Value>1</Value>
      </MaskParameter>
      <MaskParameter Name="C5pu" Type="popup">
        <Prompt>Pull up on input</Prompt>
        <Value>no pull up</Value>
        <TypeOptions>
          <Option>no pull up</Option>
          <Option>3,3 K ohm</Option>
          <Option>4,7 K ohm</Option>
          <Option>10 K ohm</Option>
        </TypeOptions>
      </MaskParameter>
      <MaskParameter Name="C5pd" Type="popup">
        <Prompt>Pull down on input</Prompt>
        <Value>no pull down</Value>
        <TypeOptions>
          <Option>no pull down</Option>
          <Option>3,3 K ohm</Option>
          <Option>4,7 K ohm</Option>
          <Option>10 K ohm</Option>
        </TypeOptions>
      </MaskParameter>
      <MaskParameter Name="C6func" Type="popup">
        <Prompt>Function select</Prompt>
        <Value>Analog input -  decimal (12 bit resolution)</Value>
        <TypeOptions>
          <Option>Analog input -  decimal (12 bit resolution)</Option>
          <Option>Analog input -  mV (1mV resolution)</Option>
          <Option>Digital input - status (high or low)</Option>
          <Option>Digital input - frequency (1Hz to 10 kHz)</Option>
          <Option>Digital input - duty cycle low time (0.1% resolution)</Option>
          <Option>Digital input - dutycycle high time (0.1% resolution)</Option>
          <Option>Digital input - rotation speed (rpm)</Option>
          <Option>Digital input - pulse counter (in combination with channel 5)</Option>
        </TypeOptions>
      </MaskParameter>
      <MaskParameter Name="C6volt" Type="popup">
        <Prompt>Voltage range</Prompt>
        <Value>0 - 5 V</Value>
        <TypeOptions>
          <Option>0 - 5 V</Option>
          <Option>0 - 10V (external sensor supply)</Option>
          <Option>0 - 24V (external sensor supply)</Option>
        </TypeOptions>
      </MaskParameter>
      <MaskParameter Name="C6afil" Type="edit">
        <Prompt>Analog filter samples (0 - 1000)</Prompt>
        <Value>0</Value>
      </MaskParameter>
      <MaskParameter Name="C6dpul" Type="edit">
        <Prompt>Pulses per rotation (1-200)</Prompt>
        <Value>1</Value>
      </MaskParameter>
      <MaskParameter Name="C6pu" Type="popup">
        <Prompt>Pull up on input</Prompt>
        <Value>no pull up</Value>
        <TypeOptions>
          <Option>no pull up</Option>
          <Option>3,3 K ohm</Option>
          <Option>4,7 K ohm</Option>
          <Option>10 K ohm</Option>
        </TypeOptions>
      </MaskParameter>
      <MaskParameter Name="C6pd" Type="popup">
        <Prompt>Pull down on input</Prompt>
        <Value>no pull down</Value>
        <TypeOptions>
          <Option>no pull down</Option>
          <Option>3,3 K ohm</Option>
          <Option>4,7 K ohm</Option>
          <Option>10 K ohm</Option>
        </TypeOptions>
      </MaskParameter>
      <DialogControl Type="Group" Name="DescGroupVar">
        <Prompt>%&lt;MaskType&gt;</Prompt>
        <DialogControl Type="Text" Name="DescTextVar">
          <Prompt>%&lt;MaskDescription&gt;</Prompt>
        </DialogControl>
      </DialogControl>
      <DialogControl Type="Group" Name="ParameterGroupVar">
        <Prompt>Simulink:studio:ToolBarParametersMenu</Prompt>
        <DialogControl Type="Edit" Name="tsamp">
          <Prompt>Sample time</Prompt>
        </DialogControl>
        <DialogControl Type="Popup" Name="ContrType">
          <Prompt>Controller Type</Prompt>
          <ControlOptions PromptLocation="left"/>
        </DialogControl>
        <DialogControl Type="Popup" Name="moduleSlot">
          <Prompt>Module Slot</Prompt>
          <ControlOptions PromptLocation="left"/>
        </DialogControl>
        <DialogControl Type="Popup" Name="SensSup1">
          <Prompt>5V Sensor Supply 1</Prompt>
          <ControlOptions PromptLocation="left"/>
        </DialogControl>
        <DialogControl Type="Popup" Name="SensSup2">
          <Prompt>5V Sensor Supply 2</Prompt>
          <ControlOptions PromptLocation="left"/>
        </DialogControl>
        <DialogControl Type="Popup" Name="SensSup3">
          <Prompt>5V Sensor Supply 3</Prompt>
          <ControlOptions PromptLocation="left"/>
        </DialogControl>
        <DialogControl Type="TabContainer" Name="Container3">
          <DialogControl Type="Tab" Name="Container4">
            <Prompt>Input 1</Prompt>
            <DialogControl Type="Popup" Name="C1func">
              <Prompt>Function select</Prompt>
              <ControlOptions PromptLocation="left"/>
            </DialogControl>
            <DialogControl Type="Popup" Name="C1volt">
              <Prompt>Voltage range</Prompt>
              <ControlOptions PromptLocation="left"/>
            </DialogControl>
            <DialogControl Type="Edit" Name="C1afil">
              <Prompt>Analog filter samples (0 - 1000)</Prompt>
              <ControlOptions PromptLocation="left"/>
            </DialogControl>
            <DialogControl Type="Edit" Name="C1dpul">
              <Prompt>Pulses per rotation (1-200)</Prompt>
              <ControlOptions PromptLocation="left"/>
            </DialogControl>
            <DialogControl Type="Popup" Name="C1pu">
              <Prompt>Pull up on input</Prompt>
              <ControlOptions PromptLocation="left"/>
            </DialogControl>
            <DialogControl Type="Popup" Name="C1pd">
              <Prompt>Pull down on input</Prompt>
              <ControlOptions PromptLocation="left"/>
            </DialogControl>
          </DialogControl>
          <DialogControl Type="Tab" Name="Container5">
            <Prompt>Input 2</Prompt>
            <DialogControl Type="Popup" Name="C2func">
              <Prompt>Function select</Prompt>
              <ControlOptions PromptLocation="left"/>
            </DialogControl>
            <DialogControl Type="Popup" Name="C2volt">
              <Prompt>Voltage range</Prompt>
              <ControlOptions PromptLocation="left"/>
            </DialogControl>
            <DialogControl Type="Edit" Name="C2afil">
              <Prompt>Analog filter samples (0 - 1000)</Prompt>
              <ControlOptions PromptLocation="left"/>
            </DialogControl>
            <DialogControl Type="Edit" Name="C2dpul">
              <Prompt>Pulses per rotation (1-200)</Prompt>
              <ControlOptions PromptLocation="left"/>
            </DialogControl>
            <DialogControl Type="Popup" Name="C2pu">
              <Prompt>Pull up on input</Prompt>
              <ControlOptions PromptLocation="left"/>
            </DialogControl>
            <DialogControl Type="Popup" Name="C2pd">
              <Prompt>Pull down on input</Prompt>
              <ControlOptions PromptLocation="left"/>
            </DialogControl>
          </DialogControl>
          <DialogControl Type="Tab" Name="Container8">
            <Prompt>Input 3</Prompt>
            <DialogControl Type="Popup" Name="C3func">
              <Prompt>Function select</Prompt>
              <ControlOptions PromptLocation="left"/>
            </DialogControl>
            <DialogControl Type="Popup" Name="C3volt">
              <Prompt>Voltage range</Prompt>
              <ControlOptions PromptLocation="left"/>
            </DialogControl>
            <DialogControl Type="Edit" Name="C3afil">
              <Prompt>Analog filter samples (0 - 1000)</Prompt>
              <ControlOptions PromptLocation="left"/>
            </DialogControl>
            <DialogControl Type="Edit" Name="C3dpul">
              <Prompt>Pulses per rotation (1-200)</Prompt>
              <ControlOptions PromptLocation="left"/>
            </DialogControl>
            <DialogControl Type="Popup" Name="C3pu">
              <Prompt>Pull up on input</Prompt>
              <ControlOptions PromptLocation="left"/>
            </DialogControl>
            <DialogControl Type="Popup" Name="C3pd">
              <Prompt>Pull down on input</Prompt>
              <ControlOptions PromptLocation="left"/>
            </DialogControl>
          </DialogControl>
          <DialogControl Type="Tab" Name="Container9">
            <Prompt>Input 4</Prompt>
            <DialogControl Type="Popup" Name="C4func">
              <Prompt>Function select</Prompt>
              <ControlOptions PromptLocation="left"/>
            </DialogControl>
            <DialogControl Type="Popup" Name="C4volt">
              <Prompt>Voltage range</Prompt>
              <ControlOptions PromptLocation="left"/>
            </DialogControl>
            <DialogControl Type="Edit" Name="C4afil">
              <Prompt>Analog filter samples (0 - 1000)</Prompt>
              <ControlOptions PromptLocation="left"/>
            </DialogControl>
            <DialogControl Type="Edit" Name="C4dpul">
              <Prompt>Pulses per rotation (1-200)</Prompt>
              <ControlOptions PromptLocation="left"/>
            </DialogControl>
            <DialogControl Type="Popup" Name="C4pu">
              <Prompt>Pull up on input</Prompt>
              <ControlOptions PromptLocation="left"/>
            </DialogControl>
            <DialogControl Type="Popup" Name="C4pd">
              <Prompt>Pull down on input</Prompt>
              <ControlOptions PromptLocation="left"/>
            </DialogControl>
          </DialogControl>
          <DialogControl Type="Tab" Name="Container7">
            <Prompt>Input 5</Prompt>
            <DialogControl Type="Popup" Name="C5func">
              <Prompt>Function select</Prompt>
              <ControlOptions PromptLocation="left"/>
            </DialogControl>
            <DialogControl Type="Popup" Name="C5volt">
              <Prompt>Voltage range</Prompt>
              <ControlOptions PromptLocation="left"/>
            </DialogControl>
            <DialogControl Type="Edit" Name="C5afil">
              <Prompt>Analog filter samples (0 - 1000)</Prompt>
              <ControlOptions PromptLocation="left"/>
            </DialogControl>
            <DialogControl Type="Edit" Name="C5dpul">
              <Prompt>Pulses per rotation (1-200)</Prompt>
              <ControlOptions PromptLocation="left"/>
            </DialogControl>
            <DialogControl Type="Popup" Name="C5pu">
              <Prompt>Pull up on input</Prompt>
              <ControlOptions PromptLocation="left"/>
            </DialogControl>
            <DialogControl Type="Popup" Name="C5pd">
              <Prompt>Pull down on input</Prompt>
              <ControlOptions PromptLocation="left"/>
            </DialogControl>
          </DialogControl>
          <DialogControl Type="Tab" Name="Container12">
            <Prompt>Input 6</Prompt>
            <DialogControl Type="Popup" Name="C6func">
              <Prompt>Function select</Prompt>
              <ControlOptions PromptLocation="left"/>
            </DialogControl>
            <DialogControl Type="Popup" Name="C6volt">
              <Prompt>Voltage range</Prompt>
              <ControlOptions PromptLocation="left"/>
            </DialogControl>
            <DialogControl Type="Edit" Name="C6afil">
              <Prompt>Analog filter samples (0 - 1000)</Prompt>
              <ControlOptions PromptLocation="left"/>
            </DialogControl>
            <DialogControl Type="Edit" Name="C6dpul">
              <Prompt>Pulses per rotation (1-200)</Prompt>
              <ControlOptions PromptLocation="left"/>
            </DialogControl>
            <DialogControl Type="Popup" Name="C6pu">
              <Prompt>Pull up on input</Prompt>
              <ControlOptions PromptLocation="left"/>
            </DialogControl>
            <DialogControl Type="Popup" Name="C6pd">
              <Prompt>Pull down on input</Prompt>
              <ControlOptions PromptLocation="left"/>
            </DialogControl>
          </DialogControl>
        </DialogControl>
      </DialogControl>
    </Mask>
  </Block>
  <Block BlockType="M-S-Function" Name="Input Module 4-20 mA (10 channel)" SID="4111">
    <PortCounts out="11"/>
    <P Name="Position">[205, 509, 390, 671]</P>
    <P Name="ZOrder">10</P>
    <P Name="BackgroundColor">[1.000000, 0.666667, 0.000000]</P>
    <List ListType="RTWdata">
      <P Name="moduleSlot">1</P>
      <P Name="Sup16ch12">2</P>
      <P Name="Sup16ch34">2</P>
      <P Name="Sup16ch56">2</P>
      <P Name="Sup16ch78">2</P>
      <P Name="Sup16ch910">2</P>
    </List>
    <P Name="FunctionName">sfcn_gocontroll_input_module_420ma</P>
    <P Name="Parameters">tsamp</P>
    <Mask SelfModifiable="on">
      <Type>4-20 mA Input Module</Type>
      <Display RunInitForIconRedraw="on" IconUnits="pixels">fprintf(&apos;4-20 mA Input Module \n%s\n\n Controller Connector: %s&apos;, moduleSlotInfoStr,connectorId);
port_label(&apos;output&apos;, 1, &quot;Status&quot;);
port_label(&apos;output&apos;, 2, pin1Id);
port_label(&apos;output&apos;, 3, pin2Id);
port_label(&apos;output&apos;, 4, pin3Id);
port_label(&apos;output&apos;, 5, pin4Id);
port_label(&apos;output&apos;, 6, pin5Id);
port_label(&apos;output&apos;, 7, pin6Id);
port_label(&apos;output&apos;, 8, pin7Id);
port_label(&apos;output&apos;, 9, pin8Id);
port_label(&apos;output&apos;, 10, pin9Id);
port_label(&apos;output&apos;, 11, pin10Id);
text(2, 6, ert_linux_target_version());</Display>
      <Description>Controller type:
Selects the controller that is to be programmed. Pinning on the mask will be adopted accordingly.

Module slot:
Sets the location of the module slot where the module is physically plugged into.

Supply for different channels:
Enables the 16V supply per 2 channels. When some input pins are not used, it is recommended to disable these inputs to prevent controller pins floating at 16V.

Module status:
The status output provides information of the actual state per 2 channels:

0x00 all channels are supplied no problems.
0x01Channel 1 &amp; 2 over current detected and supply disconnected.
0x02Channel 3 &amp; 4 over current detected and supply disconnected.
0x04Channel 5 &amp; 6 over current detected and supply disconnected.
0x08Channel 7 &amp; 8 over current detected and supply disconnected.
0x10Channel 9 &amp; 10 over current detected and supply disconnected.
</Description>
      <Initialization>% array with module slot infos
moduleSlotInfoStrings = {	&apos;Module slot 1&apos;,  ...\
							&apos;Module slot 2&apos;,  ...\
							&apos;Module slot 3&apos;,  ...\
							&apos;Module slot 4&apos;,  ...\
							&apos;Module slot 5&apos;,  ...\
							&apos;Module slot 6&apos;,  ...\
							&apos;Module slot 7&apos;,  ...\
							&apos;Module slot 8&apos;};

% construct the module slot info string
moduleSlotInfoStr = moduleSlotInfoStrings{moduleSlot};

if(moduleSlot == 1 || moduleSlot == 2)
connectorId = &apos;A&apos;;
elseif(moduleSlot == 3 || moduleSlot == 4)
connectorId = &apos;B&apos;;
elseif(moduleSlot == 5 || moduleSlot == 6)
connectorId = &apos;D&apos;;
else
connectorId = &apos;E&apos;;
end

if(ContrType == 1) % Moduline IV
	if(moduleSlot == 1 || moduleSlot == 3 || moduleSlot == 5 || moduleSlot == 7)
		pin1Id = &apos;Pin 7&apos;;
		pin2Id = &apos;Pin 13&apos;;
		pin3Id = &apos;Pin 19&apos;;
		pin4Id = &apos;Pin 6&apos;;
		pin5Id = &apos;Pin 12&apos;;
		pin6Id = &apos;Pin 18&apos;;
		pin7Id = &apos;Pin 5&apos;;
		pin8Id = &apos;Pin 11&apos;;
		pin9Id = &apos;Pin 17&apos;;
		pin10Id = &apos;Pin 4&apos;;
	else
		pin1Id = &apos;Pin 1&apos;;
		pin2Id = &apos;Pin 8&apos;;
		pin3Id = &apos;Pin 14&apos;;
		pin4Id = &apos;Pin 2&apos;;
		pin5Id = &apos;Pin 9&apos;;
		pin6Id = &apos;Pin 15&apos;;
		pin7Id = &apos;Pin 3&apos;;
		pin8Id = &apos;Pin 10&apos;;
		pin9Id = &apos;Pin 16&apos;;
		pin10Id = &apos;Pin 23&apos;;
	end
elseif(ContrType == 2 || ContrType == 3) % Moduline mini / Moduline display
	if(moduleSlot == 1 || moduleSlot == 3)
		pin1Id = &apos;Pin 7&apos;;
		pin2Id = &apos;Pin 15&apos;;
		pin3Id = &apos;Pin 23&apos;;
		pin4Id = &apos;Pin 6&apos;;
		pin5Id = &apos;Pin 14&apos;;
		pin6Id = &apos;Pin 22&apos;;
		pin7Id = &apos;Pin 5&apos;;
		pin8Id = &apos;Pin 13&apos;;
		pin9Id = &apos;Pin 21&apos;;
		pin10Id = &apos;Pin 4&apos;;
	else
		pin1Id = &apos;Pin 1&apos;;
		pin2Id = &apos;Pin 10&apos;;
		pin3Id = &apos;Pin 18&apos;;
		pin4Id = &apos;Pin 2&apos;;
		pin5Id = &apos;Pin 11&apos;;
		pin6Id = &apos;Pin 19&apos;;
		pin7Id = &apos;Pin 3&apos;;
		pin8Id = &apos;Pin 12&apos;;
		pin9Id = &apos;Pin 20&apos;;
		pin10Id = &apos;Pin 29&apos;;
	end
end

% Create resource keywords to be reserved in resource database
modelRTWFields = struct(&apos;moduleSlot&apos;, int2str(moduleSlot),...
						&apos;Sup16ch12&apos;, int2str(Sup16ch12),&apos;Sup16ch34&apos;, int2str(Sup16ch34),&apos;Sup16ch56&apos;, int2str(Sup16ch56),...
                        &apos;Sup16ch78&apos;, int2str(Sup16ch78),&apos;Sup16ch910&apos;, int2str(Sup16ch910));

set_param(gcb, &apos;RTWdata&apos;, modelRTWFields);</Initialization>
      <MaskParameter Name="tsamp" Type="edit" Tunable="off">
        <Prompt>Sample time</Prompt>
        <Value>0.1</Value>
      </MaskParameter>
      <MaskParameter Name="ContrType" Type="popup" Tunable="off">
        <Prompt>Controller type</Prompt>
        <Value>GOcontroll Moduline IV</Value>
        <Callback>msk = Simulink.Mask.get(gcb);
p = msk.getParameter(&apos;moduleSlot&apos;);

func = get_param(gcb,&apos;ContrType&apos;);

if(func == &quot;GOcontroll Moduline IV&quot;)
p.TypeOptions = {&apos;Moduleslot 1&apos;,&apos;Moduleslot 2&apos;,&apos;Moduleslot 3&apos;,&apos;Moduleslot 4&apos;,...
                    &apos;Moduleslot 5&apos;,&apos;Moduleslot 6&apos;,&apos;Moduleslot 7&apos;,&apos;Moduleslot 8&apos;};
elseif (func == &quot;GOcontroll Moduline Mini&quot;)
    p.TypeOptions = {&apos;Moduleslot 1&apos;,&apos;Moduleslot 2&apos;,&apos;Moduleslot 3&apos;,&apos;Moduleslot 4&apos;};
elseif (func == &quot;GOcontroll Moduline Display&quot;)
    p.TypeOptions = {&apos;Moduleslot 1&apos;,&apos;Moduleslot 2&apos;}; 
end</Callback>
        <TypeOptions>
          <Option>GOcontroll Moduline IV</Option>
          <Option>GOcontroll Moduline Mini</Option>
          <Option>GOcontroll Moduline Display</Option>
        </TypeOptions>
      </MaskParameter>
      <MaskParameter Name="moduleSlot" Type="popup" Tunable="off">
        <Prompt>Module slot</Prompt>
        <Value>Moduleslot 1</Value>
        <TypeOptions>
          <Option>Moduleslot 1</Option>
          <Option>Moduleslot 2</Option>
          <Option>Moduleslot 3</Option>
          <Option>Moduleslot 4</Option>
          <Option>Moduleslot 5</Option>
          <Option>Moduleslot 6</Option>
          <Option>Moduleslot 7</Option>
          <Option>Moduleslot 8</Option>
        </TypeOptions>
      </MaskParameter>
      <MaskParameter Name="Sup16ch12" Type="popup" Tunable="off">
        <Prompt>Supply channel 1 and 2</Prompt>
        <Value>Supply enabled</Value>
        <TypeOptions>
          <Option>Supply disabled</Option>
          <Option>Supply enabled</Option>
        </TypeOptions>
      </MaskParameter>
      <MaskParameter Name="Sup16ch34" Type="popup" Tunable="off">
        <Prompt>Supply channel 3 and 4</Prompt>
        <Value>Supply enabled</Value>
        <TypeOptions>
          <Option>Supply disabled</Option>
          <Option>Supply enabled</Option>
        </TypeOptions>
      </MaskParameter>
      <MaskParameter Name="Sup16ch56" Type="popup" Tunable="off">
        <Prompt>Supply channel 5 and 6</Prompt>
        <Value>Supply enabled</Value>
        <TypeOptions>
          <Option>Supply disabled</Option>
          <Option>Supply enabled</Option>
        </TypeOptions>
      </MaskParameter>
      <MaskParameter Name="Sup16ch78" Type="popup" Tunable="off">
        <Prompt>Supply channel 7 and 8</Prompt>
        <Value>Supply enabled</Value>
        <TypeOptions>
          <Option>Supply disabled</Option>
          <Option>Supply enabled</Option>
        </TypeOptions>
      </MaskParameter>
      <MaskParameter Name="Sup16ch910" Type="popup" Tunable="off">
        <Prompt>Supply channel 9 and 10</Prompt>
        <Value>Supply enabled</Value>
        <TypeOptions>
          <Option>Supply disabled</Option>
          <Option>Supply enabled</Option>
        </TypeOptions>
      </MaskParameter>
      <DialogControl Type="Group" Name="DescGroupVar">
        <Prompt>%&lt;MaskType&gt;</Prompt>
        <DialogControl Type="Text" Name="DescTextVar">
          <Prompt>%&lt;MaskDescription&gt;</Prompt>
        </DialogControl>
      </DialogControl>
      <DialogControl Type="Group" Name="ParameterGroupVar">
        <Prompt>Simulink:studio:ToolBarParametersMenu</Prompt>
        <DialogControl Type="Edit" Name="tsamp">
          <Prompt>Sample time</Prompt>
        </DialogControl>
        <DialogControl Type="Popup" Name="ContrType">
          <Prompt>Controller type</Prompt>
          <ControlOptions PromptLocation="left"/>
        </DialogControl>
        <DialogControl Type="Popup" Name="moduleSlot">
          <Prompt>Module slot</Prompt>
          <ControlOptions PromptLocation="left"/>
        </DialogControl>
        <DialogControl Type="Popup" Name="Sup16ch12">
          <Prompt>Supply channel 1 and 2</Prompt>
          <ControlOptions PromptLocation="left"/>
        </DialogControl>
        <DialogControl Type="Popup" Name="Sup16ch34">
          <Prompt>Supply channel 3 and 4</Prompt>
          <ControlOptions PromptLocation="left"/>
        </DialogControl>
        <DialogControl Type="Popup" Name="Sup16ch56">
          <Prompt>Supply channel 5 and 6</Prompt>
          <ControlOptions PromptLocation="left"/>
        </DialogControl>
        <DialogControl Type="Popup" Name="Sup16ch78">
          <Prompt>Supply channel 7 and 8</Prompt>
          <ControlOptions PromptLocation="left"/>
        </DialogControl>
        <DialogControl Type="Popup" Name="Sup16ch910">
          <Prompt>Supply channel 9 and 10</Prompt>
          <ControlOptions PromptLocation="left"/>
        </DialogControl>
      </DialogControl>
    </Mask>
  </Block>
  <Block BlockType="M-S-Function" Name="Reset Puls Counter (6 channel)" SID="4110">
    <PortCounts in="2"/>
    <P Name="Position">[205, 415, 390, 470]</P>
    <P Name="ZOrder">9</P>
    <P Name="BackgroundColor">[1.000000, 0.666667, 0.000000]</P>
    <List ListType="RTWdata">
      <P Name="moduleSlot">1</P>
      <P Name="contrType">1</P>
      <P Name="channel">1</P>
    </List>
    <P Name="FunctionName">sfcn_gocontroll_input_module_reset</P>
    <P Name="Parameters">tsamp</P>
    <Mask SelfModifiable="on">
      <Type>Reset puls counter</Type>
      <Display RunInitForIconRedraw="on" IconUnits="pixels">fprintf(&apos;Reset Puls Counter\n%s\n%s&apos;, moduleSlotInfoStr, inputChannelInfoStr);
text(2, 6, ert_linux_target_version());</Display>
      <Description>This function block resets the pulscounter from a specified input channel of the input module that is configured as a pulscounter. A trigger on input pin 1 wil set the pulscounter to the value applied on pin 2 </Description>
      <Initialization>% array with module slot infos
moduleSlotInfoStrings = {&apos;Module Slot 1&apos;,  ...\
						 &apos;Module Slot 2&apos;,  ...\
						 &apos;Module Slot 3&apos;,  ...\
						 &apos;Module Slot 4&apos;,  ...\
						 &apos;Module Slot 5&apos;,  ...\
						 &apos;Module Slot 6&apos;,  ...\
						 &apos;Module Slot 7&apos;,  ...\
						 &apos;Module Slot 8&apos;};

channelIDInfoStrings = {	&apos;Input Channel 1&apos;,  ...\
							&apos;Input Channel 2&apos;,  ...\
							&apos;Input Channel 3&apos;,  ...\
							&apos;Input Channel 4&apos;,  ...\
							&apos;Input Channel 5&apos;,  ...\
							&apos;Input Channel 6&apos;,  ...\
							&apos;Input Channel 7&apos;,  ...\
							&apos;Input Channel 8&apos;,  ...\
							&apos;Input Channel 9&apos;,  ...\
							&apos;Input Channel 10&apos;};

% construct the pinID info string
moduleSlotInfoStr = moduleSlotInfoStrings{moduleSlot};
inputChannelInfoStr  = channelIDInfoStrings{channel};

% Create resource keywords to be reserved in resource database
modelRTWFields = struct(&apos;moduleSlot&apos;, int2str(moduleSlot),&apos;contrType&apos;, int2str(contrType),	&apos;channel&apos;, int2str(channel));

set_param(gcb, &apos;RTWdata&apos;, modelRTWFields);</Initialization>
      <MaskParameter Name="tsamp" Type="edit" Tunable="off">
        <Prompt>Sample time</Prompt>
        <Value>-1</Value>
      </MaskParameter>
      <MaskParameter Name="contrType" Type="popup">
        <Prompt>Controller Type</Prompt>
        <Value>GOcontroll Moduline IV</Value>
        <Callback>msk = Simulink.Mask.get(gcb);
p = msk.getParameter(&apos;moduleSlot&apos;);

func = get_param(gcb,&apos;ContrType&apos;);

if(func == &quot;GOcontroll Moduline IV&quot;)
    p.TypeOptions = {&apos;Moduleslot 1&apos;,&apos;Moduleslot 2&apos;,&apos;Moduleslot 3&apos;,&apos;Moduleslot 4&apos;,...
                    &apos;Moduleslot 5&apos;,&apos;Moduleslot 6&apos;,&apos;Moduleslot 7&apos;,&apos;Moduleslot 8&apos;};
elseif (func == &quot;GOcontroll Moduline Mini&quot;)
    p.TypeOptions = {&apos;Moduleslot 1&apos;,&apos;Moduleslot 2&apos;,&apos;Moduleslot 3&apos;,&apos;Moduleslot 4&apos;};   
elseif (func == &quot;GOcontroll Moduline Display&quot;)
    p.TypeOptions = {&apos;Moduleslot 1&apos;,&apos;Moduleslot 2&apos;};   
end

</Callback>
        <TypeOptions>
          <Option>GOcontroll Moduline IV</Option>
          <Option>GOcontroll Moduline Mini</Option>
          <Option>GOcontroll Moduline Display</Option>
        </TypeOptions>
      </MaskParameter>
      <MaskParameter Name="moduleSlot" Type="popup" Tunable="off">
        <Prompt>Module slot</Prompt>
        <Value>Moduleslot 1</Value>
        <TypeOptions>
          <Option>Moduleslot 1</Option>
          <Option>Moduleslot 2</Option>
          <Option>Moduleslot 3</Option>
          <Option>Moduleslot 4</Option>
          <Option>Moduleslot 5</Option>
          <Option>Moduleslot 6</Option>
          <Option>Moduleslot 7</Option>
          <Option>Moduleslot 8</Option>
        </TypeOptions>
      </MaskParameter>
      <MaskParameter Name="channel" Type="popup" Tunable="off">
        <Prompt>Channel</Prompt>
        <Value>Reset pulscounter on channel 1</Value>
        <TypeOptions>
          <Option>Reset pulscounter on channel 1</Option>
          <Option>Reset pulscounter on channel 2</Option>
          <Option>Reset pulscounter on channel 3</Option>
          <Option>Reset pulscounter on channel 4</Option>
          <Option>Reset pulscounter on channel 5</Option>
          <Option>Reset pulscounter on channel 6</Option>
        </TypeOptions>
      </MaskParameter>
      <DialogControl Type="Group" Name="DescGroupVar">
        <Prompt>%&lt;MaskType&gt;</Prompt>
        <DialogControl Type="Text" Name="DescTextVar">
          <Prompt>%&lt;MaskDescription&gt;</Prompt>
        </DialogControl>
      </DialogControl>
      <DialogControl Type="Group" Name="ParameterGroupVar">
        <Prompt>Simulink:studio:ToolBarParametersMenu</Prompt>
        <DialogControl Type="Edit" Name="tsamp">
          <Prompt>Sample time</Prompt>
        </DialogControl>
        <DialogControl Type="Popup" Name="contrType">
          <Prompt>Controller Type</Prompt>
          <ControlOptions PromptLocation="left"/>
        </DialogControl>
        <DialogControl Type="Popup" Name="moduleSlot">
          <Prompt>Module slot</Prompt>
          <ControlOptions PromptLocation="left"/>
        </DialogControl>
        <DialogControl Type="Popup" Name="channel">
          <Prompt>Channel</Prompt>
          <ControlOptions PromptLocation="left"/>
        </DialogControl>
      </DialogControl>
    </Mask>
  </Block>
</System>

__MWOPC_PART_BEGIN__ /simulink/systems/system_3990.xml
<?xml version="1.0" encoding="utf-8"?>
<System>
  <P Name="Location">[3912, 0, 7680, 2160]</P>
  <P Name="PaperType">usletter</P>
  <P Name="PaperUnits">inches</P>
  <P Name="TiledPaperMargins">[0.500000, 0.500000, 0.500000, 0.500000]</P>
  <P Name="ZoomFactor">286</P>
  <Block BlockType="M-S-Function" Name="Output Module (10 channel)" SID="4113">
    <PortCounts in="10"/>
    <P Name="Position">[625, 399, 840, 566]</P>
    <P Name="ZOrder">6</P>
    <P Name="BackgroundColor">[1.000000, 0.666667, 0.000000]</P>
    <List ListType="RTWdata">
      <P Name="moduleSlot">1</P>
      <P Name="C12freq">2</P>
      <P Name="C1func">1</P>
      <P Name="C2func">1</P>
      <P Name="C34freq">2</P>
      <P Name="C3func">1</P>
      <P Name="C4func">1</P>
      <P Name="C56freq">2</P>
      <P Name="C5func">1</P>
      <P Name="C6func">1</P>
      <P Name="C78freq">2</P>
      <P Name="C7func">1</P>
      <P Name="C8func">1</P>
      <P Name="C910freq">2</P>
      <P Name="C9func">1</P>
      <P Name="C10func">1</P>
      <P Name="C1peakDuty">1000</P>
      <P Name="C1peakTime">500</P>
      <P Name="C2peakDuty">1000</P>
      <P Name="C2peakTime">500</P>
      <P Name="C3peakDuty">1000</P>
      <P Name="C3peakTime">500</P>
      <P Name="C4peakDuty">1000</P>
      <P Name="C4peakTime">500</P>
      <P Name="C5peakDuty">1000</P>
      <P Name="C5peakTime">500</P>
      <P Name="C6peakDuty">1000</P>
      <P Name="C6peakTime">500</P>
      <P Name="C7peakDuty">1000</P>
      <P Name="C7peakTime">500</P>
      <P Name="C8peakDuty">1000</P>
      <P Name="C8peakTime">500</P>
      <P Name="C9peakDuty">1000</P>
      <P Name="C9peakTime">500</P>
      <P Name="C10peakDuty">1000</P>
      <P Name="C10peakTime">500</P>
    </List>
    <P Name="FunctionName">sfcn_gocontroll_output_module_10</P>
    <P Name="Parameters">tsamp</P>
    <Mask SelfModifiable="on">
      <Type>10 Channel Output Module</Type>
      <Display RunInitForIconRedraw="on" IconUnits="pixels">fprintf(&apos;10 Channel Output Module\n%s\n\n Controller Connector: %s&apos;, moduleSlotInfoStr,connectorId);%%connectorId
port_label(&apos;input&apos;, 1, pin1Id);
port_label(&apos;input&apos;, 2, pin2Id);
port_label(&apos;input&apos;, 3, pin3Id);
port_label(&apos;input&apos;, 4, pin4Id);
port_label(&apos;input&apos;, 5, pin5Id);
port_label(&apos;input&apos;, 6, pin6Id);
port_label(&apos;input&apos;, 7, pin3Id);
port_label(&apos;input&apos;, 8, pin4Id);
port_label(&apos;input&apos;, 9, pin5Id);
port_label(&apos;input&apos;, 10, pin6Id);
text(2, 6, ert_linux_target_version());</Display>
      <Description>With this function block, you can configure each output of the 6 channel output module (202002xx). During initialization of the controller, the corresponding outputs of the module are set according the settings. During runtime, the value pushed into the block will control the outputs.

Sample time:
Execution frequency from function block. For proper functioning of the output module, us a sampletime of 100 ms or lower.

Module slot:
Sets the location of the module slot where the module is physically plugged into.

Frequency:
In case a duty Cycle is used, select the frequency.

Function select:
Select the desired output configuration for each channel
</Description>
      <Initialization>% array with pinID infos
moduleSlotInfoStrings = {	&apos;Module Slot 1&apos;,  ...\
							&apos;Module Slot 2&apos;,  ...\
							&apos;Module Slot 3&apos;,  ...\
							&apos;Module Slot 4&apos;,  ...\
							&apos;Module Slot 5&apos;,  ...\
							&apos;Module Slot 6&apos;,  ...\
							&apos;Module Slot 7&apos;,  ...\
							&apos;Module Slot 8&apos;};
% construct the pinID info string
moduleSlotInfoStr = moduleSlotInfoStrings{moduleSlot};

if(moduleSlot == 1 || moduleSlot == 2)
	connectorId = &apos;A&apos;;
elseif(moduleSlot == 3 || moduleSlot == 4)
	connectorId = &apos;B&apos;;
elseif(moduleSlot == 5 || moduleSlot == 6)
	connectorId = &apos;D&apos;;
else
	connectorId = &apos;E&apos;;
end

if(ContrType == 1) % Moduline IV
	if(moduleSlot == 1 || moduleSlot == 3 || moduleSlot == 5 || moduleSlot == 7)
		pin1Id = &apos;Pin 13&apos;;
		pin2Id = &apos;Pin 19&apos;;
		pin3Id = &apos;Pin 12&apos;;
		pin4Id = &apos;Pin 18&apos;;
		pin5Id = &apos;Pin 11&apos;;
		pin6Id = &apos;Pin 17&apos;;
		pin7Id = &apos;Pin 25&apos;;
		pin8Id = &apos;Pin 24&apos;;
		pin9Id = &apos;Pin 5&apos;;
		pin10Id = &apos;Pin 4&apos;;
	else
		pin1Id = &apos;Pin 8&apos;;
		pin2Id = &apos;Pin 14&apos;;
		pin3Id = &apos;Pin 9&apos;;
		pin4Id = &apos;Pin 15&apos;;
		pin5Id = &apos;Pin 10&apos;;
		pin6Id = &apos;Pin 16&apos;;
		pin7Id = &apos;Pin 21&apos;;
		pin8Id = &apos;Pin 22&apos;;
		pin9Id = &apos;Pin 3&apos;;
		pin10Id = &apos;Pin 23&apos;;
	end
elseif(ContrType == 2 || ContrType == 3) % Moduline mini / Moduline display
	if(moduleSlot == 1 || moduleSlot == 3)
		pin1Id = &apos;Pin 15&apos;;
		pin2Id = &apos;Pin 23&apos;;
		pin3Id = &apos;Pin 14&apos;;
		pin4Id = &apos;Pin 22&apos;;
		pin5Id = &apos;Pin 13&apos;;
		pin6Id = &apos;Pin 21&apos;;
		pin7Id = &apos;Pin 31&apos;;
		pin8Id = &apos;Pin 30&apos;;
		pin9Id = &apos;Pin 5&apos;;
		pin10Id = &apos;Pin 4&apos;;
	else
		pin1Id = &apos;Pin 10&apos;;
		pin2Id = &apos;Pin 18&apos;;
		pin3Id = &apos;Pin 11&apos;;
		pin4Id = &apos;Pin 19&apos;;
		pin5Id = &apos;Pin 12&apos;;
		pin6Id = &apos;Pin 20&apos;;
		pin7Id = &apos;Pin 27&apos;;
		pin8Id = &apos;Pin 28&apos;;
		pin9Id = &apos;Pin 3&apos;;
		pin10Id = &apos;Pin 29&apos;;
	end
end

% Create resource keywords to be reserved in resource database
modelRTWFields = 	struct(&apos;moduleSlot&apos;, int2str(moduleSlot),	&apos;C12freq&apos;, int2str(C12freq),&apos;C1func&apos;, int2str(C1func),&apos;C2func&apos;, int2str(C2func),...
																&apos;C34freq&apos;, int2str(C34freq),&apos;C3func&apos;, int2str(C3func),&apos;C4func&apos;, int2str(C4func),...
																&apos;C56freq&apos;, int2str(C56freq),&apos;C5func&apos;, int2str(C5func),&apos;C6func&apos;, int2str(C6func),...
																&apos;C78freq&apos;, int2str(C78freq),&apos;C7func&apos;, int2str(C7func),&apos;C8func&apos;, int2str(C8func),...
																&apos;C910freq&apos;, int2str(C910freq),&apos;C9func&apos;, int2str(C9func),&apos;C10func&apos;, int2str(C10func),...
																&apos;C1peakDuty&apos;, int2str(C1peakDuty),&apos;C1peakTime&apos;, int2str(C1peakTime),...
																&apos;C2peakDuty&apos;, int2str(C2peakDuty),&apos;C2peakTime&apos;, int2str(C2peakTime),...
																&apos;C3peakDuty&apos;, int2str(C3peakDuty),&apos;C3peakTime&apos;, int2str(C3peakTime),...
																&apos;C4peakDuty&apos;, int2str(C4peakDuty),&apos;C4peakTime&apos;, int2str(C4peakTime),...
																&apos;C5peakDuty&apos;, int2str(C5peakDuty),&apos;C5peakTime&apos;, int2str(C5peakTime),...
																&apos;C6peakDuty&apos;, int2str(C6peakDuty),&apos;C6peakTime&apos;, int2str(C6peakTime),...
																&apos;C7peakDuty&apos;, int2str(C7peakDuty),&apos;C7peakTime&apos;, int2str(C7peakTime),...
																&apos;C8peakDuty&apos;, int2str(C8peakDuty),&apos;C8peakTime&apos;, int2str(C8peakTime),...
																&apos;C9peakDuty&apos;, int2str(C9peakDuty),&apos;C9peakTime&apos;, int2str(C9peakTime),...
																&apos;C10peakDuty&apos;, int2str(C10peakDuty),&apos;C10peakTime&apos;, int2str(C10peakTime));

set_param(gcb, &apos;RTWdata&apos;, modelRTWFields);</Initialization>
      <MaskParameter Name="tsamp" Type="edit" Tunable="off">
        <Prompt>Sample time</Prompt>
        <Value>0.1</Value>
      </MaskParameter>
      <MaskParameter Name="ContrType" Type="popup">
        <Prompt>Controller type</Prompt>
        <Value>GOcontroll Moduline IV</Value>
        <Callback>msk = Simulink.Mask.get(gcb);
p = msk.getParameter(&apos;moduleSlot&apos;);

func = get_param(gcb,&apos;ContrType&apos;);

if(func == &quot;GOcontroll Moduline IV&quot;)
    p.TypeOptions = {&apos;Moduleslot 1&apos;,&apos;Moduleslot 2&apos;,&apos;Moduleslot 3&apos;,&apos;Moduleslot 4&apos;,...
                    &apos;Moduleslot 5&apos;,&apos;Moduleslot 6&apos;,&apos;Moduleslot 7&apos;,&apos;Moduleslot 8&apos;};
elseif (func == &quot;GOcontroll Moduline Mini&quot;)
    p.TypeOptions = {&apos;Moduleslot 1&apos;,&apos;Moduleslot 2&apos;,&apos;Moduleslot 3&apos;,&apos;Moduleslot 4&apos;}; 
elseif (func == &quot;GOcontroll Moduline Display&quot;)
    p.TypeOptions = {&apos;Moduleslot 1&apos;,&apos;Moduleslot 2&apos;}; 
end</Callback>
        <TypeOptions>
          <Option>GOcontroll Moduline IV</Option>
          <Option>GOcontroll Moduline Mini</Option>
          <Option>GOcontroll Moduline Display</Option>
        </TypeOptions>
      </MaskParameter>
      <MaskParameter Name="moduleSlot" Type="popup" Tunable="off">
        <Prompt>Module slot</Prompt>
        <Value>Moduleslot 1</Value>
        <TypeOptions>
          <Option>Moduleslot 1</Option>
          <Option>Moduleslot 2</Option>
          <Option>Moduleslot 3</Option>
          <Option>Moduleslot 4</Option>
          <Option>Moduleslot 5</Option>
          <Option>Moduleslot 6</Option>
          <Option>Moduleslot 7</Option>
          <Option>Moduleslot 8</Option>
        </TypeOptions>
      </MaskParameter>
      <MaskParameter Name="C12freq" Type="popup">
        <Prompt>Frequency</Prompt>
        <Value>200 Hz</Value>
        <TypeOptions>
          <Option>100 Hz</Option>
          <Option>200 Hz</Option>
          <Option>500 Hz</Option>
          <Option>1 kHz</Option>
        </TypeOptions>
      </MaskParameter>
      <MaskParameter Name="C1func" Type="popup">
        <Prompt>Channel 1 function</Prompt>
        <Value>Disable (output disabled)</Value>
        <Callback>func = get_param(gcb,&apos;C1func&apos;);
p=Simulink.Mask.get(gcb);
a=p.getParameter(&apos;C1peakDuty&apos;);
b=p.getParameter(&apos;C1peakTime&apos;);

if( func == &quot;High side peak and hold (0 - 1000)&quot;)
    a.set(&apos;Visible&apos;,&apos;on&apos;);
    b.set(&apos;Visible&apos;,&apos;on&apos;);
else
    a.set(&apos;Visible&apos;,&apos;off&apos;);
    b.set(&apos;Visible&apos;,&apos;off&apos;);
end</Callback>
        <TypeOptions>
          <Option>Disable (output disabled)</Option>
          <Option>High side switch  dutycycle controlled (0 - 1000)</Option>
          <Option>High side switch On - Off (0 - 1)</Option>
          <Option>High side peak and hold (0 - 1000)</Option>
          <Option>Frequency ouput 0 - 500 Hz (0 - 500)</Option>
        </TypeOptions>
      </MaskParameter>
      <MaskParameter Name="C1peakDuty" Type="edit" Visible="off">
        <Prompt>Peak Duty-Cycle (0-1000)</Prompt>
        <Value>1000</Value>
      </MaskParameter>
      <MaskParameter Name="C1peakTime" Type="edit" Visible="off">
        <Prompt>Peak time (ms)</Prompt>
        <Value>500</Value>
      </MaskParameter>
      <MaskParameter Name="C2func" Type="popup">
        <Prompt>Channel 2 function</Prompt>
        <Value>Disable (output disabled)</Value>
        <Callback>func = get_param(gcb,&apos;C2func&apos;);
p=Simulink.Mask.get(gcb);
a=p.getParameter(&apos;C2peakDuty&apos;);
b=p.getParameter(&apos;C2peakTime&apos;);

if( func == &quot;High side peak and hold (0 - 1000)&quot;)
    a.set(&apos;Visible&apos;,&apos;on&apos;);
    b.set(&apos;Visible&apos;,&apos;on&apos;);
else
    a.set(&apos;Visible&apos;,&apos;off&apos;);
    b.set(&apos;Visible&apos;,&apos;off&apos;);
end</Callback>
        <TypeOptions>
          <Option>Disable (output disabled)</Option>
          <Option>High side switch  dutycycle controlled (0 - 1000)</Option>
          <Option>High side switch On - Off (0 - 1)</Option>
          <Option>High side peak and hold (0 - 1000)</Option>
          <Option>Frequency ouput 0 - 500 Hz (0 - 500)</Option>
        </TypeOptions>
      </MaskParameter>
      <MaskParameter Name="C2peakDuty" Type="edit" Visible="off">
        <Prompt>Peak Duty-Cycle (0-1000)</Prompt>
        <Value>1000</Value>
      </MaskParameter>
      <MaskParameter Name="C2peakTime" Type="edit" Visible="off">
        <Prompt>Peak time (ms)</Prompt>
        <Value>500</Value>
      </MaskParameter>
      <MaskParameter Name="C34freq" Type="popup">
        <Prompt>Frequency</Prompt>
        <Value>200 Hz</Value>
        <TypeOptions>
          <Option>100 Hz</Option>
          <Option>200 Hz</Option>
          <Option>500 Hz</Option>
          <Option>1 kHz</Option>
        </TypeOptions>
      </MaskParameter>
      <MaskParameter Name="C3func" Type="popup">
        <Prompt>Channel 3 function</Prompt>
        <Value>Disable (output disabled)</Value>
        <Callback>func = get_param(gcb,&apos;C3func&apos;);
p=Simulink.Mask.get(gcb);
a=p.getParameter(&apos;C3peakDuty&apos;);
b=p.getParameter(&apos;C3peakTime&apos;);

if( func == &quot;High side peak and hold (0 - 1000)&quot;)
    a.set(&apos;Visible&apos;,&apos;on&apos;);
    b.set(&apos;Visible&apos;,&apos;on&apos;);
else
    a.set(&apos;Visible&apos;,&apos;off&apos;);
    b.set(&apos;Visible&apos;,&apos;off&apos;);
end</Callback>
        <TypeOptions>
          <Option>Disable (output disabled)</Option>
          <Option>High side switch  dutycycle controlled (0 - 1000)</Option>
          <Option>High side switch On - Off (0 - 1)</Option>
          <Option>High side peak and hold (0 - 1000)</Option>
          <Option>Frequency ouput 0 - 500 Hz (0 - 500)</Option>
        </TypeOptions>
      </MaskParameter>
      <MaskParameter Name="C3peakDuty" Type="edit" Visible="off">
        <Prompt>Peak Duty-Cycle (0-1000)</Prompt>
        <Value>1000</Value>
      </MaskParameter>
      <MaskParameter Name="C3peakTime" Type="edit" Visible="off">
        <Prompt>Peak time (ms)</Prompt>
        <Value>500</Value>
      </MaskParameter>
      <MaskParameter Name="C4func" Type="popup">
        <Prompt>Channel 4 function</Prompt>
        <Value>Disable (output disabled)</Value>
        <Callback>func = get_param(gcb,&apos;C4func&apos;);
p=Simulink.Mask.get(gcb);
a=p.getParameter(&apos;C4peakDuty&apos;);
b=p.getParameter(&apos;C4peakTime&apos;);

if( func == &quot;High side peak and hold (0 - 1000)&quot;)
    a.set(&apos;Visible&apos;,&apos;on&apos;);
    b.set(&apos;Visible&apos;,&apos;on&apos;);
else
    a.set(&apos;Visible&apos;,&apos;off&apos;);
    b.set(&apos;Visible&apos;,&apos;off&apos;);
end</Callback>
        <TypeOptions>
          <Option>Disable (output disabled)</Option>
          <Option>High side switch  dutycycle controlled (0 - 1000)</Option>
          <Option>High side switch On - Off (0 - 1)</Option>
          <Option>High side peak and hold (0 - 1000)</Option>
          <Option>Frequency ouput 0 - 500 Hz (0 - 500)</Option>
        </TypeOptions>
      </MaskParameter>
      <MaskParameter Name="C4peakDuty" Type="edit" Visible="off">
        <Prompt>Peak Duty-Cycle (0-1000)</Prompt>
        <Value>1000</Value>
      </MaskParameter>
      <MaskParameter Name="C4peakTime" Type="edit" Visible="off">
        <Prompt>Peak time (ms)</Prompt>
        <Value>500</Value>
      </MaskParameter>
      <MaskParameter Name="C56freq" Type="popup">
        <Prompt>Frequency</Prompt>
        <Value>200 Hz</Value>
        <TypeOptions>
          <Option>100 Hz</Option>
          <Option>200 Hz</Option>
          <Option>500 Hz</Option>
          <Option>1 kHz</Option>
        </TypeOptions>
      </MaskParameter>
      <MaskParameter Name="C5func" Type="popup">
        <Prompt>Channel 5 function</Prompt>
        <Value>Disable (output disabled)</Value>
        <Callback>func = get_param(gcb,&apos;C5func&apos;);
p=Simulink.Mask.get(gcb);
a=p.getParameter(&apos;C5peakDuty&apos;);
b=p.getParameter(&apos;C5peakTime&apos;);

if( func == &quot;High side peak and hold (0 - 1000)&quot;)
    a.set(&apos;Visible&apos;,&apos;on&apos;);
    b.set(&apos;Visible&apos;,&apos;on&apos;);
else
    a.set(&apos;Visible&apos;,&apos;off&apos;);
    b.set(&apos;Visible&apos;,&apos;off&apos;);
end</Callback>
        <TypeOptions>
          <Option>Disable (output disabled)</Option>
          <Option>High side switch  dutycycle controlled (0 - 1000)</Option>
          <Option>High side switch On - Off (0 - 1)</Option>
          <Option>High side peak and hold (0 - 1000)</Option>
          <Option>Frequency ouput 0 - 500 Hz (0 - 500)</Option>
        </TypeOptions>
      </MaskParameter>
      <MaskParameter Name="C5peakDuty" Type="edit" Visible="off">
        <Prompt>Peak Duty-Cycle (0-1000)</Prompt>
        <Value>1000</Value>
      </MaskParameter>
      <MaskParameter Name="C5peakTime" Type="edit" Visible="off">
        <Prompt>Peak time (ms)</Prompt>
        <Value>500</Value>
      </MaskParameter>
      <MaskParameter Name="C6func" Type="popup">
        <Prompt>Channel 6 function</Prompt>
        <Value>Disable (output disabled)</Value>
        <Callback>func = get_param(gcb,&apos;C6func&apos;);
p=Simulink.Mask.get(gcb);
a=p.getParameter(&apos;C6peakDuty&apos;);
b=p.getParameter(&apos;C6peakTime&apos;);

if( func == &quot;High side peak and hold (0 - 1000)&quot;)
    a.set(&apos;Visible&apos;,&apos;on&apos;);
    b.set(&apos;Visible&apos;,&apos;on&apos;);
else
    a.set(&apos;Visible&apos;,&apos;off&apos;);
    b.set(&apos;Visible&apos;,&apos;off&apos;);
end</Callback>
        <TypeOptions>
          <Option>Disable (output disabled)</Option>
          <Option>High side switch  dutycycle controlled (0 - 1000)</Option>
          <Option>High side switch On - Off (0 - 1)</Option>
          <Option>High side peak and hold (0 - 1000)</Option>
          <Option>Frequency ouput 0 - 500 Hz (0 - 500)</Option>
        </TypeOptions>
      </MaskParameter>
      <MaskParameter Name="C6peakDuty" Type="edit" Visible="off">
        <Prompt>Peak Duty-Cycle (0-1000)</Prompt>
        <Value>1000</Value>
      </MaskParameter>
      <MaskParameter Name="C6peakTime" Type="edit" Visible="off">
        <Prompt>Peak time (ms)</Prompt>
        <Value>500</Value>
      </MaskParameter>
      <MaskParameter Name="C78freq" Type="popup">
        <Prompt>Frequency</Prompt>
        <Value>200 Hz</Value>
        <TypeOptions>
          <Option>100 Hz</Option>
          <Option>200 Hz</Option>
          <Option>500 Hz</Option>
          <Option>1 kHz</Option>
        </TypeOptions>
      </MaskParameter>
      <MaskParameter Name="C7func" Type="popup">
        <Prompt>Channel 7 function</Prompt>
        <Value>Disable (output disabled)</Value>
        <Callback>func = get_param(gcb,&apos;C7func&apos;);
p=Simulink.Mask.get(gcb);
a=p.getParameter(&apos;C7peakDuty&apos;);
b=p.getParameter(&apos;C7peakTime&apos;);

if( func == &quot;High side peak and hold (0 - 1000)&quot;)
    a.set(&apos;Visible&apos;,&apos;on&apos;);
    b.set(&apos;Visible&apos;,&apos;on&apos;);
else
    a.set(&apos;Visible&apos;,&apos;off&apos;);
    b.set(&apos;Visible&apos;,&apos;off&apos;);
end</Callback>
        <TypeOptions>
          <Option>Disable (output disabled)</Option>
          <Option>High side switch  dutycycle controlled (0 - 1000)</Option>
          <Option>High side switch On - Off (0 - 1)</Option>
          <Option>High side peak and hold (0 - 1000)</Option>
          <Option>Frequency ouput 0 - 500 Hz (0 - 500)</Option>
        </TypeOptions>
      </MaskParameter>
      <MaskParameter Name="C7peakDuty" Type="edit" Visible="off">
        <Prompt>Peak Duty-Cycle (0-1000)</Prompt>
        <Value>1000</Value>
      </MaskParameter>
      <MaskParameter Name="C7peakTime" Type="edit" Visible="off">
        <Prompt>Peak time (ms)</Prompt>
        <Value>500</Value>
      </MaskParameter>
      <MaskParameter Name="C8func" Type="popup">
        <Prompt>Channel 8 function</Prompt>
        <Value>Disable (output disabled)</Value>
        <Callback>func = get_param(gcb,&apos;C8func&apos;);
p=Simulink.Mask.get(gcb);
a=p.getParameter(&apos;C8peakDuty&apos;);
b=p.getParameter(&apos;C8peakTime&apos;);

if( func == &quot;High side peak and hold (0 - 1000)&quot;)
    a.set(&apos;Visible&apos;,&apos;on&apos;);
    b.set(&apos;Visible&apos;,&apos;on&apos;);
else
    a.set(&apos;Visible&apos;,&apos;off&apos;);
    b.set(&apos;Visible&apos;,&apos;off&apos;);
end</Callback>
        <TypeOptions>
          <Option>Disable (output disabled)</Option>
          <Option>High side switch  dutycycle controlled (0 - 1000)</Option>
          <Option>High side switch On - Off (0 - 1)</Option>
          <Option>High side peak and hold (0 - 1000)</Option>
          <Option>Frequency ouput 0 - 500 Hz (0 - 500)</Option>
        </TypeOptions>
      </MaskParameter>
      <MaskParameter Name="C8peakDuty" Type="edit" Visible="off">
        <Prompt>Peak Duty-Cycle (0-1000)</Prompt>
        <Value>1000</Value>
      </MaskParameter>
      <MaskParameter Name="C8peakTime" Type="edit" Visible="off">
        <Prompt>Peak time (ms)</Prompt>
        <Value>500</Value>
      </MaskParameter>
      <MaskParameter Name="C910freq" Type="popup">
        <Prompt>Frequency</Prompt>
        <Value>200 Hz</Value>
        <TypeOptions>
          <Option>100 Hz</Option>
          <Option>200 Hz</Option>
          <Option>500 Hz</Option>
          <Option>1 kHz</Option>
        </TypeOptions>
      </MaskParameter>
      <MaskParameter Name="C9func" Type="popup">
        <Prompt>Channel 9 function</Prompt>
        <Value>Disable (output disabled)</Value>
        <Callback>func = get_param(gcb,&apos;C9func&apos;);
p=Simulink.Mask.get(gcb);
a=p.getParameter(&apos;C9peakDuty&apos;);
b=p.getParameter(&apos;C9peakTime&apos;);

if( func == &quot;High side peak and hold (0 - 1000)&quot;)
    a.set(&apos;Visible&apos;,&apos;on&apos;);
    b.set(&apos;Visible&apos;,&apos;on&apos;);
else
    a.set(&apos;Visible&apos;,&apos;off&apos;);
    b.set(&apos;Visible&apos;,&apos;off&apos;);
end</Callback>
        <TypeOptions>
          <Option>Disable (output disabled)</Option>
          <Option>High side switch  dutycycle controlled (0 - 1000)</Option>
          <Option>High side switch On - Off (0 - 1)</Option>
          <Option>High side peak and hold (0 - 1000)</Option>
          <Option>Frequency ouput 0 - 500 Hz (0 - 500)</Option>
        </TypeOptions>
      </MaskParameter>
      <MaskParameter Name="C9peakDuty" Type="edit" Visible="off">
        <Prompt>Peak Duty-Cycle (0-1000)</Prompt>
        <Value>1000</Value>
      </MaskParameter>
      <MaskParameter Name="C9peakTime" Type="edit" Visible="off">
        <Prompt>Peak time (ms)</Prompt>
        <Value>500</Value>
      </MaskParameter>
      <MaskParameter Name="C10func" Type="popup">
        <Prompt>Channel 10 function</Prompt>
        <Value>Disable (output disabled)</Value>
        <Callback>func = get_param(gcb,&apos;C10func&apos;);
p=Simulink.Mask.get(gcb);
a=p.getParameter(&apos;C10peakDuty&apos;);
b=p.getParameter(&apos;C10peakTime&apos;);

if( func == &quot;High side peak and hold (0 - 1000)&quot;)
    a.set(&apos;Visible&apos;,&apos;on&apos;);
    b.set(&apos;Visible&apos;,&apos;on&apos;);
else
    a.set(&apos;Visible&apos;,&apos;off&apos;);
    b.set(&apos;Visible&apos;,&apos;off&apos;);
end</Callback>
        <TypeOptions>
          <Option>Disable (output disabled)</Option>
          <Option>High side switch  dutycycle controlled (0 - 1000)</Option>
          <Option>High side switch On - Off (0 - 1)</Option>
          <Option>High side peak and hold (0 - 1000)</Option>
          <Option>Frequency ouput 0 - 500 Hz (0 - 500)</Option>
        </TypeOptions>
      </MaskParameter>
      <MaskParameter Name="C10peakDuty" Type="edit" Visible="off">
        <Prompt>Peak Duty-Cycle (0-1000)</Prompt>
        <Value>1000</Value>
      </MaskParameter>
      <MaskParameter Name="C10peakTime" Type="edit" Visible="off">
        <Prompt>Peak time (ms)</Prompt>
        <Value>500</Value>
      </MaskParameter>
      <DialogControl Type="Group" Name="DescGroupVar">
        <Prompt>%&lt;MaskType&gt;</Prompt>
        <DialogControl Type="Text" Name="DescTextVar">
          <Prompt>%&lt;MaskDescription&gt;</Prompt>
        </DialogControl>
      </DialogControl>
      <DialogControl Type="Group" Name="ParameterGroupVar">
        <Prompt>Simulink:studio:ToolBarParametersMenu</Prompt>
        <DialogControl Type="Edit" Name="tsamp">
          <Prompt>Sample time</Prompt>
        </DialogControl>
        <DialogControl Type="Popup" Name="ContrType">
          <Prompt>Controller type</Prompt>
          <ControlOptions PromptLocation="left"/>
        </DialogControl>
        <DialogControl Type="Popup" Name="moduleSlot">
          <Prompt>Module slot</Prompt>
          <ControlOptions PromptLocation="left"/>
        </DialogControl>
        <DialogControl Type="TabContainer" Name="Container8">
          <DialogControl Type="Tab" Name="Container9">
            <Prompt>Output 1 and 2</Prompt>
            <DialogControl Type="Popup" Name="C12freq">
              <Prompt>Frequency</Prompt>
              <ControlOptions PromptLocation="left"/>
            </DialogControl>
            <DialogControl Type="Popup" Name="C1func">
              <Prompt>Channel 1 function</Prompt>
              <ControlOptions PromptLocation="left"/>
            </DialogControl>
            <DialogControl Type="Edit" Name="C1peakDuty">
              <Prompt>Peak Duty-Cycle (0-1000)</Prompt>
              <ControlOptions PromptLocation="left"/>
            </DialogControl>
            <DialogControl Type="Edit" Name="C1peakTime">
              <Prompt>Peak time (ms)</Prompt>
              <ControlOptions Row="current" PromptLocation="left"/>
            </DialogControl>
            <DialogControl Type="Popup" Name="C2func">
              <Prompt>Channel 2 function</Prompt>
              <ControlOptions PromptLocation="left"/>
            </DialogControl>
            <DialogControl Type="Edit" Name="C2peakDuty">
              <Prompt>Peak Duty-Cycle (0-1000)</Prompt>
              <ControlOptions PromptLocation="left"/>
            </DialogControl>
            <DialogControl Type="Edit" Name="C2peakTime">
              <Prompt>Peak time (ms)</Prompt>
              <ControlOptions Row="current" PromptLocation="left"/>
            </DialogControl>
          </DialogControl>
          <DialogControl Type="Tab" Name="Container12">
            <Prompt>Output 3 and 4</Prompt>
            <DialogControl Type="Popup" Name="C34freq">
              <Prompt>Frequency</Prompt>
              <ControlOptions PromptLocation="left"/>
            </DialogControl>
            <DialogControl Type="Popup" Name="C3func">
              <Prompt>Channel 3 function</Prompt>
              <ControlOptions PromptLocation="left"/>
            </DialogControl>
            <DialogControl Type="Edit" Name="C3peakDuty">
              <Prompt>Peak Duty-Cycle (0-1000)</Prompt>
              <ControlOptions PromptLocation="left"/>
            </DialogControl>
            <DialogControl Type="Edit" Name="C3peakTime">
              <Prompt>Peak time (ms)</Prompt>
              <ControlOptions Row="current" PromptLocation="left"/>
            </DialogControl>
            <DialogControl Type="Popup" Name="C4func">
              <Prompt>Channel 4 function</Prompt>
              <ControlOptions PromptLocation="left"/>
            </DialogControl>
            <DialogControl Type="Edit" Name="C4peakDuty">
              <Prompt>Peak Duty-Cycle (0-1000)</Prompt>
              <ControlOptions PromptLocation="left"/>
            </DialogControl>
            <DialogControl Type="Edit" Name="C4peakTime">
              <Prompt>Peak time (ms)</Prompt>
              <ControlOptions Row="current" PromptLocation="left"/>
            </DialogControl>
          </DialogControl>
          <DialogControl Type="Tab" Name="Container13">
            <Prompt>Output 5 and 6</Prompt>
            <DialogControl Type="Popup" Name="C56freq">
              <Prompt>Frequency</Prompt>
              <ControlOptions PromptLocation="left"/>
            </DialogControl>
            <DialogControl Type="Popup" Name="C5func">
              <Prompt>Channel 5 function</Prompt>
              <ControlOptions PromptLocation="left"/>
            </DialogControl>
            <DialogControl Type="Edit" Name="C5peakDuty">
              <Prompt>Peak Duty-Cycle (0-1000)</Prompt>
              <ControlOptions PromptLocation="left"/>
            </DialogControl>
            <DialogControl Type="Edit" Name="C5peakTime">
              <Prompt>Peak time (ms)</Prompt>
              <ControlOptions Row="current" PromptLocation="left"/>
            </DialogControl>
            <DialogControl Type="Popup" Name="C6func">
              <Prompt>Channel 6 function</Prompt>
              <ControlOptions PromptLocation="left"/>
            </DialogControl>
            <DialogControl Type="Edit" Name="C6peakDuty">
              <Prompt>Peak Duty-Cycle (0-1000)</Prompt>
              <ControlOptions PromptLocation="left"/>
            </DialogControl>
            <DialogControl Type="Edit" Name="C6peakTime">
              <Prompt>Peak time (ms)</Prompt>
              <ControlOptions Row="current" PromptLocation="left"/>
            </DialogControl>
          </DialogControl>
          <DialogControl Type="Tab" Name="Container14">
            <Prompt>Output 7 and 8</Prompt>
            <DialogControl Type="Popup" Name="C78freq">
              <Prompt>Frequency</Prompt>
              <ControlOptions PromptLocation="left"/>
            </DialogControl>
            <DialogControl Type="Popup" Name="C7func">
              <Prompt>Channel 7 function</Prompt>
              <ControlOptions PromptLocation="left"/>
            </DialogControl>
            <DialogControl Type="Edit" Name="C7peakDuty">
              <Prompt>Peak Duty-Cycle (0-1000)</Prompt>
              <ControlOptions PromptLocation="left"/>
            </DialogControl>
            <DialogControl Type="Edit" Name="C7peakTime">
              <Prompt>Peak time (ms)</Prompt>
              <ControlOptions Row="current" PromptLocation="left"/>
            </DialogControl>
            <DialogControl Type="Popup" Name="C8func">
              <Prompt>Channel 8 function</Prompt>
              <ControlOptions PromptLocation="left"/>
            </DialogControl>
            <DialogControl Type="Edit" Name="C8peakDuty">
              <Prompt>Peak Duty-Cycle (0-1000)</Prompt>
              <ControlOptions PromptLocation="left"/>
            </DialogControl>
            <DialogControl Type="Edit" Name="C8peakTime">
              <Prompt>Peak time (ms)</Prompt>
              <ControlOptions Row="current" PromptLocation="left"/>
            </DialogControl>
          </DialogControl>
          <DialogControl Type="Tab" Name="Container15">
            <Prompt>Output 9 and 10</Prompt>
            <DialogControl Type="Popup" Name="C910freq">
              <Prompt>Frequency</Prompt>
              <ControlOptions PromptLocation="left"/>
            </DialogControl>
            <DialogControl Type="Popup" Name="C9func">
              <Prompt>Channel 9 function</Prompt>
              <ControlOptions PromptLocation="left"/>
            </DialogControl>
            <DialogControl Type="Edit" Name="C9peakDuty">
              <Prompt>Peak Duty-Cycle (0-1000)</Prompt>
              <ControlOptions PromptLocation="left"/>
            </DialogControl>
            <DialogControl Type="Edit" Name="C9peakTime">
              <Prompt>Peak time (ms)</Prompt>
              <ControlOptions Row="current" PromptLocation="left"/>
            </DialogControl>
            <DialogControl Type="Popup" Name="C10func">
              <Prompt>Channel 10 function</Prompt>
              <ControlOptions PromptLocation="left"/>
            </DialogControl>
            <DialogControl Type="Edit" Name="C10peakDuty">
              <Prompt>Peak Duty-Cycle (0-1000)</Prompt>
              <ControlOptions PromptLocation="left"/>
            </DialogControl>
            <DialogControl Type="Edit" Name="C10peakTime">
              <Prompt>Peak time (ms)</Prompt>
              <ControlOptions Row="current" PromptLocation="left"/>
            </DialogControl>
          </DialogControl>
        </DialogControl>
      </DialogControl>
    </Mask>
  </Block>
  <Block BlockType="M-S-Function" Name="Output Module (6 channel)" SID="4112">
    <PortCounts in="6"/>
    <P Name="Position">[625, 275, 840, 380]</P>
    <P Name="ZOrder">5</P>
    <P Name="BackgroundColor">[1.000000, 0.666667, 0.000000]</P>
    <List ListType="RTWdata">
      <P Name="moduleSlot">1</P>
      <P Name="C12freq">2</P>
      <P Name="C1func">1</P>
      <P Name="C2func">1</P>
      <P Name="C34freq">2</P>
      <P Name="C3func">1</P>
      <P Name="C4func">1</P>
      <P Name="C56freq">2</P>
      <P Name="C5func">1</P>
      <P Name="C6func">1</P>
      <P Name="C1cur">4000</P>
      <P Name="C2cur">4000</P>
      <P Name="C3cur">4000</P>
      <P Name="C4cur">4000</P>
      <P Name="C5cur">4000</P>
      <P Name="C6cur">4000</P>
      <P Name="C1peakCurrent">1000</P>
      <P Name="C1peakTime">500</P>
      <P Name="C2peakCurrent">1000</P>
      <P Name="C2peakTime">500</P>
      <P Name="C3peakCurrent">1000</P>
      <P Name="C3peakTime">500</P>
      <P Name="C4peakCurrent">1000</P>
      <P Name="C4peakTime">500</P>
      <P Name="C5peakCurrent">1000</P>
      <P Name="C5peakTime">500</P>
      <P Name="C6peakCurrent">1000</P>
      <P Name="C6peakTime">500</P>
    </List>
    <P Name="FunctionName">sfcn_gocontroll_output_module</P>
    <P Name="Parameters">tsamp</P>
    <Mask SelfModifiable="on">
      <Type>6 Channel Output Module</Type>
      <Display RunInitForIconRedraw="on" IconUnits="pixels">fprintf(&apos;6 Channel Output Module\n%s\n\n Controller Connector: %s&apos;, moduleSlotInfoStr,connectorId);%%connectorId
port_label(&apos;input&apos;, 1, pin1Id);
port_label(&apos;input&apos;, 2, pin2Id);
port_label(&apos;input&apos;, 3, pin3Id);
port_label(&apos;input&apos;, 4, pin4Id);
port_label(&apos;input&apos;, 5, pin5Id);
port_label(&apos;input&apos;, 6, pin6Id);
text(2, 6, ert_linux_target_version());
</Display>
      <Description>With this function block, you can configure each output of the 6 channel output module (202002xx). During initialization of the controller, the corresponding outputs of the module are set according the settings. During runtime, the value pushed into the block will control the outputs.

Sample time:
Execution frequency from function block. For proper functioning of the output module, us a sampletime of 100 ms or lower.

Module slot:
Sets the location of the module slot where the module is physically plugged into.

Frequency:
In case a duty Cycle is used, select the frequency.

Function select:
Select the desired output configuration for each channel
</Description>
      <Initialization>% array with pinID infos
moduleSlotInfoStrings = {	&apos;Module slot 1&apos;,  ...\
							&apos;Module slot 2&apos;,  ...\
							&apos;Module slot 3&apos;,  ...\
							&apos;Module slot 4&apos;,  ...\
							&apos;Module slot 5&apos;,  ...\
							&apos;Module slot 6&apos;,  ...\
							&apos;Module slot 7&apos;,  ...\
							&apos;Module slot 8&apos;};
% construct the pinID info string
moduleSlotInfoStr = moduleSlotInfoStrings{moduleSlot};

if(moduleSlot == 1 || moduleSlot == 2)
	connectorId = &apos;A&apos;;
elseif(moduleSlot == 3 || moduleSlot == 4)
	connectorId = &apos;B&apos;;
elseif(moduleSlot == 5 || moduleSlot == 6)
	connectorId = &apos;D&apos;;
else
	connectorId = &apos;E&apos;;
end

if(ContrType == 1) % Moduline IV
	if(moduleSlot == 1 || moduleSlot == 3 || moduleSlot == 5 || moduleSlot == 7)
		pin1Id = &apos;Pin 13&apos;;
		pin2Id = &apos;Pin 19&apos;;
		pin3Id = &apos;Pin 12&apos;;
		pin4Id = &apos;Pin 18&apos;;
		pin5Id = &apos;Pin 11&apos;;
		pin6Id = &apos;Pin 17&apos;;
	else
		pin1Id = &apos;Pin 8&apos;;
		pin2Id = &apos;Pin 14&apos;;
		pin3Id = &apos;Pin 9&apos;;
		pin4Id = &apos;Pin 15&apos;;
		pin5Id = &apos;Pin 10&apos;;
		pin6Id = &apos;Pin 16&apos;;
	end
elseif(ContrType == 2 || ContrType == 3) % Moduline mini / Moduline Display
	if(moduleSlot == 1 || moduleSlot == 3)
		pin1Id = &apos;Pin 15&apos;;
		pin2Id = &apos;Pin 23&apos;;
		pin3Id = &apos;Pin 14&apos;;
		pin4Id = &apos;Pin 22&apos;;
		pin5Id = &apos;Pin 13&apos;;
		pin6Id = &apos;Pin 21&apos;;
	else
		pin1Id = &apos;Pin 10&apos;;
		pin2Id = &apos;Pin 18&apos;;
		pin3Id = &apos;Pin 11&apos;;
		pin4Id = &apos;Pin 19&apos;;
		pin5Id = &apos;Pin 12&apos;;
		pin6Id = &apos;Pin 20&apos;;
	end
end

% Create resource keywords to be reserved in resource database
modelRTWFields = 	struct(&apos;moduleSlot&apos;, int2str(moduleSlot),	&apos;C12freq&apos;, int2str(C12freq),...
																&apos;C1func&apos;, int2str(C1func),&apos;C2func&apos;, int2str(C2func),...
																&apos;C34freq&apos;, int2str(C34freq),...
																&apos;C3func&apos;, int2str(C3func),&apos;C4func&apos;, int2str(C4func),...
																&apos;C56freq&apos;, int2str(C56freq),...
																&apos;C5func&apos;, int2str(C5func),&apos;C6func&apos;, int2str(C6func),...
																&apos;C1cur&apos;, int2str(C1cur),&apos;C2cur&apos;, int2str(C2cur),...
																&apos;C3cur&apos;, int2str(C3cur),&apos;C4cur&apos;, int2str(C4cur),...
																&apos;C5cur&apos;, int2str(C5cur),&apos;C6cur&apos;, int2str(C6cur),...
																&apos;C1peakCurrent&apos;, int2str(C1peakCurrent),&apos;C1peakTime&apos;, int2str(C1peakTime),...
																&apos;C2peakCurrent&apos;, int2str(C2peakCurrent),&apos;C2peakTime&apos;, int2str(C2peakTime),...
																&apos;C3peakCurrent&apos;, int2str(C3peakCurrent),&apos;C3peakTime&apos;, int2str(C3peakTime),...
																&apos;C4peakCurrent&apos;, int2str(C4peakCurrent),&apos;C4peakTime&apos;, int2str(C4peakTime),...
																&apos;C5peakCurrent&apos;, int2str(C5peakCurrent),&apos;C5peakTime&apos;, int2str(C5peakTime),...
																&apos;C6peakCurrent&apos;, int2str(C6peakCurrent),&apos;C6peakTime&apos;, int2str(C6peakTime));

set_param(gcb, &apos;RTWdata&apos;, modelRTWFields);</Initialization>
      <MaskParameter Name="tsamp" Type="edit" Tunable="off">
        <Prompt>Sample time</Prompt>
        <Value>0.1</Value>
      </MaskParameter>
      <MaskParameter Name="ContrType" Type="popup" Tunable="off">
        <Prompt>Controller Type</Prompt>
        <Value>GOcontroll Moduline IV</Value>
        <Callback>msk = Simulink.Mask.get(gcb);
p = msk.getParameter(&apos;moduleSlot&apos;);

func = get_param(gcb,&apos;ContrType&apos;);

if(func == &quot;GOcontroll Moduline IV&quot;)
    p.TypeOptions = {&apos;Moduleslot 1&apos;,&apos;Moduleslot 2&apos;,&apos;Moduleslot 3&apos;,&apos;Moduleslot 4&apos;,...
                    &apos;Moduleslot 5&apos;,&apos;Moduleslot 6&apos;,&apos;Moduleslot 7&apos;,&apos;Moduleslot 8&apos;};
elseif(func == &quot;GOcontroll Moduline Mini&quot;)
    p.TypeOptions = {&apos;Moduleslot 1&apos;,&apos;Moduleslot 2&apos;,&apos;Moduleslot 3&apos;,&apos;Moduleslot 4&apos;};
elseif (func == &quot;GOcontroll Moduline Display&quot;)
    p.TypeOptions = {&apos;Moduleslot 1&apos;,&apos;Moduleslot 2&apos;};   
end
 
</Callback>
        <TypeOptions>
          <Option>GOcontroll Moduline IV</Option>
          <Option>GOcontroll Moduline Mini</Option>
          <Option>GOcontroll Moduline Display</Option>
        </TypeOptions>
      </MaskParameter>
      <MaskParameter Name="moduleSlot" Type="popup" Tunable="off">
        <Prompt>Module slot</Prompt>
        <Value>Moduleslot 1</Value>
        <TypeOptions>
          <Option>Moduleslot 1</Option>
          <Option>Moduleslot 2</Option>
          <Option>Moduleslot 3</Option>
          <Option>Moduleslot 4</Option>
          <Option>Moduleslot 5</Option>
          <Option>Moduleslot 6</Option>
          <Option>Moduleslot 7</Option>
          <Option>Moduleslot 8</Option>
        </TypeOptions>
      </MaskParameter>
      <MaskParameter Name="C12freq" Type="popup">
        <Prompt>Frequency</Prompt>
        <Value>200 Hz</Value>
        <TypeOptions>
          <Option>100 Hz</Option>
          <Option>200 Hz</Option>
          <Option>500 Hz</Option>
          <Option>1 kHz</Option>
          <Option>2 kHz</Option>
          <Option>5 kHz</Option>
          <Option>10 kHz</Option>
        </TypeOptions>
      </MaskParameter>
      <MaskParameter Name="C1func" Type="popup">
        <Prompt>Channel 1 function</Prompt>
        <Value>Disable (output disabled)</Value>
        <Callback>func = get_param(gcb,&apos;C1func&apos;);
p=Simulink.Mask.get(gcb);
a=p.getParameter(&apos;C1peakCurrent&apos;);
b=p.getParameter(&apos;C1peakTime&apos;);
c=p.getParameter(&apos;C1cur&apos;);

if( func == &quot;Peak and hold current mode (Half Bridge)&quot;)
a.set(&apos;Visible&apos;,&apos;on&apos;);
b.set(&apos;Visible&apos;,&apos;on&apos;);
else
a.set(&apos;Visible&apos;,&apos;off&apos;);
b.set(&apos;Visible&apos;,&apos;off&apos;);
end

if( func == &quot;Disable (output disabled)&quot;)
c.set(&apos;Enabled&apos;,&apos;off&apos;);
else
c.set(&apos;Enabled&apos;,&apos;on&apos;);  
end</Callback>
        <TypeOptions>
          <Option>Disable (output disabled)</Option>
          <Option>Half Bridge dutycycle controlled (0 - 1000)</Option>
          <Option>Low side switch  dutycycle controlled (0 - 1000)</Option>
          <Option>High side switch  dutycycle controlled (0 - 1000)</Option>
          <Option>Low side switch On - Off (0 - 1)</Option>
          <Option>High side switch On - Off (0 - 1)</Option>
          <Option>Peak and hold current mode (Half Bridge)</Option>
          <Option>Frequency output 0 - 500 Hz (0-500)</Option>
        </TypeOptions>
      </MaskParameter>
      <MaskParameter Name="C1cur" Type="edit" Enabled="off">
        <Prompt>Channel 1 Imax [mA]</Prompt>
        <Value>4000</Value>
      </MaskParameter>
      <MaskParameter Name="C1peakCurrent" Type="edit" Visible="off">
        <Prompt>Peak Current [mA]</Prompt>
        <Value>1000</Value>
      </MaskParameter>
      <MaskParameter Name="C1peakTime" Type="edit" Visible="off">
        <Prompt>Peak time [ms]</Prompt>
        <Value>500</Value>
      </MaskParameter>
      <MaskParameter Name="C2func" Type="popup">
        <Prompt>Channel 2 function</Prompt>
        <Value>Disable (output disabled)</Value>
        <Callback>func = get_param(gcb,&apos;C2func&apos;);
p=Simulink.Mask.get(gcb);
a=p.getParameter(&apos;C2peakCurrent&apos;);
b=p.getParameter(&apos;C2peakTime&apos;);
c=p.getParameter(&apos;C2cur&apos;);

if( func == &quot;Peak and hold current mode (Half Bridge)&quot;)
a.set(&apos;Visible&apos;,&apos;on&apos;);
b.set(&apos;Visible&apos;,&apos;on&apos;);
else
a.set(&apos;Visible&apos;,&apos;off&apos;);
b.set(&apos;Visible&apos;,&apos;off&apos;);
end

if( func == &quot;Disable (output disabled)&quot;)
c.set(&apos;Enabled&apos;,&apos;off&apos;);
else
c.set(&apos;Enabled&apos;,&apos;on&apos;);  
end</Callback>
        <TypeOptions>
          <Option>Disable (output disabled)</Option>
          <Option>Half Bridge dutycycle controlled (0 - 1000)</Option>
          <Option>Low side switch  dutycycle controlled (0 - 1000)</Option>
          <Option>High side switch  dutycycle controlled (0 - 1000)</Option>
          <Option>Low side switch On - Off (0 - 1)</Option>
          <Option>High side switch On - Off (0 - 1)</Option>
          <Option>Peak and hold current mode (Half Bridge)</Option>
          <Option>Frequency output 0 - 500 Hz (0-500)</Option>
        </TypeOptions>
      </MaskParameter>
      <MaskParameter Name="C2cur" Type="edit" Enabled="off">
        <Prompt>Channel 2 Imax [mA]</Prompt>
        <Value>4000</Value>
      </MaskParameter>
      <MaskParameter Name="C2peakCurrent" Type="edit" Visible="off">
        <Prompt>Peak Current [mA]</Prompt>
        <Value>1000</Value>
      </MaskParameter>
      <MaskParameter Name="C2peakTime" Type="edit" Visible="off">
        <Prompt>Peak time [ms]</Prompt>
        <Value>500</Value>
      </MaskParameter>
      <MaskParameter Name="C34freq" Type="popup">
        <Prompt>Frequency</Prompt>
        <Value>200 Hz</Value>
        <TypeOptions>
          <Option>100 Hz</Option>
          <Option>200 Hz</Option>
          <Option>500 Hz</Option>
          <Option>1 kHz</Option>
          <Option>2 kHz</Option>
          <Option>5 kHz</Option>
          <Option>10 kHz</Option>
        </TypeOptions>
      </MaskParameter>
      <MaskParameter Name="C3func" Type="popup">
        <Prompt>Channel 3 function</Prompt>
        <Value>Disable (output disabled)</Value>
        <Callback>func = get_param(gcb,&apos;C3func&apos;);
p=Simulink.Mask.get(gcb);
a=p.getParameter(&apos;C3peakCurrent&apos;);
b=p.getParameter(&apos;C3peakTime&apos;);
c=p.getParameter(&apos;C3cur&apos;);

if( func == &quot;Peak and hold current mode (Half Bridge)&quot;)
a.set(&apos;Visible&apos;,&apos;on&apos;);
b.set(&apos;Visible&apos;,&apos;on&apos;);
else
a.set(&apos;Visible&apos;,&apos;off&apos;);
b.set(&apos;Visible&apos;,&apos;off&apos;);
end

if( func == &quot;Disable (output disabled)&quot;)
c.set(&apos;Enabled&apos;,&apos;off&apos;);
else
c.set(&apos;Enabled&apos;,&apos;on&apos;);  
end</Callback>
        <TypeOptions>
          <Option>Disable (output disabled)</Option>
          <Option>Half Bridge dutycycle controlled (0 - 1000)</Option>
          <Option>Low side switch  dutycycle controlled (0 - 1000)</Option>
          <Option>High side switch  dutycycle controlled (0 - 1000)</Option>
          <Option>Low side switch On - Off (0 - 1)</Option>
          <Option>High side switch On - Off (0 - 1)</Option>
          <Option>Peak and hold current mode (Half Bridge)</Option>
          <Option>Frequency output 0 - 500 Hz (0-500)</Option>
        </TypeOptions>
      </MaskParameter>
      <MaskParameter Name="C3cur" Type="edit" Enabled="off">
        <Prompt>Channel 3 Imax [mA]</Prompt>
        <Value>4000</Value>
      </MaskParameter>
      <MaskParameter Name="C3peakCurrent" Type="edit" Visible="off">
        <Prompt>Peak Current [mA]</Prompt>
        <Value>1000</Value>
      </MaskParameter>
      <MaskParameter Name="C3peakTime" Type="edit" Visible="off">
        <Prompt>Peak time [ms]</Prompt>
        <Value>500</Value>
      </MaskParameter>
      <MaskParameter Name="C4func" Type="popup">
        <Prompt>Channel 4 function</Prompt>
        <Value>Disable (output disabled)</Value>
        <Callback>func = get_param(gcb,&apos;C4func&apos;);
p=Simulink.Mask.get(gcb);
a=p.getParameter(&apos;C4peakCurrent&apos;);
b=p.getParameter(&apos;C4peakTime&apos;);
c=p.getParameter(&apos;C4cur&apos;);

if( func == &quot;Peak and hold current mode (Half Bridge)&quot;)
a.set(&apos;Visible&apos;,&apos;on&apos;);
b.set(&apos;Visible&apos;,&apos;on&apos;);
else
a.set(&apos;Visible&apos;,&apos;off&apos;);
b.set(&apos;Visible&apos;,&apos;off&apos;);
end

if( func == &quot;Disable (output disabled)&quot;)
c.set(&apos;Enabled&apos;,&apos;off&apos;);
else
c.set(&apos;Enabled&apos;,&apos;on&apos;);  
end</Callback>
        <TypeOptions>
          <Option>Disable (output disabled)</Option>
          <Option>Half Bridge dutycycle controlled (0 - 1000)</Option>
          <Option>Low side switch  dutycycle controlled (0 - 1000)</Option>
          <Option>High side switch  dutycycle controlled (0 - 1000)</Option>
          <Option>Low side switch On - Off (0 - 1)</Option>
          <Option>High side switch On - Off (0 - 1)</Option>
          <Option>Peak and hold current mode (Half Bridge)</Option>
          <Option>Frequency output 0 - 500 Hz (0-500)</Option>
        </TypeOptions>
      </MaskParameter>
      <MaskParameter Name="C4cur" Type="edit" Enabled="off">
        <Prompt>Channel 4 Imax [mA]</Prompt>
        <Value>4000</Value>
      </MaskParameter>
      <MaskParameter Name="C4peakCurrent" Type="edit" Visible="off">
        <Prompt>Peak Current [mA]</Prompt>
        <Value>1000</Value>
      </MaskParameter>
      <MaskParameter Name="C4peakTime" Type="edit" Visible="off">
        <Prompt>Peak time [ms]</Prompt>
        <Value>500</Value>
      </MaskParameter>
      <MaskParameter Name="C56freq" Type="popup">
        <Prompt>Frequency</Prompt>
        <Value>200 Hz</Value>
        <TypeOptions>
          <Option>100 Hz</Option>
          <Option>200 Hz</Option>
          <Option>500 Hz</Option>
          <Option>1 kHz</Option>
          <Option>2 kHz</Option>
          <Option>5 kHz</Option>
          <Option>10 kHz</Option>
        </TypeOptions>
      </MaskParameter>
      <MaskParameter Name="C5func" Type="popup">
        <Prompt>Channel 5 function</Prompt>
        <Value>Disable (output disabled)</Value>
        <Callback>func = get_param(gcb,&apos;C5func&apos;);
p=Simulink.Mask.get(gcb);
a=p.getParameter(&apos;C5peakCurrent&apos;);
b=p.getParameter(&apos;C5peakTime&apos;);
c=p.getParameter(&apos;C5cur&apos;);

if( func == &quot;Peak and hold current mode (Half Bridge)&quot;)
a.set(&apos;Visible&apos;,&apos;on&apos;);
b.set(&apos;Visible&apos;,&apos;on&apos;);
else
a.set(&apos;Visible&apos;,&apos;off&apos;);
b.set(&apos;Visible&apos;,&apos;off&apos;);
end

if( func == &quot;Disable (output disabled)&quot;)
c.set(&apos;Enabled&apos;,&apos;off&apos;);
else
c.set(&apos;Enabled&apos;,&apos;on&apos;);  
end</Callback>
        <TypeOptions>
          <Option>Disable (output disabled)</Option>
          <Option>Half Bridge dutycycle controlled (0 - 1000)</Option>
          <Option>Low side switch  dutycycle controlled (0 - 1000)</Option>
          <Option>High side switch  dutycycle controlled (0 - 1000)</Option>
          <Option>Low side switch On - Off (0 - 1)</Option>
          <Option>High side switch On - Off (0 - 1)</Option>
          <Option>Peak and hold current mode (Half Bridge)</Option>
          <Option>Frequency output 0 - 500 Hz (0-500)</Option>
        </TypeOptions>
      </MaskParameter>
      <MaskParameter Name="C5cur" Type="edit" Enabled="off">
        <Prompt>Channel 5 Imax [mA]</Prompt>
        <Value>4000</Value>
      </MaskParameter>
      <MaskParameter Name="C5peakCurrent" Type="edit" Visible="off">
        <Prompt>Peak Current [mA]</Prompt>
        <Value>1000</Value>
      </MaskParameter>
      <MaskParameter Name="C5peakTime" Type="edit" Visible="off">
        <Prompt>Peak time [ms]</Prompt>
        <Value>500</Value>
      </MaskParameter>
      <MaskParameter Name="C6func" Type="popup">
        <Prompt>Channel 6 function</Prompt>
        <Value>Disable (output disabled)</Value>
        <Callback>func = get_param(gcb,&apos;C6func&apos;);
p=Simulink.Mask.get(gcb);
a=p.getParameter(&apos;C6peakCurrent&apos;);
b=p.getParameter(&apos;C6peakTime&apos;);
c=p.getParameter(&apos;C6cur&apos;);

if( func == &quot;Peak and hold current mode (Half Bridge)&quot;)
a.set(&apos;Visible&apos;,&apos;on&apos;);
b.set(&apos;Visible&apos;,&apos;on&apos;);
else
a.set(&apos;Visible&apos;,&apos;off&apos;);
b.set(&apos;Visible&apos;,&apos;off&apos;);
end

if( func == &quot;Disable (output disabled)&quot;)
c.set(&apos;Enabled&apos;,&apos;off&apos;);
else
c.set(&apos;Enabled&apos;,&apos;on&apos;);  
end</Callback>
        <TypeOptions>
          <Option>Disable (output disabled)</Option>
          <Option>Half Bridge dutycycle controlled (0 - 1000)</Option>
          <Option>Low side switch  dutycycle controlled (0 - 1000)</Option>
          <Option>High side switch  dutycycle controlled (0 - 1000)</Option>
          <Option>Low side switch On - Off (0 - 1)</Option>
          <Option>High side switch On - Off (0 - 1)</Option>
          <Option>Peak and hold current mode (Half Bridge)</Option>
          <Option>Frequency output 0 - 500 Hz (0-500)</Option>
        </TypeOptions>
      </MaskParameter>
      <MaskParameter Name="C6cur" Type="edit" Enabled="off">
        <Prompt>Channel 6 Imax [mA]</Prompt>
        <Value>4000</Value>
      </MaskParameter>
      <MaskParameter Name="C6peakCurrent" Type="edit" Visible="off">
        <Prompt>Peak Current [mA]</Prompt>
        <Value>1000</Value>
      </MaskParameter>
      <MaskParameter Name="C6peakTime" Type="edit" Visible="off">
        <Prompt>Peak time [ms]</Prompt>
        <Value>500</Value>
      </MaskParameter>
      <DialogControl Type="Group" Name="DescGroupVar">
        <Prompt>%&lt;MaskType&gt;</Prompt>
        <DialogControl Type="Text" Name="DescTextVar">
          <Prompt>%&lt;MaskDescription&gt;</Prompt>
        </DialogControl>
      </DialogControl>
      <DialogControl Type="Group" Name="ParameterGroupVar">
        <Prompt>Simulink:studio:ToolBarParametersMenu</Prompt>
        <DialogControl Type="Edit" Name="tsamp">
          <Prompt>Sample time</Prompt>
        </DialogControl>
        <DialogControl Type="Popup" Name="ContrType">
          <Prompt>Controller Type</Prompt>
          <ControlOptions PromptLocation="left"/>
        </DialogControl>
        <DialogControl Type="Popup" Name="moduleSlot">
          <Prompt>Module slot</Prompt>
          <ControlOptions PromptLocation="left"/>
        </DialogControl>
        <DialogControl Type="TabContainer" Name="Container8">
          <DialogControl Type="Tab" Name="Container9">
            <Prompt>Output 1 and 2</Prompt>
            <DialogControl Type="Popup" Name="C12freq">
              <Prompt>Frequency</Prompt>
              <ControlOptions PromptLocation="left"/>
            </DialogControl>
            <DialogControl Type="Popup" Name="C1func">
              <Prompt>Channel 1 function</Prompt>
              <ControlOptions PromptLocation="left"/>
            </DialogControl>
            <DialogControl Type="Edit" Name="C1cur">
              <Prompt>Channel 1 Imax [mA]</Prompt>
              <ControlOptions PromptLocation="left"/>
            </DialogControl>
            <DialogControl Type="Edit" Name="C1peakCurrent">
              <Prompt>Peak Current [mA]</Prompt>
              <ControlOptions PromptLocation="left"/>
            </DialogControl>
            <DialogControl Type="Edit" Name="C1peakTime">
              <Prompt>Peak time [ms]</Prompt>
              <ControlOptions Row="current" PromptLocation="left"/>
            </DialogControl>
            <DialogControl Type="Popup" Name="C2func">
              <Prompt>Channel 2 function</Prompt>
              <ControlOptions PromptLocation="left"/>
            </DialogControl>
            <DialogControl Type="Edit" Name="C2cur">
              <Prompt>Channel 2 Imax [mA]</Prompt>
              <ControlOptions PromptLocation="left"/>
            </DialogControl>
            <DialogControl Type="Edit" Name="C2peakCurrent">
              <Prompt>Peak Current [mA]</Prompt>
              <ControlOptions PromptLocation="left"/>
            </DialogControl>
            <DialogControl Type="Edit" Name="C2peakTime">
              <Prompt>Peak time [ms]</Prompt>
              <ControlOptions Row="current" PromptLocation="left"/>
            </DialogControl>
          </DialogControl>
          <DialogControl Type="Tab" Name="Container12">
            <Prompt>Output 3 and 4</Prompt>
            <DialogControl Type="Popup" Name="C34freq">
              <Prompt>Frequency</Prompt>
              <ControlOptions PromptLocation="left"/>
            </DialogControl>
            <DialogControl Type="Popup" Name="C3func">
              <Prompt>Channel 3 function</Prompt>
              <ControlOptions PromptLocation="left"/>
            </DialogControl>
            <DialogControl Type="Edit" Name="C3cur">
              <Prompt>Channel 3 Imax [mA]</Prompt>
              <ControlOptions PromptLocation="left"/>
            </DialogControl>
            <DialogControl Type="Edit" Name="C3peakCurrent">
              <Prompt>Peak Current [mA]</Prompt>
              <ControlOptions PromptLocation="left"/>
            </DialogControl>
            <DialogControl Type="Edit" Name="C3peakTime">
              <Prompt>Peak time [ms]</Prompt>
              <ControlOptions Row="current" PromptLocation="left"/>
            </DialogControl>
            <DialogControl Type="Popup" Name="C4func">
              <Prompt>Channel 4 function</Prompt>
              <ControlOptions PromptLocation="left"/>
            </DialogControl>
            <DialogControl Type="Edit" Name="C4cur">
              <Prompt>Channel 4 Imax [mA]</Prompt>
              <ControlOptions PromptLocation="left"/>
            </DialogControl>
            <DialogControl Type="Edit" Name="C4peakCurrent">
              <Prompt>Peak Current [mA]</Prompt>
              <ControlOptions PromptLocation="left"/>
            </DialogControl>
            <DialogControl Type="Edit" Name="C4peakTime">
              <Prompt>Peak time [ms]</Prompt>
              <ControlOptions Row="current" PromptLocation="left"/>
            </DialogControl>
          </DialogControl>
          <DialogControl Type="Tab" Name="Container13">
            <Prompt>Output 5 and 6</Prompt>
            <DialogControl Type="Popup" Name="C56freq">
              <Prompt>Frequency</Prompt>
              <ControlOptions PromptLocation="left"/>
            </DialogControl>
            <DialogControl Type="Popup" Name="C5func">
              <Prompt>Channel 5 function</Prompt>
              <ControlOptions PromptLocation="left"/>
            </DialogControl>
            <DialogControl Type="Edit" Name="C5cur">
              <Prompt>Channel 5 Imax [mA]</Prompt>
              <ControlOptions PromptLocation="left"/>
            </DialogControl>
            <DialogControl Type="Edit" Name="C5peakCurrent">
              <Prompt>Peak Current [mA]</Prompt>
              <ControlOptions PromptLocation="left"/>
            </DialogControl>
            <DialogControl Type="Edit" Name="C5peakTime">
              <Prompt>Peak time [ms]</Prompt>
              <ControlOptions Row="current" PromptLocation="left"/>
            </DialogControl>
            <DialogControl Type="Popup" Name="C6func">
              <Prompt>Channel 6 function</Prompt>
              <ControlOptions PromptLocation="left"/>
            </DialogControl>
            <DialogControl Type="Edit" Name="C6cur">
              <Prompt>Channel 6 Imax [mA]</Prompt>
              <ControlOptions PromptLocation="left"/>
            </DialogControl>
            <DialogControl Type="Edit" Name="C6peakCurrent">
              <Prompt>Peak Current [mA]</Prompt>
              <ControlOptions PromptLocation="left"/>
            </DialogControl>
            <DialogControl Type="Edit" Name="C6peakTime">
              <Prompt>Peak time [ms]</Prompt>
              <ControlOptions Row="current" PromptLocation="left"/>
            </DialogControl>
          </DialogControl>
        </DialogControl>
      </DialogControl>
    </Mask>
  </Block>
  <Block BlockType="M-S-Function" Name="Output Module Monitor (6 channel)" SID="4114">
    <PortCounts out="10"/>
    <P Name="Position">[625, 583, 925, 717]</P>
    <P Name="ZOrder">7</P>
    <P Name="BackgroundColor">[1.000000, 0.666667, 0.000000]</P>
    <List ListType="RTWdata">
      <P Name="moduleSlot">1</P>
      <P Name="C1duty">0</P>
      <P Name="C2duty">0</P>
      <P Name="C3duty">0</P>
      <P Name="C4duty">0</P>
      <P Name="C5duty">0</P>
      <P Name="C6duty">0</P>
    </List>
    <P Name="FunctionName">sfcn_gocontroll_output_module_monitor</P>
    <P Name="Parameters">tsamp, moduleSlot, C1duty, C2duty, C3duty, C4duty, C5duty, C6duty</P>
    <Mask SelfModifiable="on">
      <Type>Output Module Monitor</Type>
      <Display RunInitForIconRedraw="on" IconUnits="pixels">fprintf(&apos;6 Channel Output Module Monitor\n%s\n\n Controller Connector: %s&apos;, moduleSlotInfoStr,connectorId);
port_label(&apos;output&apos;, 1, &apos;Temperature&apos;);
port_label(&apos;output&apos;, 2, &apos;Ground&apos;);
port_label(&apos;output&apos;, 3, &apos;Supply&apos;);
port_label(&apos;output&apos;, 4, &apos;Status&apos;);
pinIdx = 5;
port_label(&apos;output&apos;, pinIdx, strcat(pin1Id, &quot; current&quot;));
pinIdx = pinIdx + 1;
if C1duty == 1
    port_label(&apos;output&apos;, pinIdx, strcat(pin1Id, &quot; duty cycle&quot;));
    pinIdx = pinIdx + 1;
end

port_label(&apos;output&apos;, pinIdx, strcat(pin2Id, &quot; current&quot;));
pinIdx = pinIdx + 1;
if C2duty == 1
    port_label(&apos;output&apos;, pinIdx, strcat(pin2Id, &quot; duty cycle&quot;));
    pinIdx = pinIdx + 1;
end

port_label(&apos;output&apos;, pinIdx, strcat(pin3Id, &quot; current&quot;));
pinIdx = pinIdx + 1;
if C3duty == 1
    port_label(&apos;output&apos;, pinIdx, strcat(pin3Id, &quot; duty cycle&quot;));
    pinIdx = pinIdx + 1;
end

port_label(&apos;output&apos;, pinIdx, strcat(pin4Id, &quot; current&quot;));
pinIdx = pinIdx + 1;
if C4duty == 1
    port_label(&apos;output&apos;, pinIdx, strcat(pin4Id, &quot; duty cycle&quot;));
    pinIdx = pinIdx + 1;
end

port_label(&apos;output&apos;, pinIdx, strcat(pin5Id, &quot; current&quot;));
pinIdx = pinIdx + 1;
if C5duty == 1
    port_label(&apos;output&apos;, pinIdx, strcat(pin5Id, &quot; duty cycle&quot;));
    pinIdx = pinIdx + 1;
end

port_label(&apos;output&apos;, pinIdx, strcat(pin6Id, &quot; current&quot;));
pinIdx = pinIdx + 1;
if C6duty == 1
    port_label(&apos;output&apos;, pinIdx, strcat(pin6Id, &quot; duty cycle&quot;));
    pinIdx = pinIdx + 1;
end

text(2, 6, ert_linux_target_version());</Display>
      <Description>With this function block, you can read parameters from the specified 6 channel output module (202002xx). The block will provide some information about the module such as:

Module temperature:
The temperature in degrees from the output module.

Module ground shift
In case the ground connection of the module is poor, the power ground is shifted. The value gives the ground difference in mV and schould be beneath 50 mV

Module supply voltage
The measured supply voltage of the module in mV. This output only works for hardware version 7 and above, gives off 0 otherwise.

Channel current
The current from each channel is measured and given in mA. If the ouput is configured as high side, the result will be positive. If the ouput is configured as low side, the value will be negative

Channel dutycycle
This output only appears if the corresponding output module block has a channel in peak and hold mode, and it only works for module firmware 2.1.0 and higher for module hardware version 6.
This output can be used to monitor the actual output dutycycle, because the peak and hold function works with current control this value was not known. This value can then be used to perform extra checks on the output in this mode.
</Description>
      <Initialization>% array with pinID infos
moduleSlotInfoStrings = {	&apos;Module slot 1&apos;,  ...\
							&apos;Module slot 2&apos;,  ...\
							&apos;Module slot 3&apos;,  ...\
							&apos;Module slot 4&apos;,  ...\
							&apos;Module slot 5&apos;,  ...\
							&apos;Module slot 6&apos;,  ...\
							&apos;Module slot 7&apos;,  ...\
							&apos;Module slot 8&apos;};
% construct the pinID info string
moduleSlotInfoStr = moduleSlotInfoStrings{moduleSlot};

if(moduleSlot == 1 || moduleSlot == 2)
connectorId = &apos;A&apos;;
elseif(moduleSlot == 3 || moduleSlot == 4)
connectorId = &apos;B&apos;;
elseif(moduleSlot == 5 || moduleSlot == 6)
connectorId = &apos;D&apos;;
else
connectorId = &apos;E&apos;;
end

if(ContrType == 1) % Moduline IV
	if(moduleSlot == 1 || moduleSlot == 3 || moduleSlot == 5 || moduleSlot == 7)
		pin1Id = &apos;Pin 13&apos;;
		pin2Id = &apos;Pin 19&apos;;
		pin3Id = &apos;Pin 12&apos;;
		pin4Id = &apos;Pin 18&apos;;
		pin5Id = &apos;Pin 11&apos;;
		pin6Id = &apos;Pin 17&apos;;
	else
		pin1Id = &apos;Pin 8&apos;;
		pin2Id = &apos;Pin 14&apos;;
		pin3Id = &apos;Pin 9&apos;;
		pin4Id = &apos;Pin 15&apos;;
		pin5Id = &apos;Pin 10&apos;;
		pin6Id = &apos;Pin 16&apos;;
	end
elseif(ContrType == 2 || ContrType == 3) % Moduline mini / Moduline display
	if(moduleSlot == 1 || moduleSlot == 3)
		pin1Id = &apos;Pin 15&apos;;
		pin2Id = &apos;Pin 23&apos;;
		pin3Id = &apos;Pin 14&apos;;
		pin4Id = &apos;Pin 22&apos;;
		pin5Id = &apos;Pin 13&apos;;
		pin6Id = &apos;Pin 17&apos;;
	else
		pin1Id = &apos;Pin 10&apos;;
		pin2Id = &apos;Pin 18&apos;;
		pin3Id = &apos;Pin 11&apos;;
		pin4Id = &apos;Pin 19&apos;;
		pin5Id = &apos;Pin 12&apos;;
		pin6Id = &apos;Pin 20&apos;;
	end
end



% Create resource keywords to be reserved in resource database
modelRTWFields = 	struct(&apos;moduleSlot&apos;, int2str(moduleSlot), &apos;C1duty&apos;, int2str(C1duty), &apos;C2duty&apos;, int2str(C2duty), ...
    &apos;C3duty&apos;, int2str(C3duty), &apos;C4duty&apos;, int2str(C4duty), &apos;C5duty&apos;, int2str(C5duty), &apos;C6duty&apos;, int2str(C6duty));

set_param(gcb, &apos;RTWdata&apos;, modelRTWFields);</Initialization>
      <MaskParameter Name="tsamp" Type="edit" Tunable="off">
        <Prompt>Sample time</Prompt>
        <Value>0.1</Value>
      </MaskParameter>
      <MaskParameter Name="ContrType" Type="popup">
        <Prompt>Controller Type</Prompt>
        <Value>GOcontroll Moduline IV</Value>
        <Callback>msk = Simulink.Mask.get(gcb);
p = msk.getParameter(&apos;moduleSlot&apos;);

func = get_param(gcb,&apos;ContrType&apos;);

if(func == &quot;GOcontroll Moduline IV&quot;)
    p.TypeOptions = {&apos;Moduleslot 1&apos;,&apos;Moduleslot 2&apos;,&apos;Moduleslot 3&apos;,&apos;Moduleslot 4&apos;,...
                    &apos;Moduleslot 5&apos;,&apos;Moduleslot 6&apos;,&apos;Moduleslot 7&apos;,&apos;Moduleslot 8&apos;};             
elseif (func == &quot;GOcontroll Moduline Mini&quot;)
    p.TypeOptions = {&apos;Moduleslot 1&apos;,&apos;Moduleslot 2&apos;,&apos;Moduleslot 3&apos;,&apos;Moduleslot 4&apos;}; 
elseif (func == &quot;GOcontroll Moduline Display&quot;)
    p.TypeOptions = {&apos;Moduleslot 1&apos;,&apos;Moduleslot 2&apos;}; 
end
</Callback>
        <TypeOptions>
          <Option>GOcontroll Moduline IV</Option>
          <Option>GOcontroll Moduline Mini</Option>
          <Option>GOcontroll Moduline Display</Option>
        </TypeOptions>
      </MaskParameter>
      <MaskParameter Name="moduleSlot" Type="popup" Tunable="off">
        <Prompt>Module Slot</Prompt>
        <Value>Moduleslot 1</Value>
        <Callback>moduleSlot = get_param(gcb, &apos;moduleSlot&apos;);
blockPath = split(gcb, &apos;/&apos;);
output_modules = find_system(blockPath(1), &apos;RegExp&apos;, &apos;on&apos;, &apos;FollowLinks&apos;, &apos;on&apos;, &apos;MaskType&apos;, &apos;6 Channel Output Module&apos;);
for idx = 1:length(output_modules)
    if char(get_param(output_modules, &apos;moduleSlot&apos;)) == char(moduleSlot)
        for jdx = 1:6
            if get_param(output_modules, sprintf(&apos;C%dfunc&apos;,jdx)) == &quot;Peak and hold current mode (Half Bridge)&quot;
                set_param(gcb, sprintf(&apos;C%dduty&apos;,jdx), &quot;1&quot;);
            else
                set_param(gcb, sprintf(&apos;C%dduty&apos;,jdx), &quot;0&quot;);
            end
        end
        break
    else
        for jdx = 1:6
            set_param(gcb, sprintf(&apos;C%dduty&apos;,jdx), &quot;0&quot;);
        end
    end
end</Callback>
        <TypeOptions>
          <Option>Moduleslot 1</Option>
          <Option>Moduleslot 2</Option>
          <Option>Moduleslot 3</Option>
          <Option>Moduleslot 4</Option>
          <Option>Moduleslot 5</Option>
          <Option>Moduleslot 6</Option>
          <Option>Moduleslot 7</Option>
          <Option>Moduleslot 8</Option>
        </TypeOptions>
      </MaskParameter>
      <MaskParameter Name="C1duty" Type="edit">
        <Value>0</Value>
      </MaskParameter>
      <MaskParameter Name="C2duty" Type="edit">
        <Value>0</Value>
      </MaskParameter>
      <MaskParameter Name="C3duty" Type="edit">
        <Value>0</Value>
      </MaskParameter>
      <MaskParameter Name="C4duty" Type="edit">
        <Value>0</Value>
      </MaskParameter>
      <MaskParameter Name="C5duty" Type="edit">
        <Value>0</Value>
      </MaskParameter>
      <MaskParameter Name="C6duty" Type="edit">
        <Value>0</Value>
      </MaskParameter>
      <DialogControl Type="Group" Name="DescGroupVar">
        <Prompt>%&lt;MaskType&gt;</Prompt>
        <DialogControl Type="Text" Name="DescTextVar">
          <Prompt>%&lt;MaskDescription&gt;</Prompt>
        </DialogControl>
      </DialogControl>
      <DialogControl Type="Group" Name="ParameterGroupVar">
        <Prompt>Simulink:studio:ToolBarParametersMenu</Prompt>
        <DialogControl Type="Edit" Name="tsamp">
          <Prompt>Sample time</Prompt>
        </DialogControl>
        <DialogControl Type="Popup" Name="ContrType">
          <Prompt>Controller Type</Prompt>
          <ControlOptions PromptLocation="left"/>
        </DialogControl>
        <DialogControl Type="Popup" Name="moduleSlot">
          <Prompt>Module Slot</Prompt>
          <ControlOptions PromptLocation="left"/>
        </DialogControl>
        <DialogControl Type="Group" Name="Container3">
          <ControlOptions Visible="off"/>
          <DialogControl Type="Edit" Name="C1duty">
            <ControlOptions PromptLocation="left"/>
          </DialogControl>
          <DialogControl Type="Edit" Name="C2duty">
            <ControlOptions PromptLocation="left"/>
          </DialogControl>
          <DialogControl Type="Edit" Name="C3duty">
            <ControlOptions PromptLocation="left"/>
          </DialogControl>
          <DialogControl Type="Edit" Name="C4duty">
            <ControlOptions PromptLocation="left"/>
          </DialogControl>
          <DialogControl Type="Edit" Name="C5duty">
            <ControlOptions PromptLocation="left"/>
          </DialogControl>
          <DialogControl Type="Edit" Name="C6duty">
            <ControlOptions PromptLocation="left"/>
          </DialogControl>
        </DialogControl>
      </DialogControl>
    </Mask>
  </Block>
</System>

__MWOPC_PART_BEGIN__ /simulink/systems/system_4007.xml
<?xml version="1.0" encoding="utf-8"?>
<System>
  <P Name="Location">[3912, 0, 7680, 2160]</P>
  <P Name="PaperType">usletter</P>
  <P Name="PaperUnits">inches</P>
  <P Name="TiledPaperMargins">[0.500000, 0.500000, 0.500000, 0.500000]</P>
  <P Name="ZoomFactor">290</P>
  <Block BlockType="SubSystem" Name="Diagnostic to memory" SID="4035">
    <PortCounts/>
    <P Name="Position">[470, 519, 570, 561]</P>
    <P Name="ZOrder">101</P>
    <P Name="BackgroundColor">[1.000000, 0.666667, 0.000000]</P>
    <P Name="UserDataPersistent">on</P>
    <Mask>
      <Display RunInitForIconRedraw="on" IconUnits="pixels">fprintf(&apos;Diagnostic to memory&apos;);</Display>
    </Mask>
    <System Ref="system_4035"/>
  </Block>
  <Block BlockType="SubSystem" Name="Variable to memory" SID="4032">
    <PortCounts/>
    <P Name="Position">[470, 439, 570, 481]</P>
    <P Name="ZOrder">100</P>
    <P Name="BackgroundColor">[1.000000, 0.666667, 0.000000]</P>
    <P Name="UserDataPersistent">on</P>
    <Mask>
      <Display RunInitForIconRedraw="on" IconUnits="pixels">fprintf(&apos;Variable to memory&apos;);</Display>
    </Mask>
    <System Ref="system_4032"/>
  </Block>
</System>

__MWOPC_PART_BEGIN__ /simulink/systems/system_4017.xml
<?xml version="1.0" encoding="utf-8"?>
<System>
  <P Name="Location">[3912, 0, 7680, 2160]</P>
  <P Name="Open">on</P>
  <P Name="PaperType">usletter</P>
  <P Name="PaperUnits">inches</P>
  <P Name="TiledPaperMargins">[0.500000, 0.500000, 0.500000, 0.500000]</P>
  <P Name="ZoomFactor">246</P>
  <Block BlockType="M-S-Function" Name="CPU temperature" SID="4099">
    <PortCounts out="1"/>
    <P Name="Position">[515, 363, 665, 407]</P>
    <P Name="ZOrder">528</P>
    <P Name="BackgroundColor">[1.000000, 0.666667, 0.000000]</P>
    <P Name="FunctionName">sfcn_gocontroll_cpu_temperature</P>
    <P Name="Parameters">tsamp</P>
    <Mask>
      <Type>Get CPU temperature</Type>
      <Display RunInitForIconRedraw="on" IconUnits="pixels">fprintf(&apos;Get CPU temperature&apos;);
text(2, 6, ert_linux_target_version());</Display>
      <Description>Function block to retrieve the CPU temperature from the i.MX core</Description>
      <MaskParameter Name="tsamp" Type="edit" Tunable="off">
        <Prompt>Sample time</Prompt>
        <Value>1</Value>
      </MaskParameter>
      <DialogControl Type="Group" Name="DescGroupVar">
        <Prompt>%&lt;MaskType&gt;</Prompt>
        <DialogControl Type="Text" Name="DescTextVar">
          <Prompt>%&lt;MaskDescription&gt;</Prompt>
        </DialogControl>
      </DialogControl>
      <DialogControl Type="Group" Name="ParameterGroupVar">
        <Prompt>Parameters</Prompt>
        <DialogControl Type="Edit" Name="tsamp">
          <Prompt>Sample time</Prompt>
          <ControlOptions PromptLocation="left"/>
        </DialogControl>
      </DialogControl>
    </Mask>
  </Block>
  <Block BlockType="M-S-Function" Name="Execute shell command" SID="4100">
    <PortCounts in="1"/>
    <P Name="Position">[515, 170, 665, 220]</P>
    <P Name="ZOrder">529</P>
    <P Name="BackgroundColor">[1.000000, 0.666667, 0.000000]</P>
    <List ListType="RTWdata">
      <P Name="command">command</P>
    </List>
    <P Name="FunctionName">sfcn_exec_shell</P>
    <Mask>
      <Type>Execute shell command</Type>
      <Display RunInitForIconRedraw="on" IconUnits="pixels">fprintf(&quot;Execute command:\n%s&quot;,command);
text(2, 6, ert_linux_target_version());</Display>
      <Description>Execute a Linux Shell command when the input is true.

Accepts a Boolean input, use a triggered subsystem to call the function only once on a state change instead of every sample.</Description>
      <Initialization>    if ~ischar(command)
        error(&apos;Given command is not a string&apos;);
    end

    %update RTWdata so WriteRTW gets called again
    modelRTWFields = struct(&apos;command&apos;, command);

    % Insert modelRTWFields in the I/O block S-Function containing the Tag starting with &apos;HANcoder_TARGET_&apos;
    HANcoder_TARGET_DataBlock = find_system(gcb, &apos;RegExp&apos;, &apos;on&apos;, &apos;FollowLinks&apos;, &apos;on&apos;, &apos;LookUnderMasks&apos;, &apos;all&apos;, &apos;BlockType&apos;, &apos;M-S-Function&apos;);
    set_param(HANcoder_TARGET_DataBlock{1}, &apos;RTWdata&apos;, modelRTWFields);</Initialization>
      <MaskParameter Name="command" Type="edit" Tunable="off">
        <Prompt>Command:</Prompt>
        <Value>&apos;command&apos;</Value>
      </MaskParameter>
      <DialogControl Type="Group" Name="DescGroupVar">
        <Prompt>%&lt;MaskType&gt;</Prompt>
        <DialogControl Type="Text" Name="DescTextVar">
          <Prompt>%&lt;MaskDescription&gt;</Prompt>
        </DialogControl>
      </DialogControl>
      <DialogControl Type="Group" Name="ParameterGroupVar">
        <Prompt>Parameters</Prompt>
      </DialogControl>
      <DialogControl Type="Edit" Name="command">
        <Prompt>Command:</Prompt>
        <ControlOptions PromptLocation="left"/>
      </DialogControl>
    </Mask>
  </Block>
  <Block BlockType="M-S-Function" Name="License Key" SID="4101">
    <PortCounts/>
    <P Name="Position">[515, 268, 665, 312]</P>
    <P Name="ZOrder">530</P>
    <P Name="BackgroundColor">[1.000000, 0.666667, 0.000000]</P>
    <List ListType="RTWdata">
      <P Name="key">[1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16]</P>
      <P Name="iv">init vec</P>
      <P Name="license">path/to/license</P>
      <P Name="check_file">path/to/checkfile</P>
      <P Name="key_len">16</P>
    </List>
    <P Name="FunctionName">sfcn_license_key</P>
    <P Name="Parameters">key,iv,license,check_file</P>
    <Mask SelfModifiable="on">
      <Type>Check software license key</Type>
      <Display RunInitForIconRedraw="on" IconUnits="pixels">fprintf(&apos;Check software license&apos;);
text(2, 6, ert_linux_target_version());</Display>
      <Description>Function block to check the controller for a license key upon executing the software.

example lines are literal to what should be in the field

Encryption key:

An array of 16, 24 or 32 bytes, for example:
hex2dec([&quot;0x01&quot;, &quot;0x23&quot;, &quot;0x45&quot;, &quot;0x67&quot;, &quot;0x89&quot;, &quot;0xAB&quot;, &quot;0xCD&quot;, &quot;0xEF&quot;, &quot;0x01&quot;, &quot;0x23&quot;, &quot;0x45&quot;, &quot;0x67&quot;, &quot;0x89&quot;, &quot;0xAB&quot;, &quot;0xCD&quot;, &quot;0xEF&quot;])

bytes can be written in any form accepted by the c compiler: 0x00/0 to 0xFf/255.

Inititialisation vector:

A string of characters (max 16 bytes) example:
&apos;123kdgh34ndfg84&apos;


License file:

A string containing the path to the license file, example:
&apos;/etc/simulink/license&apos;


Check file:

A string containing the path to the license file, example:
&apos;/etc/simulink/check_file&apos;


Method of operation:
This block uses the &lt;a href=&quot;https://github.com/jhjin/OpenAES&quot;&gt;OpenAES library&lt;/a&gt;. It also has a tool that can be used to generate an encryption key and to encrypt a file with said key.

This block will attempt to decrypt the &quot;license file&quot; with the given key and initialisation vector, it will then be compared to the &quot;check file&quot;. If these match the program is allowed to continue.

To make this work effectively it is essential to encrypt a file that is unique for the system and can&apos;t be easily edited. for example &quot;/sys/class/net/eth0/address&quot;.

An important note with using this block is that the bytes of the key are swapped and so need to be entered slightly differently in this block, for example:
key: byte 1 byte 2 byte 3 byte 4 byte 5 byte 6 ...
block: {byte 2, byte 1, byte 4, byte 3, byte 6, byte 5, ...}

If the model terminates with the error:
Error: Failed to decrypt2. return code: ##</Description>
      <Initialization>    if ~(length(key) == 16 || length(key) == 24 || length(key) == 32)
        error(&apos;Encrypion key has an invalid length, it should be 16, 24 or 32 bytes long&apos;);
    end
    for idx = 1:length(key)
        if key(idx) &gt; 255 || key(idx) &lt; 0 || mod(key(idx),1) &gt; 0
            error(&apos;Encryption key does not consist of values that match a uint8&apos;);
        end
    end
    if ~ischar(iv)
        error(&apos;Initialisation vector should be a string&apos;);
    end
    if ~ischar(license)
        error(&apos;Path to the license file should be a string&apos;);
    end
    if ~ischar(check_file)
        error(&apos;Path to the check file should be a string&apos;);
    end

    %update RTWdata here so the WriteRTW callback gets run again
    modelRTWFields = struct(&apos;key&apos;, mat2str(key), &apos;iv&apos;, iv, &apos;license&apos;, license, &apos;check_file&apos;, check_file, &apos;key_len&apos;, num2str(length(key)));

    set_param(gcb, &apos;RTWdata&apos;, modelRTWFields);</Initialization>
      <MaskParameter Name="key" Type="edit" Tunable="off">
        <Prompt>Encryption key</Prompt>
        <Value>[1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16]</Value>
      </MaskParameter>
      <MaskParameter Name="iv" Type="edit" Tunable="off">
        <Prompt>Initialisation vector</Prompt>
        <Value>&apos;init vec&apos;</Value>
      </MaskParameter>
      <MaskParameter Name="license" Type="edit" Tunable="off">
        <Prompt>License file</Prompt>
        <Value>&apos;path/to/license&apos;</Value>
      </MaskParameter>
      <MaskParameter Name="check_file" Type="edit" Tunable="off">
        <Prompt>Check file</Prompt>
        <Value>&apos;path/to/checkfile&apos;</Value>
      </MaskParameter>
      <DialogControl Type="Group" Name="DescGroupVar">
        <Prompt>%&lt;MaskType&gt;</Prompt>
        <DialogControl Type="Text" Name="DescTextVar">
          <Prompt>%&lt;MaskDescription&gt;</Prompt>
        </DialogControl>
      </DialogControl>
      <DialogControl Type="Group" Name="ParameterGroupVar">
        <Prompt>Parameters</Prompt>
      </DialogControl>
      <DialogControl Type="Edit" Name="key">
        <Prompt>Encryption key</Prompt>
        <ControlOptions PromptLocation="left"/>
      </DialogControl>
      <DialogControl Type="Edit" Name="iv">
        <Prompt>Initialisation vector</Prompt>
        <ControlOptions PromptLocation="left"/>
      </DialogControl>
      <DialogControl Type="Edit" Name="license">
        <Prompt>License file</Prompt>
        <ControlOptions PromptLocation="left"/>
      </DialogControl>
      <DialogControl Type="Edit" Name="check_file">
        <Prompt>Check file</Prompt>
        <ControlOptions PromptLocation="left"/>
      </DialogControl>
    </Mask>
  </Block>
  <Block BlockType="M-S-Function" Name="XCP Server" SID="4228">
    <PortCounts/>
    <P Name="Position">[515, 459, 665, 501]</P>
    <P Name="ZOrder">531</P>
    <P Name="BackgroundColor">[1.000000, 0.666667, 0.000000]</P>
    <P Name="Priority">999999</P>
    <List ListType="RTWdata">
      <P Name="server_type">1</P>
    </List>
    <P Name="FunctionName">sfcn_xcp_server</P>
    <Mask SelfModifiable="on">
      <Type>XCP Server</Type>
      <Display IconUnits="pixels">fprintf(&apos;XCP Server\n%s&apos;, get_param(gcb,&apos;server_type&apos;));
text(2, 6, ert_linux_target_version());</Display>
      <Description>Having one block of this type in your model enables the XCP server to use with HANtune</Description>
      <Initialization>    %update RTWdata here so the WriteRTW callback gets run again
    modelRTWFields = struct(&apos;server_type&apos;, int2str(server_type));

    set_param(gcb, &apos;RTWdata&apos;, modelRTWFields);</Initialization>
      <MaskParameter Name="server_type" Type="popup">
        <Prompt>Server type</Prompt>
        <Value>TCP</Value>
        <TypeOptions>
          <Option>TCP</Option>
          <Option>UDP</Option>
        </TypeOptions>
      </MaskParameter>
      <DialogControl Type="Group" Name="DescGroupVar">
        <Prompt>%&lt;MaskType&gt;</Prompt>
        <DialogControl Type="Text" Name="DescTextVar">
          <Prompt>%&lt;MaskDescription&gt;</Prompt>
        </DialogControl>
      </DialogControl>
      <DialogControl Type="Group" Name="ParameterGroupVar">
        <Prompt>Parameters</Prompt>
        <ControlOptions Visible="off"/>
      </DialogControl>
      <DialogControl Type="Popup" Name="server_type">
        <Prompt>Server type</Prompt>
        <ControlOptions PromptLocation="left"/>
      </DialogControl>
    </Mask>
  </Block>
</System>

__MWOPC_PART_BEGIN__ /simulink/systems/system_4026.xml
<?xml version="1.0" encoding="utf-8"?>
<System>
  <P Name="Location">[3912, 0, 7680, 2160]</P>
  <P Name="PaperType">usletter</P>
  <P Name="PaperUnits">inches</P>
  <P Name="TiledPaperMargins">[0.500000, 0.500000, 0.500000, 0.500000]</P>
  <P Name="ZoomFactor">290</P>
  <Block BlockType="M-S-Function" Name="Bridge Module" SID="4105">
    <PortCounts in="2"/>
    <P Name="Position">[640, 355, 885, 430]</P>
    <P Name="ZOrder">5</P>
    <P Name="BackgroundColor">[1.000000, 0.666667, 0.000000]</P>
    <List ListType="RTWdata">
      <P Name="moduleSlot">1</P>
      <P Name="C1func">1</P>
      <P Name="C1freq">1</P>
      <P Name="C2func">1</P>
      <P Name="C2freq">1</P>
    </List>
    <P Name="FunctionName">sfcn_gocontroll_bridge_module</P>
    <P Name="Parameters">tsamp</P>
    <Mask SelfModifiable="on">
      <Type>Bridge Module</Type>
      <Display RunInitForIconRedraw="on" IconUnits="pixels">fprintf(&apos;Bridge Module\n%s\n\n Controller Connector: %s&apos;, moduleSlotInfoStr,connectorId);
port_label(&apos;input&apos;, 1, pin1Id);
port_label(&apos;input&apos;, 2, pin2Id);
text(2, 6, ert_linux_target_version());</Display>
      <Description>With this function block, you can configure each output of the bridge module (202001xx). During initialization of the controller, the corresponding outputs of the module are set according the settings. During runtime, the value pushed into the block will control the outputs.

Module slot:
Sets the location of the module slot where the module is physically 
plugged into.

Channel tabs:
Each ouput has its own configuration tab.

Function select:
Select the desired output configuration.

Frequency:
In case a duty Cycle is used, select the frequency.
</Description>
      <Initialization>    % array with pinID infos
	moduleSlotInfoStrings = {  	&apos;Module Slot 1&apos;,  ...
								&apos;Module Slot 2&apos;,  ...
								&apos;Module Slot 3&apos;,  ...
								&apos;Module Slot 4&apos;,  ...
								&apos;Module Slot 5&apos;,  ...
								&apos;Module Slot 6&apos;,  ...
								&apos;Module Slot 7&apos;,  ...
								&apos;Module Slot 8&apos;};
	% construct the pinID info string
	moduleSlotInfoStr = moduleSlotInfoStrings{moduleSlot};


	if(moduleSlot == 1 || moduleSlot == 2)
		connectorId = &apos;A&apos;;
	elseif(moduleSlot == 3 || moduleSlot == 4)
		connectorId = &apos;B&apos;;
	elseif(moduleSlot == 5 || moduleSlot == 6)
		connectorId = &apos;D&apos;;
	else
		connectorId = &apos;E&apos;;
	end

	if (ContrType == 1) % Moduline IV
		if (mod(moduleSlot,2) == 1) %uneven
			pin1Id = &apos;Pin 11,12,13&apos;;
			pin2Id = &apos;Pin 17,18,19&apos;;
		else
			pin1Id = &apos;Pin 8,9,10&apos;;
			pin2Id = &apos;Pin 14,15,16&apos;;
		end
	elseif(ContrType == 2 || ContrType == 3) % Moduline mini / Moduline display
		if(mod(moduleSlot,2) == 1)
			pin1Id = &apos;Pin 13,14,15&apos;;
			pin2Id = &apos;Pin 21,22,23&apos;;
		else
			pin1Id = &apos;Pin 10,11,12&apos;;
			pin2Id = &apos;Pin 18,19,20&apos;;
		end
    end
    % register rtw data here because the WriteRTW callback doesn&apos;t update
    % properly
    % Create resource keywords to be reserved in resource database
	modelRTWFields = 	struct(&apos;moduleSlot&apos;, int2str(moduleSlot),	&apos;C1func&apos;, int2str(C1func),&apos;C1freq&apos;, int2str(C1freq),...
										&apos;C2func&apos;, int2str(C2func),&apos;C2freq&apos;, int2str(C2freq));

	set_param(gcb, &apos;RTWdata&apos;, modelRTWFields);</Initialization>
      <MaskParameter Name="tsamp" Type="edit" Tunable="off">
        <Prompt>Sample time</Prompt>
        <Value>1</Value>
      </MaskParameter>
      <MaskParameter Name="ContrType" Type="popup" Tunable="off">
        <Prompt>Controller Type</Prompt>
        <Value>GOcontroll Moduline IV</Value>
        <Callback>msk = Simulink.Mask.get(gcb);
p = msk.getParameter(&apos;moduleSlot&apos;);

func = get_param(gcb,&apos;ContrType&apos;);

if(func == &quot;GOcontroll Moduline IV&quot;)
    p.TypeOptions = {&apos;Moduleslot 1&apos;,&apos;Moduleslot 2&apos;,&apos;Moduleslot 3&apos;,&apos;Moduleslot 4&apos;,...
                    &apos;Moduleslot 5&apos;,&apos;Moduleslot 6&apos;,&apos;Moduleslot 7&apos;,&apos;Moduleslot 8&apos;};
elseif(func == &quot;GOcontroll Moduline Mini&quot;)
    p.TypeOptions = {&apos;Moduleslot 1&apos;,&apos;Moduleslot 2&apos;,&apos;Moduleslot 3&apos;,&apos;Moduleslot 4&apos;};
elseif (func == &quot;GOcontroll Moduline Display&quot;)
    p.TypeOptions = {&apos;Moduleslot 1&apos;,&apos;Moduleslot 2&apos;};   
end</Callback>
        <TypeOptions>
          <Option>GOcontroll Moduline IV</Option>
          <Option>GOcontroll Moduline Mini</Option>
          <Option>GOcontroll Moduline Display</Option>
        </TypeOptions>
      </MaskParameter>
      <MaskParameter Name="moduleSlot" Type="popup" Tunable="off">
        <Prompt>Module Slot</Prompt>
        <Value>Moduleslot 1</Value>
        <TypeOptions>
          <Option>Moduleslot 1</Option>
          <Option>Moduleslot 2</Option>
          <Option>Moduleslot 3</Option>
          <Option>Moduleslot 4</Option>
          <Option>Moduleslot 5</Option>
          <Option>Moduleslot 6</Option>
          <Option>Moduleslot 7</Option>
          <Option>Moduleslot 8</Option>
        </TypeOptions>
      </MaskParameter>
      <MaskParameter Name="C1func" Type="popup" Tunable="off">
        <Prompt>Function select</Prompt>
        <Value>Disable (output disabled)</Value>
        <TypeOptions>
          <Option>Disable (output disabled)</Option>
          <Option>Half Bridge dutycycle controlled 0% - 100% duty cycle ( 0 - 1000)</Option>
          <Option>Low side switch  dutycycle controlled 0% - 100% duty cycle (0 - 1000)</Option>
          <Option>High side switch  dutycycle controlled 0% - 100% duty cycle (0 - 1000)</Option>
          <Option>Low side switch On - Off (1-0)</Option>
          <Option>High side switch On - Off (1-0)</Option>
        </TypeOptions>
      </MaskParameter>
      <MaskParameter Name="C1freq" Type="popup" Tunable="off">
        <Prompt>Frequency</Prompt>
        <Value>100 Hz</Value>
        <TypeOptions>
          <Option>100 Hz</Option>
          <Option>200 Hz</Option>
          <Option>500 Hz</Option>
          <Option>1 kHz</Option>
          <Option>2 kHz</Option>
          <Option>5 kHz</Option>
          <Option>10 kHz</Option>
        </TypeOptions>
      </MaskParameter>
      <MaskParameter Name="C2func" Type="popup" Tunable="off">
        <Prompt>Function select</Prompt>
        <Value>Disable (output disabled)</Value>
        <TypeOptions>
          <Option>Disable (output disabled)</Option>
          <Option>Half Bridge dutycycle controlled 0% - 100% duty cycle ( 0 - 1000)</Option>
          <Option>Low side switch  dutycycle controlled 0% - 100% duty cycle (0 - 1000)</Option>
          <Option>High side switch  dutycycle controlled 0% - 100% duty cycle (0 - 1000)</Option>
          <Option>Low side switch On - Off (1-0)</Option>
          <Option>High side switch On - Off (1-0)</Option>
        </TypeOptions>
      </MaskParameter>
      <MaskParameter Name="C2freq" Type="popup" Tunable="off">
        <Prompt>Frequency</Prompt>
        <Value>100 Hz</Value>
        <TypeOptions>
          <Option>100 Hz</Option>
          <Option>200 Hz</Option>
          <Option>500 Hz</Option>
          <Option>1 kHz</Option>
          <Option>2 kHz</Option>
          <Option>5 kHz</Option>
          <Option>10 kHz</Option>
        </TypeOptions>
      </MaskParameter>
      <DialogControl Type="Group" Name="DescGroupVar">
        <Prompt>%&lt;MaskType&gt;</Prompt>
        <DialogControl Type="Text" Name="DescTextVar">
          <Prompt>%&lt;MaskDescription&gt;</Prompt>
        </DialogControl>
      </DialogControl>
      <DialogControl Type="Group" Name="ParameterGroupVar">
        <Prompt>Parameters</Prompt>
        <DialogControl Type="Edit" Name="tsamp">
          <Prompt>Sample time</Prompt>
          <ControlOptions PromptLocation="left"/>
        </DialogControl>
        <DialogControl Type="Popup" Name="ContrType">
          <Prompt>Controller Type</Prompt>
          <ControlOptions PromptLocation="left"/>
        </DialogControl>
        <DialogControl Type="Popup" Name="moduleSlot">
          <Prompt>Module Slot</Prompt>
          <ControlOptions PromptLocation="left"/>
        </DialogControl>
        <DialogControl Type="TabContainer" Name="Container3">
          <DialogControl Type="Tab" Name="Container4">
            <Prompt>Output 1</Prompt>
            <DialogControl Type="Popup" Name="C1func">
              <Prompt>Function select</Prompt>
              <ControlOptions PromptLocation="left"/>
            </DialogControl>
            <DialogControl Type="Popup" Name="C1freq">
              <Prompt>Frequency</Prompt>
              <ControlOptions PromptLocation="left"/>
            </DialogControl>
          </DialogControl>
          <DialogControl Type="Tab" Name="Container5">
            <Prompt>Output 2</Prompt>
            <DialogControl Type="Popup" Name="C2func">
              <Prompt>Function select</Prompt>
              <ControlOptions PromptLocation="left"/>
            </DialogControl>
            <DialogControl Type="Popup" Name="C2freq">
              <Prompt>Frequency</Prompt>
              <ControlOptions PromptLocation="left"/>
            </DialogControl>
          </DialogControl>
        </DialogControl>
      </DialogControl>
    </Mask>
  </Block>
  <Block BlockType="M-S-Function" Name="Bridge Module Monitor" SID="4107">
    <PortCounts out="4"/>
    <P Name="Position">[640, 486, 885, 564]</P>
    <P Name="ZOrder">7</P>
    <P Name="BackgroundColor">[1.000000, 0.666667, 0.000000]</P>
    <List ListType="RTWdata">
      <P Name="moduleSlot">1</P>
    </List>
    <P Name="FunctionName">sfcn_gocontroll_bridge_module_monitor</P>
    <P Name="Parameters">tsamp</P>
    <Mask SelfModifiable="on">
      <Type>Bridge Module Monitor</Type>
      <Display RunInitForIconRedraw="on" IconUnits="pixels">fprintf(&apos;Bridge Module Monitor\n%s\n\n Controller Connector: %s&apos;, moduleSlotInfoStr,connectorId);
port_label(&apos;output&apos;, 1, &apos;Temperature&apos;);
port_label(&apos;output&apos;, 2, &apos;Groundshift&apos;);
port_label(&apos;output&apos;, 3, pin1Id);
port_label(&apos;output&apos;, 4, pin2Id);
text(2, 6, ert_linux_target_version());</Display>
      <Description>With this function block, you can read parameters from the specified bridge module (202001xx). The block will provide some information about the module such as:

Module temperature:
The temperature in degrees from the output module.

Module ground shift
In case the ground connection of the module is poor, the power ground is shifted. The value gives the ground difference in mV and schould be beneath 50 mV

Channel current
Current related output for each output channel
</Description>
      <Initialization>    	% array with pinID infos
	moduleSlotInfoStrings = {  	&apos;Module slot 1&apos;,  ...\
								  &apos;Module slot 2&apos;,  ...\
								  &apos;Module slot 3&apos;,  ...\
								  &apos;Module slot 4&apos;,  ...\
								  &apos;Module slot 5&apos;,  ...\
								  &apos;Module slot 6&apos;,  ...\
								  &apos;Module slot 7&apos;,  ...\
								  &apos;Module slot 8&apos;};
	% construct the pinID info string
	moduleSlotInfoStr = moduleSlotInfoStrings{moduleSlot};

	if(moduleSlot == 1 || moduleSlot == 2)
		connectorId = &apos;A&apos;;
	elseif(moduleSlot == 3 || moduleSlot == 4)
		connectorId = &apos;B&apos;;
	elseif(moduleSlot == 5 || moduleSlot == 6)
		connectorId = &apos;D&apos;;
	else
		connectorId = &apos;E&apos;;
	end

	if(ContrType == 1) % Moduline IV
		if(mod(moduleSlot,2) == 1)
			pin1Id = &apos;Pin 11,12,13&apos;;
			pin2Id = &apos;Pin 17,18,19&apos;;
		else
			pin1Id = &apos;Pin 8,9,10&apos;;
			pin2Id = &apos;Pin 14,15,16&apos;;
		end
	elseif(ContrType == 2 || ContrType == 3) % Moduline mini / Moduline display
		if(mod(moduleSlot,2) == 1)
			pin1Id = &apos;Pin 13,14,15&apos;;
			pin2Id = &apos;Pin 21,22,23&apos;;
		else
			pin1Id = &apos;Pin 10,11,12&apos;;
			pin2Id = &apos;Pin 18,19,20&apos;;
		end
	end
    % update RTWdata to call WriteRTW again
	modelRTWFields = 	struct(&apos;moduleSlot&apos;, int2str(moduleSlot));

	set_param(gcb, &apos;RTWdata&apos;, modelRTWFields);</Initialization>
      <MaskParameter Name="tsamp" Type="edit" Tunable="off">
        <Prompt>Sample time</Prompt>
        <Value>1</Value>
      </MaskParameter>
      <MaskParameter Name="ContrType" Type="popup" Tunable="off">
        <Prompt>Controller Type</Prompt>
        <Value>GOcontroll Moduline IV</Value>
        <Callback>    msk = Simulink.Mask.get(gcb);
    p = msk.getParameter(&apos;moduleSlot&apos;);
    func = get_param(gcb,&apos;ContrType&apos;);
    if(func == &quot;GOcontroll Moduline IV&quot;)
        p.TypeOptions = {&apos;Moduleslot 1&apos;,&apos;Moduleslot 2&apos;,&apos;Moduleslot 3&apos;,&apos;Moduleslot 4&apos;,...
                        &apos;Moduleslot 5&apos;,&apos;Moduleslot 6&apos;,&apos;Moduleslot 7&apos;,&apos;Moduleslot 8&apos;};    
    elseif (func == &quot;GOcontroll Moduline Mini&quot;)
        p.TypeOptions = {&apos;Moduleslot 1&apos;,&apos;Moduleslot 2&apos;,&apos;Moduleslot 3&apos;,&apos;Moduleslot 4&apos;}; 
    elseif (func == &quot;GOcontroll Moduline Display&quot;)
        p.TypeOptions = {&apos;Moduleslot 1&apos;,&apos;Moduleslot 2&apos;}; 
    end</Callback>
        <TypeOptions>
          <Option>GOcontroll Moduline IV</Option>
          <Option>GOcontroll Moduline Mini</Option>
          <Option>GOcontroll Moduline Display</Option>
        </TypeOptions>
      </MaskParameter>
      <MaskParameter Name="moduleSlot" Type="popup" Tunable="off">
        <Prompt>Module Slot</Prompt>
        <Value>Moduleslot 1</Value>
        <TypeOptions>
          <Option>Moduleslot 1</Option>
          <Option>Moduleslot 2</Option>
          <Option>Moduleslot 3</Option>
          <Option>Moduleslot 4</Option>
          <Option>Moduleslot 5</Option>
          <Option>Moduleslot 6</Option>
          <Option>Moduleslot 7</Option>
          <Option>Moduleslot 8</Option>
        </TypeOptions>
      </MaskParameter>
      <DialogControl Type="Group" Name="DescGroupVar">
        <Prompt>%&lt;MaskType&gt;</Prompt>
        <DialogControl Type="Text" Name="DescTextVar">
          <Prompt>%&lt;MaskDescription&gt;</Prompt>
        </DialogControl>
      </DialogControl>
      <DialogControl Type="Group" Name="ParameterGroupVar">
        <Prompt>Parameters</Prompt>
        <DialogControl Type="Edit" Name="tsamp">
          <Prompt>Sample time</Prompt>
          <ControlOptions PromptLocation="left"/>
        </DialogControl>
        <DialogControl Type="Popup" Name="ContrType">
          <Prompt>Controller Type</Prompt>
          <ControlOptions PromptLocation="left"/>
        </DialogControl>
        <DialogControl Type="Popup" Name="moduleSlot">
          <Prompt>Module Slot</Prompt>
          <ControlOptions PromptLocation="left"/>
        </DialogControl>
      </DialogControl>
    </Mask>
  </Block>
</System>

__MWOPC_PART_BEGIN__ /simulink/systems/system_4032.xml
<?xml version="1.0" encoding="utf-8"?>
<System>
  <P Name="Location">[3912, 0, 7680, 2160]</P>
  <P Name="PaperType">usletter</P>
  <P Name="PaperUnits">inches</P>
  <P Name="TiledPaperMargins">[0.500000, 0.500000, 0.500000, 0.500000]</P>
  <P Name="ZoomFactor">580</P>
  <Block BlockType="M-S-Function" Name="Memory read" SID="4104">
    <PortCounts out="1"/>
    <P Name="Position">[485, 585, 640, 635]</P>
    <P Name="ZOrder">101</P>
    <P Name="BackgroundColor">[1.000000, 0.666667, 0.000000]</P>
    <List ListType="RTWdata">
      <P Name="memRead">1</P>
      <P Name="memType">1</P>
      <P Name="key">key</P>
      <P Name="init">0</P>
    </List>
    <P Name="FunctionName">sfcn_memory_emulation_read</P>
    <P Name="Parameters">tsamp</P>
    <Mask>
      <Type>Read value from memory</Type>
      <Display RunInitForIconRedraw="on" IconUnits="pixels">fprintf(&apos;Read from memory\nKey: %s&apos;,key);
text(2, 6, ert_linux_target_version());</Display>
      <Description>This function block reads a value from memory by the specified key. To store a value to memory, use the store to memory function block.</Description>
      <Initialization>    % update RTWdata so WriteRTW gets called when building the model
    modelRTWFields = 	struct( &apos;memRead&apos;, int2str(memRead), &apos;memType&apos;, int2str(memType),&apos;key&apos;, key, &apos;init&apos;, int2str(init));
    
    % Insert modelRTWFields in the I/O block S-Function containing the Tag starting with &apos;HANcoder_TARGET_&apos;
    HANcoder_TARGET_DataBlock = find_system(gcb, &apos;RegExp&apos;, &apos;on&apos;, &apos;FollowLinks&apos;, &apos;on&apos;, &apos;LookUnderMasks&apos;, &apos;all&apos;, &apos;BlockType&apos;, &apos;M-S-Function&apos;);
    set_param(HANcoder_TARGET_DataBlock{1}, &apos;RTWdata&apos;, modelRTWFields);</Initialization>
      <MaskParameter Name="memRead" Type="popup" Tunable="off">
        <Prompt>Memory read</Prompt>
        <Value>Read once during startup</Value>
        <TypeOptions>
          <Option>Read once during startup</Option>
          <Option>Read periodic based on sample time</Option>
        </TypeOptions>
      </MaskParameter>
      <MaskParameter Name="memType" Type="popup" Tunable="off">
        <Prompt>Memory type</Prompt>
        <Value>Persistant Memory (eMMC)</Value>
        <TypeOptions>
          <Option>Persistant Memory (eMMC)</Option>
          <Option>Non-persistant Memory (RAM)</Option>
        </TypeOptions>
      </MaskParameter>
      <MaskParameter Name="tsamp" Type="edit" Tunable="off">
        <Prompt>Sample time</Prompt>
        <Value>1</Value>
      </MaskParameter>
      <MaskParameter Name="key" Type="edit" Evaluate="off" Tunable="off">
        <Prompt>Key</Prompt>
        <Value>key</Value>
      </MaskParameter>
      <MaskParameter Name="init" Type="edit" Tunable="off">
        <Prompt>Initialization value</Prompt>
        <Value>0</Value>
      </MaskParameter>
      <DialogControl Type="Group" Name="DescGroupVar">
        <Prompt>%&lt;MaskType&gt;</Prompt>
        <DialogControl Type="Text" Name="DescTextVar">
          <Prompt>%&lt;MaskDescription&gt;</Prompt>
        </DialogControl>
      </DialogControl>
      <DialogControl Type="Group" Name="ParameterGroupVar">
        <Prompt>Parameters</Prompt>
        <DialogControl Type="Popup" Name="memRead">
          <Prompt>Memory read</Prompt>
          <ControlOptions PromptLocation="left"/>
        </DialogControl>
        <DialogControl Type="Popup" Name="memType">
          <Prompt>Memory type</Prompt>
          <ControlOptions PromptLocation="left"/>
        </DialogControl>
        <DialogControl Type="Edit" Name="tsamp">
          <Prompt>Sample time</Prompt>
          <ControlOptions PromptLocation="left"/>
        </DialogControl>
        <DialogControl Type="Edit" Name="key">
          <Prompt>Key</Prompt>
          <ControlOptions PromptLocation="left"/>
        </DialogControl>
        <DialogControl Type="Edit" Name="init">
          <Prompt>Initialization value</Prompt>
          <ControlOptions PromptLocation="left"/>
        </DialogControl>
      </DialogControl>
    </Mask>
  </Block>
  <Block BlockType="M-S-Function" Name="Memory write" SID="4103">
    <PortCounts in="1"/>
    <P Name="Position">[485, 511, 640, 559]</P>
    <P Name="ZOrder">100</P>
    <P Name="BackgroundColor">[1.000000, 0.666667, 0.000000]</P>
    <List ListType="RTWdata">
      <P Name="key">key</P>
      <P Name="memType">1</P>
    </List>
    <P Name="FunctionName">sfcn_memory_emulation_write</P>
    <P Name="Parameters">tsamp</P>
    <Mask>
      <Type>Store data to memory</Type>
      <Display RunInitForIconRedraw="on" IconUnits="pixels">fprintf(&apos;Store in memory\nKey: %s&apos;,key);
text(2, 6, ert_linux_target_version());</Display>
      <Description>This function block stores a value to the memory with a specified key. To get the stored value from memory, use the read from memory function block and retrieve the value by key</Description>
      <Initialization>    %update RTWdata so WriteRTW param gets called again
    modelRTWFields = struct(&apos;key&apos;, key,  &apos;memType&apos;, int2str(memType));

    % Insert modelRTWFields in the I/O block S-Function containing the Tag starting with &apos;HANcoder_TARGET_&apos;
    HANcoder_TARGET_DataBlock = find_system(gcb, &apos;RegExp&apos;, &apos;on&apos;, &apos;FollowLinks&apos;, &apos;on&apos;, &apos;LookUnderMasks&apos;, &apos;all&apos;, &apos;BlockType&apos;, &apos;M-S-Function&apos;);
    set_param(HANcoder_TARGET_DataBlock{1}, &apos;RTWdata&apos;, modelRTWFields);</Initialization>
      <MaskParameter Name="memType" Type="popup" Tunable="off">
        <Prompt>Memory type</Prompt>
        <Value>Persistant Memory (eMMC)</Value>
        <TypeOptions>
          <Option>Persistant Memory (eMMC)</Option>
          <Option>Non-persistant Memory (RAM)</Option>
        </TypeOptions>
      </MaskParameter>
      <MaskParameter Name="tsamp" Type="edit" Tunable="off">
        <Prompt>Sample time</Prompt>
        <Value>1</Value>
      </MaskParameter>
      <MaskParameter Name="key" Type="edit" Evaluate="off" Tunable="off">
        <Prompt>Key</Prompt>
        <Value>key</Value>
      </MaskParameter>
      <DialogControl Type="Group" Name="DescGroupVar">
        <Prompt>%&lt;MaskType&gt;</Prompt>
        <DialogControl Type="Text" Name="DescTextVar">
          <Prompt>%&lt;MaskDescription&gt;</Prompt>
        </DialogControl>
      </DialogControl>
      <DialogControl Type="Group" Name="ParameterGroupVar">
        <Prompt>Parameters</Prompt>
        <DialogControl Type="Popup" Name="memType">
          <Prompt>Memory type</Prompt>
          <ControlOptions PromptLocation="left"/>
        </DialogControl>
        <DialogControl Type="Edit" Name="tsamp">
          <Prompt>Sample time</Prompt>
          <ControlOptions PromptLocation="left"/>
        </DialogControl>
        <DialogControl Type="Edit" Name="key">
          <Prompt>Key</Prompt>
          <ControlOptions PromptLocation="left"/>
        </DialogControl>
      </DialogControl>
    </Mask>
  </Block>
</System>

__MWOPC_PART_BEGIN__ /simulink/systems/system_4035.xml
<?xml version="1.0" encoding="utf-8"?>
<System>
  <P Name="Location">[3912, 0, 7680, 2160]</P>
  <P Name="PaperType">usletter</P>
  <P Name="PaperUnits">inches</P>
  <P Name="TiledPaperMargins">[0.500000, 0.500000, 0.500000, 0.500000]</P>
  <P Name="ZoomFactor">300</P>
  <Block BlockType="SubSystem" Name="Delete all codes for one group" SID="4121">
    <PortCounts trigger="1"/>
    <P Name="Position">[490, 710, 730, 745]</P>
    <P Name="ZOrder">108</P>
    <P Name="BackgroundColor">[1.000000, 0.666667, 0.000000]</P>
    <P Name="ContentPreviewEnabled">on</P>
    <Mask SelfModifiable="on">
      <Type>Delete diagnostic codes from memory</Type>
      <Display RunInitForIconRedraw="on" IconUnits="pixels">fprintf(&apos;Delete all codes for:\n%s&apos;,diagCodeDescription);
text(2, 6, ert_linux_target_version());</Display>
      <Description>This function block deletes stored codes under the specified diagnostic code type.

Diagnostic code type:
The type defines the severity of the diagnostic code categorie that is deleted.</Description>
      <Initialization>% array with module slot infos
diagCodetrings = {  &apos;Warning&apos;,  ...\
					&apos;Warning with action&apos;,  ...\
					&apos;Error&apos;,  ...\
					&apos;Error with action&apos;,  ...\
					&apos;Fatal Error&apos;};

% construct the diagCodeDescription info string
diagCodeDescription = diagCodetrings{diagType};</Initialization>
      <MaskParameter Name="diagType" Type="promote">
        <Prompt>Diagnostic code type:</Prompt>
        <Value>Warning</Value>
        <TypeOptions>
          <Option>Delete all codes for one group/diagType</Option>
        </TypeOptions>
      </MaskParameter>
      <MaskParameter Name="TriggerType" Type="promote" Evaluate="off" Tunable="off">
        <Prompt>Simulink:blkprm_prompts:TrigPortTrigType</Prompt>
        <Value>rising</Value>
        <TypeOptions>
          <Option>Trigger/TriggerType</Option>
        </TypeOptions>
      </MaskParameter>
      <DialogControl Type="Group" Name="DescGroupVar">
        <Prompt>%&lt;MaskType&gt;</Prompt>
        <DialogControl Type="Text" Name="DescTextVar">
          <Prompt>%&lt;MaskDescription&gt;</Prompt>
        </DialogControl>
      </DialogControl>
      <DialogControl Type="Group" Name="ParameterGroupVar">
        <Prompt>Simulink:studio:ToolBarParametersMenu</Prompt>
        <DialogControl Type="Popup" Name="diagType">
          <Prompt>Diagnostic code type:</Prompt>
          <ControlOptions PromptLocation="left"/>
        </DialogControl>
        <DialogControl Type="Popup" Name="TriggerType">
          <Prompt>Trigger type:</Prompt>
          <ControlOptions PromptLocation="left"/>
        </DialogControl>
      </DialogControl>
    </Mask>
    <System Ref="system_4121"/>
  </Block>
  <Block BlockType="M-S-Function" Name="Number of stored diagnostic codes" SID="4119">
    <PortCounts out="1"/>
    <P Name="Position">[490, 628, 730, 672]</P>
    <P Name="ZOrder">105</P>
    <P Name="BackgroundColor">[1.000000, 0.666667, 0.000000]</P>
    <List ListType="RTWdata">
      <P Name="diagType">1</P>
    </List>
    <P Name="FunctionName">sfcn_memory_diagnostic_nrcodes_read</P>
    <P Name="Parameters">tsamp</P>
    <Mask SelfModifiable="on">
      <Type>Read number of stored codes</Type>
      <Display RunInitForIconRedraw="on" IconUnits="pixels">fprintf(&apos;Get number of codes for:\n%s&apos;,diagCodeDescription);
text(2, 6, ert_linux_target_version());</Display>
      <Description>This function block reads the number of stored codes under the specified diagnostic code type.

Sample time:
Execution period for the function block.
You might want to put this block in a triggered subsystem or a function call subsystem

Diagnostic code type:
The type defines the severity of the diagnostic code categorie that is read.</Description>
      <Initialization>% array with module slot infos
diagCodetrings = {  &apos;Warning&apos;,  ...\
					&apos;Warning with action&apos;,  ...\
					&apos;Error&apos;,  ...\
					&apos;Error with action&apos;,  ...\
					&apos;Fatal Error&apos;};

% construct the diagCodeDescription info string
diagCodeDescription = diagCodetrings{diagType};

% Create resource keywords to be reserved in resource database
modelRTWFields = 	struct(&apos;diagType&apos;, int2str(diagType));

% Insert modelRTWFields in the I/O block S-Function containing the Tag starting with &apos;HANcoder_TARGET_&apos;
HANcoder_TARGET_DataBlock = find_system(gcb, &apos;RegExp&apos;, &apos;on&apos;, &apos;FollowLinks&apos;, &apos;on&apos;, &apos;LookUnderMasks&apos;, &apos;all&apos;, &apos;BlockType&apos;, &apos;M-S-Function&apos;);
set_param(HANcoder_TARGET_DataBlock{1}, &apos;RTWdata&apos;, modelRTWFields);</Initialization>
      <MaskParameter Name="tsamp" Type="edit" Tunable="off">
        <Prompt>Sample time</Prompt>
        <Value>0.5</Value>
      </MaskParameter>
      <MaskParameter Name="diagType" Type="popup">
        <Prompt>Diagnostic code type:</Prompt>
        <Value>Warning</Value>
        <TypeOptions>
          <Option>Warning</Option>
          <Option>Warning with action</Option>
          <Option>Error</Option>
          <Option>Error with action</Option>
          <Option>Fatal Error</Option>
        </TypeOptions>
      </MaskParameter>
      <DialogControl Type="Group" Name="DescGroupVar">
        <Prompt>%&lt;MaskType&gt;</Prompt>
        <DialogControl Type="Text" Name="DescTextVar">
          <Prompt>%&lt;MaskDescription&gt;</Prompt>
        </DialogControl>
      </DialogControl>
      <DialogControl Type="Group" Name="ParameterGroupVar">
        <Prompt>Simulink:studio:ToolBarParametersMenu</Prompt>
        <DialogControl Type="Edit" Name="tsamp">
          <Prompt>Sample time</Prompt>
          <ControlOptions PromptLocation="left"/>
        </DialogControl>
        <DialogControl Type="Popup" Name="diagType">
          <Prompt>Diagnostic code type:</Prompt>
          <ControlOptions PromptLocation="left"/>
        </DialogControl>
      </DialogControl>
    </Mask>
  </Block>
  <Block BlockType="M-S-Function" Name="Read diagnostic code" SID="4124">
    <PortCounts in="2" out="1"/>
    <P Name="Position">[490, 783, 730, 872]</P>
    <P Name="ZOrder">110</P>
    <P Name="BackgroundColor">[1.000000, 0.666667, 0.000000]</P>
    <P Name="FunctionName">sfcn_memory_diagnostic_read_code</P>
    <P Name="Parameters">tsamp</P>
    <Mask SelfModifiable="on">
      <Type>Read a diagnostic code from memory</Type>
      <Display RunInitForIconRedraw="on" IconUnits="pixels">fprintf(&apos;Read diagnostic code\nfrom index&apos;);
port_label(&apos;input&apos;, 1, &apos;Diagnostic type&apos;);
port_label(&apos;input&apos;, 2, &apos;Index&apos;);
port_label(&apos;output&apos;, 1, &apos;Code&apos;);
text(2, 6, ert_linux_target_version());</Display>
      <Description>This function block reads a stored diagnostic code from a specified diagnostic type. The code that is read from memory is specified by the index numper on input port 2. The stored code goes out of the functionblock as a uint32 value.

Sample time:
Execution period for the function block.

It might be a good idea to use this block in a triggered subsystem or a function call subsystem</Description>
      <MaskParameter Name="tsamp" Type="edit" Tunable="off">
        <Prompt>Sample time</Prompt>
        <Value>0.5</Value>
      </MaskParameter>
      <DialogControl Type="Group" Name="DescGroupVar">
        <Prompt>%&lt;MaskType&gt;</Prompt>
        <DialogControl Type="Text" Name="DescTextVar">
          <Prompt>%&lt;MaskDescription&gt;</Prompt>
        </DialogControl>
      </DialogControl>
      <DialogControl Type="Group" Name="ParameterGroupVar">
        <Prompt>Simulink:studio:ToolBarParametersMenu</Prompt>
        <DialogControl Type="Edit" Name="tsamp">
          <Prompt>Sample time</Prompt>
          <ControlOptions PromptLocation="left"/>
        </DialogControl>
      </DialogControl>
    </Mask>
  </Block>
  <Block BlockType="SubSystem" Name="Store diagnostic code" SID="4125">
    <PortCounts in="1" trigger="1"/>
    <P Name="Position">[495, 539, 730, 591]</P>
    <P Name="ZOrder">111</P>
    <P Name="BackgroundColor">[1.000000, 0.666667, 0.000000]</P>
    <P Name="TreatAsAtomicUnit">on</P>
    <Mask SelfModifiable="on">
      <Type>Store diagnostic code to memory</Type>
      <Display RunInitForIconRedraw="on" IconUnits="pixels">fprintf(&apos;Store diagnostic code\nin memory\nType: %s&apos;, diagCodeDescription);
port_label(&apos;input&apos;, 1, &apos;Diagnostic code&apos;);
text(2, 6, ert_linux_target_version());</Display>
      <Description>This function block stores a diagnostic code to memory.

Diagnostic code type:
The type defines the severity of the diagnostic code.</Description>
      <Initialization>% array with module slot infos
diagCodetrings = {  &apos;Warning&apos;,  ...\
					&apos;Warning with action&apos;,  ...\
					&apos;Error&apos;,  ...\
					&apos;Error with action&apos;,  ...\
					&apos;Fatal Error&apos;};

% construct the diagCodeDescription info string
diagCodeDescription = diagCodetrings{diagType};</Initialization>
      <MaskParameter Name="diagType" Type="promote">
        <Prompt>Diagnosic code type:</Prompt>
        <Value>Warning</Value>
        <TypeOptions>
          <Option>Store diagnostic code/diagType</Option>
        </TypeOptions>
      </MaskParameter>
      <MaskParameter Name="TriggerType" Type="promote" Evaluate="off" Tunable="off">
        <Prompt>Simulink:blkprm_prompts:TrigPortTrigType</Prompt>
        <Value>rising</Value>
        <TypeOptions>
          <Option>Trigger/TriggerType</Option>
        </TypeOptions>
      </MaskParameter>
      <DialogControl Type="Group" Name="DescGroupVar">
        <Prompt>%&lt;MaskType&gt;</Prompt>
        <DialogControl Type="Text" Name="DescTextVar">
          <Prompt>%&lt;MaskDescription&gt;</Prompt>
        </DialogControl>
      </DialogControl>
      <DialogControl Type="Group" Name="ParameterGroupVar">
        <Prompt>Simulink:studio:ToolBarParametersMenu</Prompt>
        <DialogControl Type="Popup" Name="diagType">
          <Prompt>Diagnosic code type:</Prompt>
          <ControlOptions PromptLocation="left"/>
        </DialogControl>
        <DialogControl Type="Popup" Name="TriggerType">
          <Prompt>Trigger type:</Prompt>
          <ControlOptions PromptLocation="left"/>
        </DialogControl>
      </DialogControl>
    </Mask>
    <System Ref="system_4125"/>
  </Block>
  <Block BlockType="M-S-Function" Name="Store diagnostic code with freeze frame" SID="4117">
    <PortCounts in="2"/>
    <P Name="Position">[495, 407, 730, 503]</P>
    <P Name="ZOrder">103</P>
    <P Name="BackgroundColor">[1.000000, 0.666667, 0.000000]</P>
    <List ListType="RTWdata">
      <P Name="diagType">1</P>
      <P Name="signals">&quot;signal&quot;</P>
    </List>
    <P Name="FunctionName">sfcn_memory_diagnostic_write_freeze</P>
    <P Name="Parameters">diagType,signals</P>
    <Mask SelfModifiable="on">
      <Type>Store diagnostic code to memory with freeze frame</Type>
      <Display RunInitForIconRedraw="on" IconUnits="pixels">fprintf(&apos;Store diagnostic code\nin memory with freeze frame\nType: %s&apos;, diagCodeDescription);
port_label(&apos;input&apos;, 1, &apos;Diagnostic code&apos;);
for idx = 2:length(signals)+1
    port_label(&apos;input&apos;, idx, char(signals(idx-1)));
end
text(2, 6, ert_linux_target_version());</Display>
      <Description>This function block stores a diagnostic code to memory including a number of signal values.

Diagnostic code type:
The type defines the severity of the diagnostic code.

Freeze frame signals:
A string array of signal names like [&quot;signal1&quot;, &quot;signal2&quot;], make sure to use the double quotes &quot; instead of single quotes &apos;
Single quotes will concatinate the string instead of making an array.

You should place this block in a triggered subsystem.
</Description>
      <Initialization>% array with module slot infos
diagCodetrings = {  &apos;Warning&apos;,  ...\
					&apos;Warning with action&apos;,  ...\
					&apos;Error&apos;,  ...\
					&apos;Error with action&apos;,  ...\
					&apos;Fatal Error&apos;};

% construct the diagCodeDescription info string
diagCodeDescription = diagCodetrings{diagType};
if ~isempty(signals)
    if ~isstring(signals)
        error(&apos;The signals parameter must be an array of strings&apos;);
    end
end
% Create resource keywords to be reserved in resource database
modelRTWFields = 	struct(	&apos;diagType&apos;,int2str(diagType),&apos;signals&apos;, mat2str(signals));

set_param(gcb, &apos;RTWdata&apos;, modelRTWFields);</Initialization>
      <MaskParameter Name="diagType" Type="popup">
        <Prompt>Diagnosic code type:</Prompt>
        <Value>Warning</Value>
        <TypeOptions>
          <Option>Warning</Option>
          <Option>Warning with action</Option>
          <Option>Error</Option>
          <Option>Error with action</Option>
          <Option>Fatal Error</Option>
        </TypeOptions>
      </MaskParameter>
      <MaskParameter Name="signals" Type="edit" Tunable="off">
        <Prompt>Signals:</Prompt>
        <Value>[&quot;signal&quot;]</Value>
      </MaskParameter>
      <DialogControl Type="Group" Name="DescGroupVar">
        <Prompt>%&lt;MaskType&gt;</Prompt>
        <DialogControl Type="Text" Name="DescTextVar">
          <Prompt>%&lt;MaskDescription&gt;</Prompt>
        </DialogControl>
      </DialogControl>
      <DialogControl Type="Group" Name="ParameterGroupVar">
        <Prompt>Simulink:studio:ToolBarParametersMenu</Prompt>
        <DialogControl Type="Popup" Name="diagType">
          <Prompt>Diagnosic code type:</Prompt>
          <ControlOptions PromptLocation="left"/>
        </DialogControl>
        <DialogControl Type="Edit" Name="signals">
          <Prompt>Signals:</Prompt>
          <ControlOptions PromptLocation="left"/>
        </DialogControl>
      </DialogControl>
    </Mask>
  </Block>
</System>

__MWOPC_PART_BEGIN__ /simulink/systems/system_4051.xml
<?xml version="1.0" encoding="utf-8"?>
<System>
  <P Name="Location">[3912, 0, 7680, 2160]</P>
  <P Name="PaperType">usletter</P>
  <P Name="PaperUnits">inches</P>
  <P Name="TiledPaperMargins">[0.500000, 0.500000, 0.500000, 0.500000]</P>
  <P Name="ZoomFactor">193</P>
  <Block BlockType="M-S-Function" Name="LIN Master" SID="4115">
    <PortCounts in="2"/>
    <P Name="Position">[-30, 96, 90, 354]</P>
    <P Name="ZOrder">52</P>
    <P Name="BackgroundColor">[1.000000, 0.666667, 0.000000]</P>
    <List ListType="RTWdata">
      <P Name="id">1</P>
      <P Name="direction">2</P>
      <P Name="dataLength">1</P>
      <P Name="check">1</P>
    </List>
    <P Name="FunctionName">sfcn_lin_master</P>
    <P Name="Parameters">tsamp, direction, dataLength</P>
    <Mask SelfModifiable="on">
      <Type>LIN Master</Type>
      <Display RunInitForIconRedraw="on" IconUnits="pixels">fprintf(&apos;Master LIN\nmessage\nID: 0x%x&apos;,id);
text(2, 6, ert_linux_target_version());
if direction == 1
    port_label(&apos;output&apos;, 1, &apos;byte 1&apos;);
    port_label(&apos;output&apos;, 2, &apos;byte 2&apos;);
    if dataLength &gt; 1
        port_label(&apos;output&apos;, 3, &apos;byte 3&apos;);
        port_label(&apos;output&apos;, 4, &apos;byte 4&apos;);
    end
    if dataLength &gt; 2
        port_label(&apos;output&apos;, 5, &apos;byte 5&apos;);
        port_label(&apos;output&apos;, 6, &apos;byte 6&apos;);
        port_label(&apos;output&apos;, 7, &apos;byte 7&apos;);
        port_label(&apos;output&apos;, 8, &apos;byte 8&apos;);
    end
else
    port_label(&apos;input&apos;, 1, &apos;byte 1&apos;);
    port_label(&apos;input&apos;, 2, &apos;byte 2&apos;);
    if dataLength &gt; 1
        port_label(&apos;input&apos;, 3, &apos;byte 3&apos;);
        port_label(&apos;input&apos;, 4, &apos;byte 4&apos;);
    end
    if dataLength &gt; 2
        port_label(&apos;input&apos;, 5, &apos;byte 5&apos;);
        port_label(&apos;input&apos;, 6, &apos;byte 6&apos;);
        port_label(&apos;input&apos;, 7, &apos;byte 7&apos;);
        port_label(&apos;input&apos;, 8, &apos;byte 8&apos;);
    end
end</Display>
      <Description>Function
==========
This block implements the LIN master functionality for communication with LIN 
slaves. The block complies with LIN 1.3 an LIN 2.0. When sending data to a slave 
device, this block will add the data to the LIN bus. When retrieving data from slaves, The block will wait for incoming data over LIN.

Parameters
========== 
Identifier: 
Selects the identifier to communicate with

Direction: 
Request data from a slave device or send data to a slave device

Datalength:
Defines the number of bytes that need to be send to- or requested from the slave 

Checksum: 
Select Classic for checksum based on databytes only. Enhanced for databytes and 
ID byte

Sample time:
Defines the execution interval of the block.

Input
==========
Port 1..8               LIN Data bytes to be send to a slave

Output
==========
Port 1..8               LIN Data bytes that are received from the slave</Description>
      <Initialization>% Create resource keywords to be reserved in resource database
modelRTWFields = struct(&apos;id&apos;, int2str(id), &apos;direction&apos;, int2str(direction),&apos;dataLength&apos;, int2str(dataLength),&apos;check&apos;, int2str(check));

% Insert modelRTWFields in the I/O block S-Function containing the Tag starting with &apos;HANcoder_TARGET_&apos;
HANcoder_TARGET_DataBlock = find_system(gcb, &apos;RegExp&apos;, &apos;on&apos;, &apos;FollowLinks&apos;, &apos;on&apos;, &apos;LookUnderMasks&apos;, &apos;all&apos;, &apos;BlockType&apos;, &apos;M-S-Function&apos;);
set_param(HANcoder_TARGET_DataBlock{1}, &apos;RTWdata&apos;, modelRTWFields);</Initialization>
      <MaskParameter Name="id" Type="popup" Tunable="off">
        <Prompt>Identifier</Prompt>
        <Value>0x01</Value>
        <TypeOptions>
          <Option>0x01</Option>
          <Option>0x02</Option>
          <Option>0x03</Option>
          <Option>0x04</Option>
          <Option>0x05</Option>
          <Option>0x06</Option>
          <Option>0x07</Option>
          <Option>0x08</Option>
          <Option>0x09</Option>
          <Option>0x0A</Option>
          <Option>0x0B</Option>
          <Option>0x0C</Option>
          <Option>0x0D</Option>
          <Option>0x0E</Option>
          <Option>0x0F</Option>
          <Option>0x10</Option>
          <Option>0x11</Option>
          <Option>0x12</Option>
          <Option>0x13</Option>
          <Option>0x14</Option>
          <Option>0x15</Option>
          <Option>0x16</Option>
          <Option>0x17</Option>
          <Option>0x18</Option>
          <Option>0x19</Option>
          <Option>0x1A</Option>
          <Option>0x1B</Option>
          <Option>0x1C</Option>
          <Option>0x1D</Option>
          <Option>0x1E</Option>
          <Option>0x1F</Option>
          <Option>0x20</Option>
          <Option>0x21</Option>
          <Option>0x22</Option>
          <Option>0x23</Option>
          <Option>0x24</Option>
          <Option>0x25</Option>
          <Option>0x26</Option>
          <Option>0x27</Option>
          <Option>0x28</Option>
          <Option>0x29</Option>
          <Option>0x2A</Option>
          <Option>0x2B</Option>
          <Option>0x2C</Option>
          <Option>0x2D</Option>
          <Option>0x2E</Option>
          <Option>0x2F</Option>
          <Option>0x30</Option>
          <Option>0x31</Option>
          <Option>0x32</Option>
          <Option>0x33</Option>
          <Option>0x34</Option>
          <Option>0x35</Option>
          <Option>0x36</Option>
          <Option>0x37</Option>
          <Option>0x38</Option>
          <Option>0x39</Option>
          <Option>0x3A</Option>
          <Option>0x3B</Option>
          <Option>0x3C (diagnostic)</Option>
          <Option>0x3D (diagnostic)</Option>
          <Option>0x3E (reserved)</Option>
          <Option>0x3F (reserved)</Option>
        </TypeOptions>
      </MaskParameter>
      <MaskParameter Name="direction" Type="popup" Tunable="off">
        <Prompt>Direction</Prompt>
        <Value>Send data</Value>
        <TypeOptions>
          <Option>Request data</Option>
          <Option>Send data</Option>
        </TypeOptions>
      </MaskParameter>
      <MaskParameter Name="dataLength" Type="popup" Tunable="off">
        <Prompt>Data Length</Prompt>
        <Value>2</Value>
        <TypeOptions>
          <Option>2</Option>
          <Option>4</Option>
          <Option>8</Option>
        </TypeOptions>
      </MaskParameter>
      <MaskParameter Name="check" Type="popup" Tunable="off">
        <Prompt>Checksum</Prompt>
        <Value>Classic (LIN 1.3)</Value>
        <TypeOptions>
          <Option>Classic (LIN 1.3)</Option>
          <Option>Enhanced (LIN 2.0)</Option>
        </TypeOptions>
      </MaskParameter>
      <MaskParameter Name="tsamp" Type="edit" Tunable="off">
        <Prompt>Sample time</Prompt>
        <Value>-1</Value>
      </MaskParameter>
      <DialogControl Type="Group" Name="DescGroupVar">
        <Prompt>%&lt;MaskType&gt;</Prompt>
        <DialogControl Type="Text" Name="DescTextVar">
          <Prompt>%&lt;MaskDescription&gt;</Prompt>
        </DialogControl>
      </DialogControl>
      <DialogControl Type="Group" Name="ParameterGroupVar">
        <Prompt>Simulink:studio:ToolBarParametersMenu</Prompt>
        <DialogControl Type="Popup" Name="id">
          <Prompt>Identifier</Prompt>
          <ControlOptions PromptLocation="left"/>
        </DialogControl>
        <DialogControl Type="Popup" Name="direction">
          <Prompt>Direction</Prompt>
          <ControlOptions PromptLocation="left"/>
        </DialogControl>
        <DialogControl Type="Popup" Name="dataLength">
          <Prompt>Data Length</Prompt>
          <ControlOptions PromptLocation="left"/>
        </DialogControl>
        <DialogControl Type="Popup" Name="check">
          <Prompt>Checksum</Prompt>
          <ControlOptions PromptLocation="left"/>
        </DialogControl>
        <DialogControl Type="Edit" Name="tsamp">
          <Prompt>Sample time</Prompt>
          <ControlOptions PromptLocation="left"/>
        </DialogControl>
      </DialogControl>
    </Mask>
  </Block>
</System>

__MWOPC_PART_BEGIN__ /simulink/systems/system_4065.xml
<?xml version="1.0" encoding="utf-8"?>
<System>
  <P Name="Location">[3912, 0, 7680, 2160]</P>
  <P Name="PaperType">usletter</P>
  <P Name="PaperUnits">inches</P>
  <P Name="TiledPaperMargins">[0.500000, 0.500000, 0.500000, 0.500000]</P>
  <P Name="ZoomFactor">218</P>
  <Block BlockType="M-S-Function" Name="UDP Configure" SID="4091">
    <PortCounts/>
    <P Name="Position">[1070, 425, 1225, 495]</P>
    <P Name="ZOrder">474</P>
    <P Name="BackgroundColor">[1.000000, 0.666667, 0.000000]</P>
    <List ListType="RTWdata">
      <P Name="port">9001</P>
      <P Name="ip">0.0.0.0</P>
      <P Name="broadcast">1</P>
      <P Name="socket_id">id</P>
    </List>
    <P Name="FunctionName">sfcn_UDPConfig</P>
    <Mask SelfModifiable="on">
      <Type>UDP Configure</Type>
      <Display RunInitForIconRedraw="on" IconUnits="pixels">fprintf(&apos;Configure UDP socket\n IP: %s\nPort: %d\n%s&apos;,ip,port,broadcastStr);
text(2, 6, ert_linux_target_version());</Display>
      <Description>Block to configure a UDP connection

The socket ID should be a unique identifier to link the send and receive blocks to.
The name of the actual socket in the C code will be socket_&lt;socket id&gt;, so characters that would not work in a C variable name will not work.

Setting the ip to 0.0.0.0 makes the controller accept messages on all interfaces.
Set it to the ip of a specific interface to limit this.

Allowing broadcasting enables you to send messages to a full range of ip addresses, for example:
192.168.255.255 sends messages to 192.168.1.1, 192.168.2.1 ... 192.168.1.2, 192.168.1.3...</Description>
      <Initialization>    if broadcast == 0
        broadcastStr = &quot;Not broadcasting&quot;;
    else
        broadcastStr = &quot;Broadcasting&quot;;
    end
    if ~is_ip(ip)
        error(&apos;Entered IP is not valid&apos;);
    end
    if mod(port,1) &gt; 0 || port &lt; intmin(&apos;uint16&apos;) || port &gt; intmax(&apos;uint16&apos;)
        error(&apos;Entered Port is not valid, it should be an integer from 0-65335&apos;);
    end

    blockPath = split(gcb, &apos;/&apos;);
    configures = find_system(blockPath(1),&apos;RegExp&apos;, &apos;on&apos;,&apos;FollowLinks&apos;, &apos;on&apos;,&apos;MaskType&apos;,&apos;UDP Configure&apos;);
    options = cell(1,length(configures));
    for idx = 1:length(configures)
        options(idx) = get_param(configures(idx),&apos;socket_id&apos;);
    end

    if length(unique(options)) ~= length(options)
        error(&apos;Socket id is already in use, set a unique socket id&apos;);
    end

	modelRTWFields = struct(&apos;port&apos;, num2str(port), &apos;ip&apos;, ip, &apos;broadcast&apos;, num2str(broadcast), &apos;socket_id&apos;, socket_id);

	% Insert modelRTWFields in the I/O block S-Function containing the Tag starting with &apos;HANcoder_TARGET_&apos;
	HANcoder_TARGET_DataBlock = find_system(gcb, &apos;RegExp&apos;, &apos;on&apos;, &apos;FollowLinks&apos;, &apos;on&apos;, &apos;LookUnderMasks&apos;, &apos;all&apos;, &apos;BlockType&apos;, &apos;M-S-Function&apos;);
	set_param(HANcoder_TARGET_DataBlock{1}, &apos;RTWdata&apos;, modelRTWFields);</Initialization>
      <MaskParameter Name="socket_id" Type="edit" Evaluate="off" Tunable="off">
        <Prompt>Socket id</Prompt>
        <Value>id</Value>
      </MaskParameter>
      <MaskParameter Name="port" Type="edit" Tunable="off">
        <Prompt>The port on which to listen/send</Prompt>
        <Value>9001</Value>
      </MaskParameter>
      <MaskParameter Name="ip" Type="edit">
        <Prompt>The ip on which to listen/send</Prompt>
        <Value>&apos;0.0.0.0&apos;</Value>
      </MaskParameter>
      <MaskParameter Name="broadcast" Type="checkbox">
        <Prompt>Allow broadcasting of sent messages</Prompt>
        <Value>on</Value>
      </MaskParameter>
      <DialogControl Type="Group" Name="DescGroupVar">
        <Prompt>%&lt;MaskType&gt;</Prompt>
        <DialogControl Type="Text" Name="DescTextVar">
          <Prompt>%&lt;MaskDescription&gt;</Prompt>
        </DialogControl>
      </DialogControl>
      <DialogControl Type="Group" Name="ParameterGroupVar">
        <Prompt>Parameters</Prompt>
        <DialogControl Type="Edit" Name="socket_id">
          <Prompt>Socket id</Prompt>
          <ControlOptions PromptLocation="left"/>
        </DialogControl>
        <DialogControl Type="Edit" Name="port">
          <Prompt>The port on which to listen/send</Prompt>
          <ControlOptions PromptLocation="left"/>
        </DialogControl>
        <DialogControl Type="Edit" Name="ip">
          <Prompt>The ip on which to listen/send</Prompt>
          <ControlOptions PromptLocation="left"/>
        </DialogControl>
        <DialogControl Type="CheckBox" Name="broadcast">
          <Prompt>Allow broadcasting of sent messages</Prompt>
        </DialogControl>
      </DialogControl>
    </Mask>
  </Block>
  <Block BlockType="SubSystem" Name="UDP Example" SID="4175">
    <PortCounts/>
    <P Name="Position">[1070, 734, 1225, 816]</P>
    <P Name="ZOrder">476</P>
    <P Name="HideAutomaticName">off</P>
    <System Ref="system_4175"/>
  </Block>
  <Block BlockType="S-Function" Name="UDP Receive" SID="4092">
    <PortCounts out="3"/>
    <P Name="Position">[1070, 524, 1225, 596]</P>
    <P Name="ZOrder">475</P>
    <P Name="BackgroundColor">[1.000000, 0.666667, 0.000000]</P>
    <P Name="FunctionName">sfcn_UDPReceive</P>
    <P Name="Parameters">buff_len,socket_id,tsamp</P>
    <P Name="SFunctionDeploymentMode">off</P>
    <P Name="EnableBusSupport">off</P>
    <P Name="SFcnIsStateOwnerBlock">off</P>
    <Mask SelfModifiable="on">
      <Type>UDP Receive</Type>
      <Display RunInitForIconRedraw="on" IconUnits="pixels">fprintf(&apos;UDP Receive&apos;);
text(2, 6, ert_linux_target_version());
port_label(&apos;output&apos;, 1, &apos;function call&apos;);
port_label(&apos;output&apos;, 2, &apos;message&apos;);
port_label(&apos;output&apos;, 3, &apos;message length&apos;);</Display>
      <Description>Receive all UDP messages

For every message received this block will call the functions attached to the function call output.
In these function calls you can then use the message and message length outputs to process/buffer the received messages.

Outputs:
function call:
Attach to a function call subsystem or something like it to call that function every time a message is received.

message:
The uint8 vector received from the socket. The length of this vector is likely longer than the actual number of bytes received.

message length:
The number of bytes actually received, use this to get the actual fresh bytes from the message.

Parameters:
buffer size:
The maximum number of bytes that can be read from the socket in one message, this also determines the width of the message vector.</Description>
      <MaskParameter Name="tsamp" Type="edit">
        <Prompt>Sample time</Prompt>
        <Value>-1</Value>
      </MaskParameter>
      <MaskParameter Name="socket_id" Type="combobox" Evaluate="off" Tunable="off">
        <Prompt>Socket</Prompt>
        <Value>id</Value>
        <Callback>blockPath = split(gcb, &apos;/&apos;);
configures = find_system(blockPath(1),&apos;RegExp&apos;, &apos;on&apos;,&apos;FollowLinks&apos;, &apos;on&apos;,&apos;MaskType&apos;,&apos;UDP Configure&apos;);
mask = Simulink.Mask.get(gcb);
pars = mask.Parameters;
options = cell(1,length(configures));
for idx = 1:length(configures)
    options(idx) = get_param(configures(idx),&apos;socket_id&apos;);
end
mask.getParameter(&apos;socket_id&apos;).TypeOptions = options;</Callback>
        <TypeOptions>
          <Option>id</Option>
          <Option>led_sinus</Option>
        </TypeOptions>
      </MaskParameter>
      <MaskParameter Name="buff_len" Type="edit" Tunable="off">
        <Prompt>Buffer size</Prompt>
        <Value>1</Value>
      </MaskParameter>
      <DialogControl Type="Group" Name="DescGroupVar">
        <Prompt>%&lt;MaskType&gt;</Prompt>
        <DialogControl Type="Text" Name="DescTextVar">
          <Prompt>%&lt;MaskDescription&gt;</Prompt>
        </DialogControl>
      </DialogControl>
      <DialogControl Type="Group" Name="ParameterGroupVar">
        <Prompt>Parameters</Prompt>
        <DialogControl Type="Edit" Name="tsamp">
          <Prompt>Sample time</Prompt>
          <ControlOptions PromptLocation="left"/>
        </DialogControl>
        <DialogControl Type="ComboBox" Name="socket_id">
          <Prompt>Socket</Prompt>
          <ControlOptions PromptLocation="left"/>
        </DialogControl>
        <DialogControl Type="Edit" Name="buff_len">
          <Prompt>Buffer size</Prompt>
          <ControlOptions PromptLocation="left"/>
        </DialogControl>
      </DialogControl>
    </Mask>
  </Block>
  <Block BlockType="M-S-Function" Name="UDP Send" SID="4093">
    <PortCounts in="1"/>
    <P Name="Position">[1070, 627, 1225, 703]</P>
    <P Name="ZOrder">473</P>
    <P Name="BackgroundColor">[1.000000, 0.666667, 0.000000]</P>
    <List ListType="RTWdata">
      <P Name="port">9001</P>
      <P Name="ip">0.0.0.0</P>
      <P Name="socket_id">id</P>
    </List>
    <P Name="FunctionName">sfcn_UDPSend</P>
    <P Name="Parameters">tsamp,ip,port</P>
    <Mask SelfModifiable="on">
      <Type>UDP Send</Type>
      <Display RunInitForIconRedraw="on" IconUnits="pixels">fprintf(&apos;UDP Send\nIP: %s\nPort: %d&apos;,ip,port);
port_label(&apos;input&apos;, 1, &apos;message&apos;);
text(2, 6, ert_linux_target_version());</Display>
      <Description>Send a UDP message to the designated address.

The Message input should be a uint8 vector, if you end up with a [1xn] or [nx1] matrix, use the reshape block to turn it into a vector.

IP address should be a valid IP address as a string

Port should be a within the range of a uint16</Description>
      <Initialization>    if ~is_ip(ip)
        error(&apos;Entered IP is not valid&apos;);
    end
    if mod(port,1) &gt; 0 || port &lt; intmin(&apos;uint16&apos;) || port &gt; intmax(&apos;uint16&apos;)
        error(&apos;Entered Port is not valid, it should be an integer from 0-65335&apos;);
    end
    % update RTWdata to call WriteRTW again
    modelRTWFields = struct(&apos;port&apos;, num2str(port), &apos;ip&apos;, ip, &apos;socket_id&apos;, socket_id);

    % Insert modelRTWFields in the I/O block S-Function containing the Tag starting with &apos;HANcoder_TARGET_&apos;
    HANcoder_TARGET_DataBlock = find_system(gcb, &apos;RegExp&apos;, &apos;on&apos;, &apos;FollowLinks&apos;, &apos;on&apos;, &apos;LookUnderMasks&apos;, &apos;all&apos;, &apos;BlockType&apos;, &apos;M-S-Function&apos;);
    set_param(HANcoder_TARGET_DataBlock{1}, &apos;RTWdata&apos;, modelRTWFields);</Initialization>
      <MaskParameter Name="socket_id" Type="combobox" Evaluate="off">
        <Prompt>Socket</Prompt>
        <Value>id</Value>
        <Callback>blockPath = split(gcb, &apos;/&apos;);
configures = find_system(blockPath(1),&apos;RegExp&apos;, &apos;on&apos;,&apos;FollowLinks&apos;, &apos;on&apos;,&apos;MaskType&apos;,&apos;UDP Configure&apos;);
mask = Simulink.Mask.get(gcb);
pars = mask.Parameters;
options = cell(1,length(configures));
for idx = 1:length(configures)
    options(idx) = get_param(configures(idx),&apos;socket_id&apos;);
end
pars(1).TypeOptions = options;</Callback>
        <TypeOptions>
          <Option>id</Option>
          <Option>led_sinus</Option>
        </TypeOptions>
      </MaskParameter>
      <MaskParameter Name="ip" Type="edit">
        <Prompt>The IP address to send to</Prompt>
        <Value>&apos;0.0.0.0&apos;</Value>
      </MaskParameter>
      <MaskParameter Name="port" Type="edit">
        <Prompt>The port to send to</Prompt>
        <Value>9001</Value>
      </MaskParameter>
      <MaskParameter Name="tsamp" Type="edit">
        <Prompt>Sample time</Prompt>
        <Value>1</Value>
      </MaskParameter>
      <DialogControl Type="Group" Name="DescGroupVar">
        <Prompt>%&lt;MaskType&gt;</Prompt>
        <DialogControl Type="Text" Name="DescTextVar">
          <Prompt>%&lt;MaskDescription&gt;</Prompt>
        </DialogControl>
      </DialogControl>
      <DialogControl Type="Group" Name="ParameterGroupVar">
        <Prompt>Simulink:studio:ToolBarParametersMenu</Prompt>
        <DialogControl Type="ComboBox" Name="socket_id">
          <Prompt>Socket</Prompt>
          <ControlOptions PromptLocation="left"/>
        </DialogControl>
        <DialogControl Type="Edit" Name="ip">
          <Prompt>The IP address to send to</Prompt>
          <ControlOptions PromptLocation="left"/>
        </DialogControl>
        <DialogControl Type="Edit" Name="port">
          <Prompt>The port to send to</Prompt>
          <ControlOptions PromptLocation="left"/>
        </DialogControl>
        <DialogControl Type="Edit" Name="tsamp">
          <Prompt>Sample time</Prompt>
          <ControlOptions PromptLocation="left"/>
        </DialogControl>
      </DialogControl>
    </Mask>
  </Block>
</System>

__MWOPC_PART_BEGIN__ /simulink/systems/system_4089.xml
<?xml version="1.0" encoding="utf-8"?>
<System>
  <P Name="Location">[3912, 0, 7680, 2160]</P>
  <P Name="PaperType">usletter</P>
  <P Name="PaperUnits">inches</P>
  <P Name="TiledPaperMargins">[0.500000, 0.500000, 0.500000, 0.500000]</P>
  <P Name="ZoomFactor">374</P>
  <Block BlockType="M-S-Function" Name="Set display brightness" SID="4098">
    <PortCounts in="1"/>
    <P Name="Position">[70, 114, 215, 166]</P>
    <P Name="ZOrder">16</P>
    <P Name="BackgroundColor">[1.000000, 0.666667, 0.000000]</P>
    <P Name="FunctionName">sfcn_set_brightness_display</P>
    <P Name="Parameters">tsamp</P>
    <Mask>
      <Type>Set display brightness</Type>
      <Display RunInitForIconRedraw="on" IconUnits="pixels">fprintf(&quot;Set display brightness&quot;);
text(2, 6, ert_linux_target_version());</Display>
      <Description>Set the brightness of a display (only works with the max25014 driver currently)
Keeps the original brightness untill the first non zero value is received</Description>
      <MaskParameter Name="tsamp" Type="edit" Tunable="off">
        <Prompt>Sample time:</Prompt>
        <Value>1</Value>
      </MaskParameter>
      <DialogControl Type="Group" Name="DescGroupVar">
        <Prompt>%&lt;MaskType&gt;</Prompt>
        <DialogControl Type="Text" Name="DescTextVar">
          <Prompt>%&lt;MaskDescription&gt;</Prompt>
        </DialogControl>
      </DialogControl>
      <DialogControl Type="Group" Name="ParameterGroupVar">
        <Prompt>Parameters</Prompt>
        <DialogControl Type="Edit" Name="tsamp">
          <Prompt>Sample time:</Prompt>
          <ControlOptions PromptLocation="left"/>
        </DialogControl>
      </DialogControl>
    </Mask>
  </Block>
</System>

__MWOPC_PART_BEGIN__ /simulink/systems/system_4121.xml
<?xml version="1.0" encoding="utf-8"?>
<System>
  <P Name="Location">[3912, 0, 7680, 2160]</P>
  <P Name="PaperType">usletter</P>
  <P Name="PaperUnits">inches</P>
  <P Name="TiledPaperMargins">[0.500000, 0.500000, 0.500000, 0.500000]</P>
  <P Name="ZoomFactor">290</P>
  <P Name="SIDHighWatermark">4123</P>
  <Block BlockType="TriggerPort" Name="Trigger" SID="4121:4122">
    <PortCounts/>
    <P Name="Position">[130, -40, 150, -20]</P>
    <P Name="ZOrder">-3</P>
    <P Name="VariantControl">(inherit)</P>
    <P Name="StatesWhenEnabling">held</P>
    <P Name="PortDimensions">1</P>
  </Block>
  <Block BlockType="M-S-Function" Name="Delete all codes for one group" SID="4121:4120">
    <PortCounts/>
    <P Name="Position">[20, 21, 260, 59]</P>
    <P Name="ZOrder">106</P>
    <List ListType="RTWdata">
      <P Name="diagType">1</P>
    </List>
    <P Name="FunctionName">sfcn_memory_diagnostic_delete_code</P>
    <Mask SelfModifiable="on">
      <Type>Delete diagnostic codes from memory</Type>
      <Display RunInitForIconRedraw="on" IconUnits="pixels">fprintf(&apos;Delete all codes for:\n%s&apos;,diagCodeDescription);
text(2, 6, ert_linux_target_version());</Display>
      <Description>This function block deletes stored codes under the specified diagnostic code type.

Sample time:
-1 for inherited since this block is a triggered system

Diagnostic code type:
The type defines the severity of the diagnostic code categorie that is deleted.</Description>
      <Initialization>% array with module slot infos
diagCodetrings = {  &apos;Warning&apos;,  ...\
					&apos;Warning with action&apos;,  ...\
					&apos;Error&apos;,  ...\
					&apos;Error with action&apos;,  ...\
					&apos;Fatal Error&apos;};

% construct the diagCodeDescription info string
diagCodeDescription = diagCodetrings{diagType};

% Create resource keywords to be reserved in resource database
modelRTWFields = 	struct(	&apos;diagType&apos;,int2str(diagType));

% Insert modelRTWFields in the I/O block S-Function containing the Tag starting with &apos;HANcoder_TARGET_&apos;
HANcoder_TARGET_DataBlock = find_system(gcb, &apos;RegExp&apos;, &apos;on&apos;, &apos;FollowLinks&apos;, &apos;on&apos;, &apos;LookUnderMasks&apos;, &apos;all&apos;, &apos;BlockType&apos;, &apos;M-S-Function&apos;);
set_param(HANcoder_TARGET_DataBlock{1}, &apos;RTWdata&apos;, modelRTWFields);</Initialization>
      <MaskParameter Name="diagType" Type="popup">
        <Prompt>Diagnostic code type:</Prompt>
        <Value>Warning</Value>
        <TypeOptions>
          <Option>Warning</Option>
          <Option>Warning with action</Option>
          <Option>Error</Option>
          <Option>Error with action</Option>
          <Option>Fatal Error</Option>
        </TypeOptions>
      </MaskParameter>
      <DialogControl Type="Group" Name="DescGroupVar">
        <Prompt>%&lt;MaskType&gt;</Prompt>
        <DialogControl Type="Text" Name="DescTextVar">
          <Prompt>%&lt;MaskDescription&gt;</Prompt>
        </DialogControl>
      </DialogControl>
      <DialogControl Type="Group" Name="ParameterGroupVar">
        <Prompt>Simulink:studio:ToolBarParametersMenu</Prompt>
        <DialogControl Type="Popup" Name="diagType">
          <Prompt>Diagnostic code type:</Prompt>
          <ControlOptions PromptLocation="left"/>
        </DialogControl>
      </DialogControl>
    </Mask>
  </Block>
</System>

__MWOPC_PART_BEGIN__ /simulink/systems/system_4125.xml
<?xml version="1.0" encoding="utf-8"?>
<System>
  <P Name="Location">[3912, 0, 7680, 2160]</P>
  <P Name="PaperType">usletter</P>
  <P Name="PaperUnits">inches</P>
  <P Name="TiledPaperMargins">[0.500000, 0.500000, 0.500000, 0.500000]</P>
  <P Name="ZoomFactor">300</P>
  <P Name="SIDHighWatermark">4129</P>
  <Block BlockType="Inport" Name="In1" SID="4125:4126">
    <P Name="Position">[110, 103, 140, 117]</P>
    <P Name="ZOrder">-1</P>
  </Block>
  <Block BlockType="TriggerPort" Name="Trigger" SID="4125:4127">
    <PortCounts/>
    <P Name="Position">[265, 25, 285, 45]</P>
    <P Name="ZOrder">-2</P>
    <P Name="VariantControl">(inherit)</P>
    <P Name="StatesWhenEnabling">held</P>
  </Block>
  <Block BlockType="M-S-Function" Name="Store diagnostic code" SID="4125:4129">
    <PortCounts in="1"/>
    <P Name="Position">[160, 85, 395, 135]</P>
    <P Name="ZOrder">105</P>
    <P Name="BackgroundColor">[1.000000, 0.666667, 0.000000]</P>
    <List ListType="RTWdata">
      <P Name="diagType">1</P>
    </List>
    <P Name="FunctionName">sfcn_memory_diagnostic_write_code</P>
    <Mask SelfModifiable="on">
      <Type>Store diagnostic code to memory</Type>
      <Display RunInitForIconRedraw="on" IconUnits="pixels">fprintf(&apos;Store diagnostic code\nin memory\nType: %s&apos;, diagCodeDescription);
port_label(&apos;input&apos;, 1, &apos;Diagnostic code&apos;);
text(2, 6, ert_linux_target_version());</Display>
      <Description>This function block stores a diagnostic code to memory.

Diagnostic code type:
The type defines the severity of the diagnostic code.

This block should be placed in a triggered subsystem</Description>
      <Initialization>% array with module slot infos
diagCodetrings = {  &apos;Warning&apos;,  ...\
					&apos;Warning with action&apos;,  ...\
					&apos;Error&apos;,  ...\
					&apos;Error with action&apos;,  ...\
					&apos;Fatal Error&apos;};

% construct the diagCodeDescription info string
diagCodeDescription = diagCodetrings{diagType};


% Create resource keywords to be reserved in resource database
modelRTWFields = 	struct(	&apos;diagType&apos;,int2str(diagType));

% Insert modelRTWFields in the I/O block S-Function containing the Tag starting with &apos;HANcoder_TARGET_&apos;
HANcoder_TARGET_DataBlock = find_system(gcb, &apos;RegExp&apos;, &apos;on&apos;, &apos;FollowLinks&apos;, &apos;on&apos;, &apos;LookUnderMasks&apos;, &apos;all&apos;, &apos;BlockType&apos;, &apos;M-S-Function&apos;);
set_param(HANcoder_TARGET_DataBlock{1}, &apos;RTWdata&apos;, modelRTWFields);
</Initialization>
      <MaskParameter Name="diagType" Type="popup">
        <Prompt>Diagnosic code type:</Prompt>
        <Value>Warning</Value>
        <TypeOptions>
          <Option>Warning</Option>
          <Option>Warning with action</Option>
          <Option>Error</Option>
          <Option>Error with action</Option>
          <Option>Fatal Error</Option>
        </TypeOptions>
      </MaskParameter>
      <DialogControl Type="Group" Name="DescGroupVar">
        <Prompt>%&lt;MaskType&gt;</Prompt>
        <DialogControl Type="Text" Name="DescTextVar">
          <Prompt>%&lt;MaskDescription&gt;</Prompt>
        </DialogControl>
      </DialogControl>
      <DialogControl Type="Group" Name="ParameterGroupVar">
        <Prompt>Simulink:studio:ToolBarParametersMenu</Prompt>
        <DialogControl Type="Popup" Name="diagType">
          <Prompt>Diagnosic code type:</Prompt>
          <ControlOptions PromptLocation="left"/>
        </DialogControl>
      </DialogControl>
    </Mask>
  </Block>
  <Line>
    <P Name="ZOrder">2</P>
    <P Name="Src">4125:4126#out:1</P>
    <P Name="Dst">4125:4129#in:1</P>
  </Line>
</System>

__MWOPC_PART_BEGIN__ /simulink/systems/system_4136.xml
<?xml version="1.0" encoding="utf-8"?>
<System>
  <P Name="Location">[0, 27, 3840, 2160]</P>
  <P Name="PaperType">usletter</P>
  <P Name="PaperUnits">inches</P>
  <P Name="TiledPaperMargins">[0.500000, 0.500000, 0.500000, 0.500000]</P>
  <P Name="ZoomFactor">175</P>
  <Block BlockType="Reference" Name="CAN Pack" SID="4139">
    <PortCounts in="2" out="1"/>
    <P Name="Position">[-20, 121, 200, 199]</P>
    <P Name="ZOrder">475</P>
    <P Name="LibrarySourceBlock">embeddedtargetslib/Host Communication/CAN Pack</P>
    <P Name="LibraryVersion">8.13</P>
    <P Name="SourceBlock">canmsglib/CAN Pack</P>
    <P Name="SourceType">CAN Pack</P>
    <InstanceData>
      <P Name="MultithreadedSim">auto</P>
      <P Name="DataFormat">manually specified signals</P>
      <P Name="MsgList">(none)</P>
      <P Name="MsgName">CAN Msg</P>
      <P Name="MsgIDType">Standard (11-bit identifier)</P>
      <P Name="MsgIdentifier">10</P>
      <P Name="MsgLength">2</P>
      <P Name="Remote">off</P>
      <P Name="ApplyMinMax">off</P>
      <P Name="BusOutput">off</P>
      <P Name="SignalInfo">{ &apos;led1&apos;, &apos;0&apos;, &apos;8&apos;, &apos;LE&apos;, &apos;unsigned&apos;, &apos;Standard&apos;, &apos;0&apos;, &apos;1&apos;, &apos;0&apos;, &apos;-Inf&apos;, &apos;Inf&apos;; &apos;led2&apos;, &apos;8&apos;, &apos;8&apos;, &apos;LE&apos;, &apos;unsigned&apos;, &apos;Standard&apos;, &apos;0&apos;, &apos;1&apos;, &apos;0&apos;, &apos;-Inf&apos;, &apos;Inf&apos; }</P>
    </InstanceData>
  </Block>
  <Block BlockType="Reference" Name="CAN Pack2" SID="4140">
    <PortCounts in="2" out="1"/>
    <P Name="Position">[-20, 201, 200, 279]</P>
    <P Name="ZOrder">487</P>
    <P Name="LibrarySourceBlock">embeddedtargetslib/Host Communication/CAN Pack</P>
    <P Name="LibraryVersion">8.13</P>
    <P Name="SourceBlock">canmsglib/CAN Pack</P>
    <P Name="SourceType">CAN Pack</P>
    <InstanceData>
      <P Name="MultithreadedSim">auto</P>
      <P Name="DataFormat">manually specified signals</P>
      <P Name="MsgList">(none)</P>
      <P Name="MsgName">CAN Msg</P>
      <P Name="MsgIDType">Standard (11-bit identifier)</P>
      <P Name="MsgIdentifier">11</P>
      <P Name="MsgLength">2</P>
      <P Name="Remote">off</P>
      <P Name="ApplyMinMax">off</P>
      <P Name="BusOutput">off</P>
      <P Name="SignalInfo">{ &apos;led3&apos;, &apos;0&apos;, &apos;8&apos;, &apos;LE&apos;, &apos;unsigned&apos;, &apos;Standard&apos;, &apos;0&apos;, &apos;1&apos;, &apos;0&apos;, &apos;-Inf&apos;, &apos;Inf&apos;; &apos;led4&apos;, &apos;8&apos;, &apos;8&apos;, &apos;LE&apos;, &apos;unsigned&apos;, &apos;Standard&apos;, &apos;0&apos;, &apos;1&apos;, &apos;0&apos;, &apos;-Inf&apos;, &apos;Inf&apos; }</P>
    </InstanceData>
  </Block>
  <Block BlockType="S-Function" Name="CAN Receive" SID="4141">
    <PortCounts out="2"/>
    <P Name="Position">[515, 160, 645, 240]</P>
    <P Name="ZOrder">485</P>
    <P Name="BackgroundColor">[1.000000, 0.666667, 0.000000]</P>
    <P Name="AncestorBlock">GOcontroll_Moduline_Target/CAN/CAN 2.0B/CAN Receive</P>
    <P Name="LibraryVersion">0.33</P>
    <P Name="FunctionName">sfcn_can_receive_v2</P>
    <P Name="Parameters">module_id, tsamp</P>
    <P Name="SFunctionDeploymentMode">off</P>
    <P Name="EnableBusSupport">off</P>
    <P Name="SFcnIsStateOwnerBlock">off</P>
    <Mask SelfModifiable="on">
      <Type>CAN Receive</Type>
      <Display IconUnits="pixels">fprintf(&apos;Receive on\nCAN %x&apos;, module_id);

port_label(&apos;output&apos;, 1, &apos;function call&apos;);
port_label(&apos;output&apos;, 2, &apos;message&apos;);
text(2, 6, ert_linux_target_version());</Display>
      <Description>&lt;p&gt;Receive a messages from the CAN bus.&lt;/p&gt;
&lt;p&gt;The output is a CAN_MESSAGE object. CAN Unpack block can be used to unpack the data from CAN_MESSAGE object.&lt;/p&gt;
&lt;p&gt;A Function-call subsystem is triggered every time when a new message has been received.&lt;/p&gt;
&lt;p&gt;There can be only one receive block on a given CAN bus, this receive block will receive all CAN messages on this bus. To filter them use the CAN Unpack blocks inside of a function call subsystem&lt;/p&gt;</Description>
      <MaskParameter Name="ContrType" Type="popup" Tunable="off">
        <Prompt>Controller Type</Prompt>
        <Value>GOcontroll Moduline Mini</Value>
        <Callback>controller = get_param(gcb, &apos;ContrType&apos;);
mask = Simulink.Mask.get(gcb);
can_ifs = mask.getParameter(&apos;module_id&apos;);

if(controller == &quot;GOcontroll Moduline IV&quot;)
can_ifs.TypeOptions = {&apos;CAN1 - Connector C pin 14 (L) and pin 15 (H)&apos;,&apos;CAN2 - Connector C pin 20 (L) and pin 21 (H)&apos;,...
    &apos;CAN3 - Connector C pin 19 (L) and pin 18 (H)&apos;,&apos;CAN4 - Connector C pin 13 (L) and pin 12 (H)&apos;};
elseif (controller == &quot;GOcontroll Moduline Mini&quot;)
 can_ifs.TypeOptions = {&apos;CAN1 - Connector B pin 24 (L) and pin 25 (H)&apos;,&apos;CAN2 - Connector A pin 24 (L) and pin 25 (H)&apos;}; 
 
elseif (controller == &quot;GOcontroll Moduline Display&quot;)
can_ifs.TypeOptions = {&apos;CAN1 - Connector A pin 16 (L) and pin 17 (H)&apos;,&apos;CAN2 - Connector A pin 24 (L) and pin 25 (H)&apos;}; 
end</Callback>
        <TypeOptions>
          <Option>GOcontroll Moduline IV</Option>
          <Option>GOcontroll Moduline Mini</Option>
          <Option>GOcontroll Moduline Display</Option>
        </TypeOptions>
      </MaskParameter>
      <MaskParameter Name="module_id" Type="popup" Tunable="off">
        <Prompt>CAN Bus</Prompt>
        <Value>CAN2 - Connector A pin 24 (L) and pin 25 (H)</Value>
        <TypeOptions>
          <Option>CAN1 - Connector B pin 24 (L) and pin 25 (H)</Option>
          <Option>CAN2 - Connector A pin 24 (L) and pin 25 (H)</Option>
        </TypeOptions>
      </MaskParameter>
      <MaskParameter Name="tsamp" Type="edit" Tunable="off">
        <Prompt>Sample time</Prompt>
        <Value>-1</Value>
      </MaskParameter>
      <DialogControl Type="Group" Name="DescGroupVar">
        <Prompt>%&lt;MaskType&gt;</Prompt>
        <DialogControl Type="Text" Name="DescTextVar">
          <Prompt>%&lt;MaskDescription&gt;</Prompt>
        </DialogControl>
      </DialogControl>
      <DialogControl Type="Group" Name="ParameterGroupVar">
        <Prompt>Simulink:studio:ToolBarParametersMenu</Prompt>
        <DialogControl Type="Popup" Name="ContrType">
          <Prompt>Controller Type</Prompt>
          <ControlOptions PromptLocation="left"/>
        </DialogControl>
        <DialogControl Type="Popup" Name="module_id">
          <Prompt>CAN Bus</Prompt>
          <ControlOptions PromptLocation="left"/>
        </DialogControl>
        <DialogControl Type="Edit" Name="tsamp">
          <Prompt>Sample time</Prompt>
          <ControlOptions PromptLocation="left"/>
        </DialogControl>
      </DialogControl>
    </Mask>
  </Block>
  <Block BlockType="S-Function" Name="CAN Send" SID="4142">
    <PortCounts in="1"/>
    <P Name="Position">[300, 130, 430, 190]</P>
    <P Name="ZOrder">476</P>
    <P Name="BackgroundColor">[1.000000, 0.666667, 0.000000]</P>
    <P Name="AncestorBlock">GOcontroll_Moduline_Target/CAN/CAN 2.0B/CAN Send</P>
    <P Name="LibraryVersion">0.33</P>
    <P Name="FunctionName">sfcn_can_send_v2</P>
    <P Name="Parameters">module_id, tsamp</P>
    <P Name="SFunctionDeploymentMode">off</P>
    <P Name="EnableBusSupport">off</P>
    <P Name="SFcnIsStateOwnerBlock">off</P>
    <Mask SelfModifiable="on">
      <Type>CAN Send</Type>
      <Display IconUnits="pixels">fprintf(&apos;Send on\nCAN%x&apos;, module_id);
port_label(&apos;input&apos;, 1, &apos;Msg&apos;);

text(2, 6, ert_linux_target_version());</Display>
      <Description>&lt;p&gt;Send a CAN message.&lt;/p&gt;
&lt;p&gt;Expects a CAN_MESSAGE object as an input. Use CAN Pack to create the CAN_MESSAGE object.&lt;/p&gt;</Description>
      <MaskParameter Name="ContrType" Type="popup" Tunable="off">
        <Prompt>Controller Type</Prompt>
        <Value>GOcontroll Moduline Mini</Value>
        <Callback>controller = get_param(gcb, &apos;ContrType&apos;);
mask = Simulink.Mask.get(gcb);
can_ifs = mask.getParameter(&apos;module_id&apos;);

if(controller == &quot;GOcontroll Moduline IV&quot;)
    can_ifs.TypeOptions = {&apos;CAN1 - Connector C pin 14 (L) and pin 15 (H)&apos;,&apos;CAN2 - Connector C pin 20 (L) and pin 21 (H)&apos;,...
        &apos;CAN3 - Connector C pin 19 (L) and pin 18 (H)&apos;,&apos;CAN4 - Connector C pin 13 (L) and pin 12 (H)&apos;};
elseif (controller == &quot;GOcontroll Moduline Mini&quot;)
    can_ifs.TypeOptions = {&apos;CAN1 - Connector B pin 24 (L) and pin 25 (H)&apos;,&apos;CAN2 - Connector A pin 24 (L) and pin 25 (H)&apos;};

elseif (controller == &quot;GOcontroll Moduline Display&quot;)
    can_ifs.TypeOptions = {&apos;CAN1 - Connector A pin 16 (L) and pin 17 (H)&apos;,&apos;CAN2 - Connector A pin 24 (L) and pin 25 (H)&apos;};
end</Callback>
        <TypeOptions>
          <Option>GOcontroll Moduline IV</Option>
          <Option>GOcontroll Moduline Mini</Option>
          <Option>GOcontroll Moduline Display</Option>
        </TypeOptions>
      </MaskParameter>
      <MaskParameter Name="module_id" Type="popup" Tunable="off">
        <Prompt>Module</Prompt>
        <Value>CAN1</Value>
        <TypeOptions>
          <Option>CAN1 - Connector B pin 24 (L) and pin 25 (H)</Option>
          <Option>CAN2 - Connector A pin 24 (L) and pin 25 (H)</Option>
        </TypeOptions>
      </MaskParameter>
      <MaskParameter Name="tsamp" Type="edit">
        <Prompt>Sample time</Prompt>
        <Value>0.01</Value>
      </MaskParameter>
      <DialogControl Type="Group" Name="DescGroupVar">
        <Prompt>%&lt;MaskType&gt;</Prompt>
        <DialogControl Type="Text" Name="DescTextVar">
          <Prompt>%&lt;MaskDescription&gt;</Prompt>
        </DialogControl>
      </DialogControl>
      <DialogControl Type="Group" Name="ParameterGroupVar">
        <Prompt>Simulink:studio:ToolBarParametersMenu</Prompt>
        <DialogControl Type="Popup" Name="ContrType">
          <Prompt>Controller Type</Prompt>
          <ControlOptions PromptLocation="left"/>
        </DialogControl>
        <DialogControl Type="Popup" Name="module_id">
          <Prompt>Module</Prompt>
          <ControlOptions PromptLocation="left"/>
        </DialogControl>
        <DialogControl Type="Edit" Name="tsamp">
          <Prompt>Sample time</Prompt>
          <ControlOptions PromptLocation="left"/>
        </DialogControl>
      </DialogControl>
    </Mask>
  </Block>
  <Block BlockType="S-Function" Name="CAN Send2" SID="4143">
    <PortCounts in="1"/>
    <P Name="Position">[300, 210, 430, 270]</P>
    <P Name="ZOrder">488</P>
    <P Name="BackgroundColor">[1.000000, 0.666667, 0.000000]</P>
    <P Name="AncestorBlock">GOcontroll_Moduline_Target/CAN/CAN 2.0B/CAN Send</P>
    <P Name="LibraryVersion">0.33</P>
    <P Name="FunctionName">sfcn_can_send_v2</P>
    <P Name="Parameters">module_id, tsamp</P>
    <P Name="SFunctionDeploymentMode">off</P>
    <P Name="EnableBusSupport">off</P>
    <P Name="SFcnIsStateOwnerBlock">off</P>
    <Mask SelfModifiable="on">
      <Type>CAN Send</Type>
      <Display IconUnits="pixels">fprintf(&apos;Send on\nCAN%x&apos;, module_id);
port_label(&apos;input&apos;, 1, &apos;Msg&apos;);

text(2, 6, ert_linux_target_version());</Display>
      <Description>&lt;p&gt;Send a CAN message.&lt;/p&gt;
&lt;p&gt;Expects a CAN_MESSAGE object as an input. Use CAN Pack to create the CAN_MESSAGE object.&lt;/p&gt;</Description>
      <MaskParameter Name="ContrType" Type="popup" Tunable="off">
        <Prompt>Controller Type</Prompt>
        <Value>GOcontroll Moduline Mini</Value>
        <Callback>controller = get_param(gcb, &apos;ContrType&apos;);
mask = Simulink.Mask.get(gcb);
can_ifs = mask.getParameter(&apos;module_id&apos;);

if(controller == &quot;GOcontroll Moduline IV&quot;)
    can_ifs.TypeOptions = {&apos;CAN1 - Connector C pin 14 (L) and pin 15 (H)&apos;,&apos;CAN2 - Connector C pin 20 (L) and pin 21 (H)&apos;,...
        &apos;CAN3 - Connector C pin 19 (L) and pin 18 (H)&apos;,&apos;CAN4 - Connector C pin 13 (L) and pin 12 (H)&apos;};
elseif (controller == &quot;GOcontroll Moduline Mini&quot;)
    can_ifs.TypeOptions = {&apos;CAN1 - Connector B pin 24 (L) and pin 25 (H)&apos;,&apos;CAN2 - Connector A pin 24 (L) and pin 25 (H)&apos;};

elseif (controller == &quot;GOcontroll Moduline Display&quot;)
    can_ifs.TypeOptions = {&apos;CAN1 - Connector A pin 16 (L) and pin 17 (H)&apos;,&apos;CAN2 - Connector A pin 24 (L) and pin 25 (H)&apos;};
end</Callback>
        <TypeOptions>
          <Option>GOcontroll Moduline IV</Option>
          <Option>GOcontroll Moduline Mini</Option>
          <Option>GOcontroll Moduline Display</Option>
        </TypeOptions>
      </MaskParameter>
      <MaskParameter Name="module_id" Type="popup" Tunable="off">
        <Prompt>Module</Prompt>
        <Value>CAN1</Value>
        <TypeOptions>
          <Option>CAN1 - Connector B pin 24 (L) and pin 25 (H)</Option>
          <Option>CAN2 - Connector A pin 24 (L) and pin 25 (H)</Option>
        </TypeOptions>
      </MaskParameter>
      <MaskParameter Name="tsamp" Type="edit">
        <Prompt>Sample time</Prompt>
        <Value>0.01</Value>
      </MaskParameter>
      <DialogControl Type="Group" Name="DescGroupVar">
        <Prompt>%&lt;MaskType&gt;</Prompt>
        <DialogControl Type="Text" Name="DescTextVar">
          <Prompt>%&lt;MaskDescription&gt;</Prompt>
        </DialogControl>
      </DialogControl>
      <DialogControl Type="Group" Name="ParameterGroupVar">
        <Prompt>Simulink:studio:ToolBarParametersMenu</Prompt>
        <DialogControl Type="Popup" Name="ContrType">
          <Prompt>Controller Type</Prompt>
          <ControlOptions PromptLocation="left"/>
        </DialogControl>
        <DialogControl Type="Popup" Name="module_id">
          <Prompt>Module</Prompt>
          <ControlOptions PromptLocation="left"/>
        </DialogControl>
        <DialogControl Type="Edit" Name="tsamp">
          <Prompt>Sample time</Prompt>
          <ControlOptions PromptLocation="left"/>
        </DialogControl>
      </DialogControl>
    </Mask>
  </Block>
  <Block BlockType="DataTypeConversion" Name="Cast" SID="4144">
    <P Name="Position">[-125, 123, -50, 157]</P>
    <P Name="ZOrder">478</P>
    <P Name="OutDataTypeStr">uint8</P>
    <P Name="RndMeth">Floor</P>
    <P Name="SaturateOnIntegerOverflow">off</P>
  </Block>
  <Block BlockType="DataTypeConversion" Name="Cast1" SID="4145">
    <P Name="Position">[-125, 163, -50, 197]</P>
    <P Name="ZOrder">480</P>
    <P Name="OutDataTypeStr">uint8</P>
    <P Name="RndMeth">Floor</P>
    <P Name="SaturateOnIntegerOverflow">off</P>
  </Block>
  <Block BlockType="DataTypeConversion" Name="Cast2" SID="4146">
    <P Name="Position">[-125, 203, -50, 237]</P>
    <P Name="ZOrder">482</P>
    <P Name="OutDataTypeStr">uint8</P>
    <P Name="RndMeth">Floor</P>
    <P Name="SaturateOnIntegerOverflow">off</P>
  </Block>
  <Block BlockType="DataTypeConversion" Name="Cast3" SID="4147">
    <P Name="Position">[-125, 243, -50, 277]</P>
    <P Name="ZOrder">484</P>
    <P Name="OutDataTypeStr">uint8</P>
    <P Name="RndMeth">Floor</P>
    <P Name="SaturateOnIntegerOverflow">off</P>
  </Block>
  <Block BlockType="SubSystem" Name="Process messages on CAN2" SID="4148">
    <PortCounts in="1" trigger="1"/>
    <P Name="Position">[715, 199, 815, 241]</P>
    <P Name="ZOrder">486</P>
    <P Name="TreatAsAtomicUnit">on</P>
    <System Ref="system_4148"/>
  </Block>
  <Block BlockType="Sin" Name="Sine Wave" SID="4168">
    <PortCounts out="1"/>
    <P Name="Position">[-185, 125, -155, 155]</P>
    <P Name="ZOrder">477</P>
    <P Name="SineType">Sample based</P>
    <P Name="Amplitude">100</P>
    <P Name="Bias">100</P>
    <P Name="Samples">200</P>
    <P Name="SampleTime">0.01</P>
  </Block>
  <Block BlockType="Sin" Name="Sine Wave1" SID="4169">
    <PortCounts out="1"/>
    <P Name="Position">[-185, 165, -155, 195]</P>
    <P Name="ZOrder">479</P>
    <P Name="SineType">Sample based</P>
    <P Name="Amplitude">100</P>
    <P Name="Bias">100</P>
    <P Name="Samples">200</P>
    <P Name="Offset">50</P>
    <P Name="SampleTime">0.01</P>
  </Block>
  <Block BlockType="Sin" Name="Sine Wave2" SID="4170">
    <PortCounts out="1"/>
    <P Name="Position">[-185, 205, -155, 235]</P>
    <P Name="ZOrder">481</P>
    <P Name="SineType">Sample based</P>
    <P Name="Amplitude">100</P>
    <P Name="Bias">100</P>
    <P Name="Samples">200</P>
    <P Name="Offset">100</P>
    <P Name="SampleTime">0.01</P>
  </Block>
  <Block BlockType="Sin" Name="Sine Wave3" SID="4171">
    <PortCounts out="1"/>
    <P Name="Position">[-185, 245, -155, 275]</P>
    <P Name="ZOrder">483</P>
    <P Name="SineType">Sample based</P>
    <P Name="Amplitude">100</P>
    <P Name="Bias">100</P>
    <P Name="Samples">200</P>
    <P Name="Offset">150</P>
    <P Name="SampleTime">0.01</P>
  </Block>
  <Line>
    <P Name="ZOrder">2</P>
    <P Name="Src">4140#out:1</P>
    <P Name="Dst">4143#in:1</P>
  </Line>
  <Line>
    <P Name="ZOrder">3</P>
    <P Name="Src">4141#out:2</P>
    <P Name="Dst">4148#in:1</P>
  </Line>
  <Line>
    <P Name="ZOrder">4</P>
    <P Name="Src">4141#out:1</P>
    <P Name="Points">[115, 0]</P>
    <P Name="Dst">4148#trigger</P>
  </Line>
  <Line>
    <P Name="ZOrder">5</P>
    <P Name="Src">4147#out:1</P>
    <P Name="Dst">4140#in:2</P>
  </Line>
  <Line>
    <P Name="ZOrder">6</P>
    <P Name="Src">4146#out:1</P>
    <P Name="Dst">4140#in:1</P>
  </Line>
  <Line>
    <P Name="ZOrder">7</P>
    <P Name="Src">4145#out:1</P>
    <P Name="Dst">4139#in:2</P>
  </Line>
  <Line>
    <P Name="ZOrder">8</P>
    <P Name="Src">4171#out:1</P>
    <P Name="Dst">4147#in:1</P>
  </Line>
  <Line>
    <P Name="ZOrder">9</P>
    <P Name="Src">4170#out:1</P>
    <P Name="Dst">4146#in:1</P>
  </Line>
  <Line>
    <P Name="ZOrder">10</P>
    <P Name="Src">4169#out:1</P>
    <P Name="Dst">4145#in:1</P>
  </Line>
  <Line>
    <P Name="ZOrder">11</P>
    <P Name="Src">4168#out:1</P>
    <P Name="Dst">4144#in:1</P>
  </Line>
  <Line>
    <P Name="ZOrder">12</P>
    <P Name="Src">4144#out:1</P>
    <P Name="Dst">4139#in:1</P>
  </Line>
  <Line>
    <P Name="ZOrder">13</P>
    <P Name="Src">4139#out:1</P>
    <P Name="Dst">4142#in:1</P>
  </Line>
  <Annotation SID="4172">
    <P Name="Name">This example shows how to use the new v2 CAN blocks.
You must use the CAN Pack/Unpack blocks with these as they only accept the CAN_MESSAGE type.
There can be as many CAN Send blocks as you need, but there can be only 1 CAN Receive block per CAN bus, this receive block will receive all incoming messages.
These can then be properly filtered and decode using the CAN Unpack blocks.
The new CAN block cannot be used together with the old CAN blocks in one model!

To run this example, connect CAN1 to CAN2 on the controller with the appropriate CAN termination if necessary.</P>
    <P Name="Position">[-230, -28, 895, 367]</P>
    <P Name="InternalMargins">[0, 0, 0, 0]</P>
    <P Name="FixedHeight">on</P>
    <P Name="FixedWidth">on</P>
    <P Name="HorizontalAlignment">left</P>
    <P Name="VerticalAlignment">top</P>
    <P Name="ForegroundColor">[0.901961, 0.901961, 1.000000]</P>
    <P Name="BackgroundColor">[0.901961, 0.901961, 1.000000]</P>
    <P Name="DropShadow">on</P>
    <P Name="AnnotationType">area_annotation</P>
    <P Name="ZOrder">5</P>
    <P Name="FontSize">12</P>
  </Annotation>
  <Annotation SID="4173">
    <P Name="Name">you can use dbc files to define your messages or define your own</P>
    <P Name="Position">[-56, 80, 235, 95]</P>
    <P Name="InternalMargins">[0, 0, 0, 0]</P>
    <P Name="HorizontalAlignment">left</P>
    <P Name="VerticalAlignment">top</P>
    <P Name="ZOrder">2</P>
  </Annotation>
  <Annotation SID="4174">
    <P Name="Name">you can only place one CAN Receive block per CAN bus</P>
    <P Name="Position">[454, 80, 706, 95]</P>
    <P Name="InternalMargins">[0, 0, 0, 0]</P>
    <P Name="HorizontalAlignment">left</P>
    <P Name="VerticalAlignment">top</P>
    <P Name="ZOrder">1</P>
  </Annotation>
</System>

__MWOPC_PART_BEGIN__ /simulink/systems/system_4148.xml
<?xml version="1.0" encoding="utf-8"?>
<System>
  <P Name="Location">[3912, 0, 7680, 2160]</P>
  <P Name="PaperType">usletter</P>
  <P Name="PaperUnits">inches</P>
  <P Name="TiledPaperMargins">[0.500000, 0.500000, 0.500000, 0.500000]</P>
  <P Name="ZoomFactor">80</P>
  <Block BlockType="Inport" Name="In1" SID="4149">
    <P Name="Position">[115, 198, 145, 212]</P>
    <P Name="ZOrder">-1</P>
  </Block>
  <Block BlockType="TriggerPort" Name="function" SID="4150">
    <PortCounts/>
    <P Name="Position">[275, 15, 295, 35]</P>
    <P Name="ZOrder">-2</P>
    <P Name="TriggerType">function-call</P>
    <P Name="VariantControl">(inherit)</P>
    <P Name="StatesWhenEnabling">held</P>
    <P Name="OutputDataType">int8</P>
  </Block>
  <Block BlockType="Reference" Name="CAN Unpack" SID="4151">
    <PortCounts in="1" out="3"/>
    <P Name="Position">[190, 114, 385, 296]</P>
    <P Name="ZOrder">1</P>
    <P Name="LibrarySourceBlock">embeddedtargetslib/Host Communication/CAN Unpack</P>
    <P Name="LibraryVersion">8.13</P>
    <P Name="SourceBlock">canmsglib/CAN Unpack</P>
    <P Name="SourceType">CAN Unpack</P>
    <InstanceData>
      <P Name="MultithreadedSim">auto</P>
      <P Name="DataFormat">manually specified signals</P>
      <P Name="MsgList">(none)</P>
      <P Name="MsgName">CAN Msg</P>
      <P Name="MsgIDType">Standard (11-bit identifier)</P>
      <P Name="MsgIdentifier">10</P>
      <P Name="MsgLength">2</P>
      <P Name="SignalInfo">{ &apos;led1&apos;, &apos;0&apos;, &apos;8&apos;, &apos;LE&apos;, &apos;unsigned&apos;, &apos;Standard&apos;, &apos;0&apos;, &apos;1&apos;, &apos;0&apos;, &apos;-Inf&apos;, &apos;Inf&apos;; &apos;led2&apos;, &apos;8&apos;, &apos;8&apos;, &apos;LE&apos;, &apos;unsigned&apos;, &apos;Standard&apos;, &apos;0&apos;, &apos;1&apos;, &apos;0&apos;, &apos;-Inf&apos;, &apos;Inf&apos; }</P>
      <P Name="IDPort">off</P>
      <P Name="TimestampPort">off</P>
      <P Name="ErrorPort">off</P>
      <P Name="RemotePort">off</P>
      <P Name="LengthPort">off</P>
      <P Name="StatusPort">on</P>
      <P Name="ApplyMinMax">off</P>
    </InstanceData>
  </Block>
  <Block BlockType="Reference" Name="CAN Unpack1" SID="4152">
    <PortCounts in="1" out="3"/>
    <P Name="Position">[190, 329, 385, 511]</P>
    <P Name="ZOrder">103</P>
    <P Name="LibrarySourceBlock">embeddedtargetslib/Host Communication/CAN Unpack</P>
    <P Name="LibraryVersion">8.13</P>
    <P Name="SourceBlock">canmsglib/CAN Unpack</P>
    <P Name="SourceType">CAN Unpack</P>
    <InstanceData>
      <P Name="MultithreadedSim">auto</P>
      <P Name="DataFormat">manually specified signals</P>
      <P Name="MsgList">(none)</P>
      <P Name="MsgName">CAN Msg</P>
      <P Name="MsgIDType">Standard (11-bit identifier)</P>
      <P Name="MsgIdentifier">11</P>
      <P Name="MsgLength">2</P>
      <P Name="SignalInfo">{ &apos;led3&apos;, &apos;0&apos;, &apos;8&apos;, &apos;LE&apos;, &apos;unsigned&apos;, &apos;Standard&apos;, &apos;0&apos;, &apos;1&apos;, &apos;0&apos;, &apos;-Inf&apos;, &apos;Inf&apos;; &apos;led4&apos;, &apos;8&apos;, &apos;8&apos;, &apos;LE&apos;, &apos;unsigned&apos;, &apos;Standard&apos;, &apos;0&apos;, &apos;1&apos;, &apos;0&apos;, &apos;-Inf&apos;, &apos;Inf&apos; }</P>
      <P Name="IDPort">off</P>
      <P Name="TimestampPort">off</P>
      <P Name="ErrorPort">off</P>
      <P Name="RemotePort">off</P>
      <P Name="LengthPort">off</P>
      <P Name="StatusPort">on</P>
      <P Name="ApplyMinMax">off</P>
    </InstanceData>
  </Block>
  <Block BlockType="SubSystem" Name="Control Leds" SID="4153">
    <PortCounts in="2" enable="1"/>
    <P Name="Position">[470, 113, 570, 237]</P>
    <P Name="ZOrder">101</P>
    <P Name="TreatAsAtomicUnit">on</P>
    <P Name="ContentPreviewEnabled">on</P>
    <System Ref="system_4153"/>
  </Block>
  <Block BlockType="SubSystem" Name="Enabled&#xA;Subsystem" SID="4159">
    <PortCounts in="2" enable="1"/>
    <P Name="Position">[470, 329, 570, 456]</P>
    <P Name="ZOrder">102</P>
    <P Name="TreatAsAtomicUnit">on</P>
    <P Name="ContentPreviewEnabled">on</P>
    <System Ref="system_4159"/>
  </Block>
  <Line>
    <P Name="ZOrder">1</P>
    <P Name="Src">4152#out:1</P>
    <P Name="Dst">4159#in:1</P>
  </Line>
  <Line>
    <P Name="ZOrder">2</P>
    <P Name="Src">4152#out:2</P>
    <P Name="Dst">4159#in:2</P>
  </Line>
  <Line>
    <P Name="ZOrder">3</P>
    <P Name="Src">4152#out:3</P>
    <P Name="Points">[38, 0; 0, -179; 92, 0]</P>
    <P Name="Dst">4159#enable</P>
  </Line>
  <Line>
    <P Name="ZOrder">4</P>
    <P Name="Src">4151#out:3</P>
    <P Name="Points">[38, 0; 0, -176; 92, 0]</P>
    <P Name="Dst">4153#enable</P>
  </Line>
  <Line>
    <P Name="ZOrder">5</P>
    <P Name="Src">4151#out:1</P>
    <P Name="Dst">4153#in:1</P>
  </Line>
  <Line>
    <P Name="ZOrder">6</P>
    <P Name="Src">4151#out:2</P>
    <P Name="Dst">4153#in:2</P>
  </Line>
  <Line>
    <P Name="ZOrder">7</P>
    <P Name="Src">4149#out:1</P>
    <P Name="Points">[11, 0]</P>
    <Branch>
      <P Name="ZOrder">8</P>
      <P Name="Dst">4151#in:1</P>
    </Branch>
    <Branch>
      <P Name="ZOrder">9</P>
      <P Name="Points">[0, 215]</P>
      <P Name="Dst">4152#in:1</P>
    </Branch>
  </Line>
  <Annotation SID="4167">
    <P Name="Name">only control the leds when a message has come in, so use enabled subystems</P>
    <P Name="Position">[345, 32, 694, 47]</P>
    <P Name="InternalMargins">[0, 0, 0, 0]</P>
    <P Name="HorizontalAlignment">left</P>
    <P Name="VerticalAlignment">top</P>
    <P Name="ZOrder">-1</P>
  </Annotation>
  <Annotation SID="4166">
    <P Name="Name">place all your unpack blocks here attached to the CAN_MESSAGE line</P>
    <P Name="Position">[86, 84, 401, 99]</P>
    <P Name="InternalMargins">[0, 0, 0, 0]</P>
    <P Name="HorizontalAlignment">left</P>
    <P Name="VerticalAlignment">top</P>
    <P Name="ZOrder">-2</P>
  </Annotation>
  <Annotation SID="4165">
    <P Name="Name">status outputs whether a message has been received the last time the block was activated</P>
    <P Name="Position">[443, 256, 848, 273]</P>
    <P Name="InternalMargins">[0, 0, 0, 0]</P>
    <P Name="FixedHeight">on</P>
    <P Name="FixedWidth">on</P>
    <P Name="HorizontalAlignment">left</P>
    <P Name="VerticalAlignment">top</P>
    <P Name="ZOrder">-3</P>
  </Annotation>
</System>

__MWOPC_PART_BEGIN__ /simulink/systems/system_4153.xml
<?xml version="1.0" encoding="utf-8"?>
<System>
  <P Name="Location">[3912, 0, 7680, 2160]</P>
  <P Name="PaperType">usletter</P>
  <P Name="PaperUnits">inches</P>
  <P Name="TiledPaperMargins">[0.500000, 0.500000, 0.500000, 0.500000]</P>
  <P Name="ZoomFactor">175</P>
  <Block BlockType="Inport" Name="In1" SID="4154">
    <P Name="Position">[180, 103, 210, 117]</P>
    <P Name="ZOrder">-1</P>
  </Block>
  <Block BlockType="Inport" Name="In3" SID="4155">
    <P Name="Position">[180, 148, 210, 162]</P>
    <P Name="ZOrder">2</P>
    <P Name="Port">2</P>
  </Block>
  <Block BlockType="EnablePort" Name="Enable" SID="4156">
    <PortCounts/>
    <P Name="Position">[235, 20, 255, 40]</P>
    <P Name="ZOrder">-2</P>
  </Block>
  <Block BlockType="Reference" Name="Enclosure LED" SID="4157">
    <PortCounts in="1"/>
    <P Name="Position">[320, 89, 470, 131]</P>
    <P Name="ZOrder">101</P>
    <P Name="BackgroundColor">[1.000000, 0.666667, 0.000000]</P>
    <P Name="LibraryVersion">0.33</P>
    <P Name="SourceBlock">$bdroot/Enclosure LED&apos;s/Enclosure LED</P>
    <P Name="SourceType">Enclosure LED&apos;s</P>
    <InstanceData>
      <P Name="tsamp">-1</P>
      <P Name="led">1</P>
      <P Name="color">Blue</P>
    </InstanceData>
  </Block>
  <Block BlockType="Reference" Name="Enclosure LED1" SID="4158">
    <PortCounts in="1"/>
    <P Name="Position">[320, 134, 470, 176]</P>
    <P Name="ZOrder">102</P>
    <P Name="BackgroundColor">[1.000000, 0.666667, 0.000000]</P>
    <P Name="LibraryVersion">0.33</P>
    <P Name="SourceBlock">$bdroot/Enclosure LED&apos;s/Enclosure LED</P>
    <P Name="SourceType">Enclosure LED&apos;s</P>
    <InstanceData>
      <P Name="tsamp">-1</P>
      <P Name="led">2</P>
      <P Name="color">Blue</P>
    </InstanceData>
  </Block>
  <Line>
    <P Name="ZOrder">1</P>
    <P Name="Src">4154#out:1</P>
    <P Name="Dst">4157#in:1</P>
  </Line>
  <Line>
    <P Name="ZOrder">2</P>
    <P Name="Src">4155#out:1</P>
    <P Name="Dst">4158#in:1</P>
  </Line>
</System>

__MWOPC_PART_BEGIN__ /simulink/systems/system_4159.xml
<?xml version="1.0" encoding="utf-8"?>
<System>
  <P Name="Location">[3912, 0, 7680, 2160]</P>
  <P Name="PaperType">usletter</P>
  <P Name="PaperUnits">inches</P>
  <P Name="TiledPaperMargins">[0.500000, 0.500000, 0.500000, 0.500000]</P>
  <Block BlockType="Inport" Name="In4" SID="4160">
    <P Name="Position">[130, 148, 160, 162]</P>
    <P Name="ZOrder">106</P>
  </Block>
  <Block BlockType="Inport" Name="In2" SID="4161">
    <P Name="Position">[130, 193, 160, 207]</P>
    <P Name="ZOrder">105</P>
    <P Name="Port">2</P>
  </Block>
  <Block BlockType="EnablePort" Name="Enable" SID="4162">
    <PortCounts/>
    <P Name="Position">[235, 20, 255, 40]</P>
    <P Name="ZOrder">-2</P>
  </Block>
  <Block BlockType="Reference" Name="Enclosure LED2" SID="4163">
    <PortCounts in="1"/>
    <P Name="Position">[270, 134, 420, 176]</P>
    <P Name="ZOrder">107</P>
    <P Name="BackgroundColor">[1.000000, 0.666667, 0.000000]</P>
    <P Name="LibraryVersion">0.33</P>
    <P Name="SourceBlock">$bdroot/Enclosure LED&apos;s/Enclosure LED</P>
    <P Name="SourceType">Enclosure LED&apos;s</P>
    <InstanceData>
      <P Name="tsamp">-1</P>
      <P Name="led">3</P>
      <P Name="color">Blue</P>
    </InstanceData>
  </Block>
  <Block BlockType="Reference" Name="Enclosure LED3" SID="4164">
    <PortCounts in="1"/>
    <P Name="Position">[270, 179, 420, 221]</P>
    <P Name="ZOrder">108</P>
    <P Name="BackgroundColor">[1.000000, 0.666667, 0.000000]</P>
    <P Name="LibraryVersion">0.33</P>
    <P Name="SourceBlock">$bdroot/Enclosure LED&apos;s/Enclosure LED</P>
    <P Name="SourceType">Enclosure LED&apos;s</P>
    <InstanceData>
      <P Name="tsamp">-1</P>
      <P Name="led">4</P>
      <P Name="color">Blue</P>
    </InstanceData>
  </Block>
  <Line>
    <P Name="ZOrder">1</P>
    <P Name="Src">4160#out:1</P>
    <P Name="Dst">4163#in:1</P>
  </Line>
  <Line>
    <P Name="ZOrder">2</P>
    <P Name="Src">4161#out:1</P>
    <P Name="Dst">4164#in:1</P>
  </Line>
</System>

__MWOPC_PART_BEGIN__ /simulink/systems/system_4175.xml
<?xml version="1.0" encoding="utf-8"?>
<System>
  <P Name="Location">[0, 27, 3840, 2160]</P>
  <P Name="PaperType">usletter</P>
  <P Name="PaperUnits">inches</P>
  <P Name="TiledPaperMargins">[0.500000, 0.500000, 0.500000, 0.500000]</P>
  <P Name="ZoomFactor">175</P>
  <Block BlockType="S-Function" Name="Byte Pack" SID="4176">
    <PortCounts in="4" out="1"/>
    <P Name="Position">[1135, 1291, 1225, 1489]</P>
    <P Name="ZOrder">482</P>
    <P Name="AncestorBlock">etargetslib/Byte Pack</P>
    <P Name="LibraryVersion">14.0</P>
    <P Name="FunctionName">any2byte</P>
    <P Name="Parameters">datatypesout,byteAlign</P>
    <P Name="SFunctionDeploymentMode">off</P>
    <P Name="EnableBusSupport">off</P>
    <P Name="SFcnIsStateOwnerBlock">off</P>
    <Mask SelfModifiable="on">
      <Type>Byte pack</Type>
      <Display RunInitForIconRedraw="off" IconUnits="normalized">color(&apos;blue&apos;);
text(0.95, 0.90, &apos;&apos;, ...
                &apos;horizontalalignment&apos;, &apos;right&apos;);
color(&apos;black&apos;);
text(0.50, 0.12, &apos;Byte Pack&apos;, ...
                &apos;horizontalAlignment&apos;,&apos;center&apos;);
</Display>
      <Description>Pack input data into a single output vector of type uint8. Insert before a UDP Send block to produce a uint8 byte vector from multiple vectors of varying data type.
</Description>
      <Initialization>datatypesout = bytepack_callback(datatypes);</Initialization>
      <Help>eval(&apos;linkfoundation.util.openBlockHelp(&apos;&apos;etargetslibbytepack&apos;&apos;)&apos;);</Help>
      <MaskParameter Name="datatypes" Type="edit" Tunable="off">
        <Prompt>Input port data types (cell array):</Prompt>
        <Value>{&apos;uint8&apos;,&apos;uint8&apos;,&apos;uint8&apos;,&apos;uint8&apos;}</Value>
      </MaskParameter>
      <MaskParameter Name="byteAlign" Type="popup" Tunable="off">
        <Prompt>Byte alignment:</Prompt>
        <Value>1</Value>
        <TypeOptions>
          <Option>1</Option>
          <Option>2</Option>
          <Option>4</Option>
          <Option>8</Option>
        </TypeOptions>
      </MaskParameter>
    </Mask>
  </Block>
  <Block BlockType="Constant" Name="Constant2" SID="4177">
    <P Name="Position">[1300, 1352, 1335, 1368]</P>
    <P Name="ZOrder">460</P>
    <P Name="Value">0</P>
    <P Name="OutDataTypeStr">uint8</P>
  </Block>
  <Block BlockType="DataTypeConversion" Name="Data Type Conversion" SID="4178">
    <P Name="Position">[940, 1298, 1015, 1332]</P>
    <P Name="ZOrder">445</P>
    <P Name="OutDataTypeStr">uint8</P>
    <P Name="RndMeth">Floor</P>
    <P Name="SaturateOnIntegerOverflow">off</P>
  </Block>
  <Block BlockType="DataTypeConversion" Name="Data Type Conversion1" SID="4179">
    <P Name="Position">[940, 1348, 1015, 1382]</P>
    <P Name="ZOrder">446</P>
    <P Name="OutDataTypeStr">uint8</P>
    <P Name="RndMeth">Floor</P>
    <P Name="SaturateOnIntegerOverflow">off</P>
  </Block>
  <Block BlockType="DataTypeConversion" Name="Data Type Conversion2" SID="4180">
    <P Name="Position">[940, 1398, 1015, 1432]</P>
    <P Name="ZOrder">447</P>
    <P Name="OutDataTypeStr">uint8</P>
    <P Name="RndMeth">Floor</P>
    <P Name="SaturateOnIntegerOverflow">off</P>
  </Block>
  <Block BlockType="DataTypeConversion" Name="Data Type Conversion3" SID="4181">
    <P Name="Position">[940, 1448, 1015, 1482]</P>
    <P Name="ZOrder">448</P>
    <P Name="OutDataTypeStr">uint8</P>
    <P Name="RndMeth">Floor</P>
    <P Name="SaturateOnIntegerOverflow">off</P>
  </Block>
  <Block BlockType="SubSystem" Name="Decode" SID="4182">
    <PortCounts in="2" trigger="1"/>
    <P Name="Position">[1315, 1048, 1415, 1097]</P>
    <P Name="ZOrder">500</P>
    <P Name="TreatAsAtomicUnit">on</P>
    <System Ref="system_4182"/>
  </Block>
  <Block BlockType="Sin" Name="Sine Wave1" SID="4206">
    <PortCounts out="1"/>
    <P Name="Position">[840, 1300, 870, 1330]</P>
    <P Name="ZOrder">444</P>
    <P Name="SineType">Sample based</P>
    <P Name="Amplitude">120</P>
    <P Name="Bias">121</P>
    <P Name="Phase">128</P>
    <P Name="Samples">100</P>
    <P Name="SampleTime">0.01</P>
  </Block>
  <Block BlockType="Sin" Name="Sine Wave2" SID="4207">
    <PortCounts out="1"/>
    <P Name="Position">[840, 1350, 870, 1380]</P>
    <P Name="ZOrder">496</P>
    <P Name="SineType">Sample based</P>
    <P Name="Amplitude">120</P>
    <P Name="Bias">121</P>
    <P Name="Phase">128</P>
    <P Name="Samples">100</P>
    <P Name="Offset">25</P>
    <P Name="SampleTime">0.01</P>
  </Block>
  <Block BlockType="Sin" Name="Sine Wave3" SID="4208">
    <PortCounts out="1"/>
    <P Name="Position">[840, 1400, 870, 1430]</P>
    <P Name="ZOrder">497</P>
    <P Name="SineType">Sample based</P>
    <P Name="Amplitude">120</P>
    <P Name="Bias">121</P>
    <P Name="Phase">128</P>
    <P Name="Samples">100</P>
    <P Name="Offset">50</P>
    <P Name="SampleTime">0.01</P>
  </Block>
  <Block BlockType="Sin" Name="Sine Wave4" SID="4209">
    <PortCounts out="1"/>
    <P Name="Position">[840, 1450, 870, 1480]</P>
    <P Name="ZOrder">498</P>
    <P Name="SineType">Sample based</P>
    <P Name="Amplitude">120</P>
    <P Name="Bias">121</P>
    <P Name="Phase">128</P>
    <P Name="Samples">100</P>
    <P Name="Offset">75</P>
    <P Name="SampleTime">0.01</P>
  </Block>
  <Block BlockType="M-S-Function" Name="UDP Configure" SID="4211">
    <PortCounts/>
    <P Name="Position">[1090, 855, 1245, 925]</P>
    <P Name="ZOrder">505</P>
    <P Name="BackgroundColor">[1.000000, 0.666667, 0.000000]</P>
    <P Name="AncestorBlock">GOcontroll_Moduline_Target/Network/UDP/UDP Configure</P>
    <P Name="LibraryVersion">0.33</P>
    <List ListType="RTWdata">
      <P Name="port">9001</P>
      <P Name="ip">0.0.0.0</P>
      <P Name="broadcast">0</P>
      <P Name="socket_id">led_sinus</P>
    </List>
    <P Name="FunctionName">sfcn_UDPConfig</P>
    <Mask SelfModifiable="on">
      <Type>UDP Configure</Type>
      <Display RunInitForIconRedraw="on" IconUnits="pixels">fprintf(&apos;Configure UDP socket\n IP: %s\nPort: %d\n%s&apos;,ip,port,broadcastStr);
text(2, 6, ert_linux_target_version());</Display>
      <Description>Block to configure a UDP connection

Setting the ip to 0.0.0.0 makes the controller accept messages on all interfaces.
Set it to the ip of a specific interface to limit this.

Allowing broadcasting enables you to send messages to a full range of ip addresses, for example:
192.168.255.255 sends messages to 192.168.1.1, 192.168.2.1 ... 192.168.1.2, 192.168.1.3...</Description>
      <Initialization>    if broadcast == 0
        broadcastStr = &quot;Not broadcasting&quot;;
    else
        broadcastStr = &quot;Broadcasting&quot;;
    end
    if ~is_ip(ip)
        error(&apos;Entered IP is not valid&apos;);
    end
    if mod(port,1) &gt; 0 || port &lt; intmin(&apos;uint16&apos;) || port &gt; intmax(&apos;uint16&apos;)
        error(&apos;Entered Port is not valid, it should be an integer from 0-65335&apos;);
    end

    blockPath = split(gcb, &apos;/&apos;);
    configures = find_system(blockPath(1),&apos;RegExp&apos;, &apos;on&apos;,&apos;FollowLinks&apos;, &apos;on&apos;,&apos;MaskType&apos;,&apos;UDP Configure&apos;);
    options = cell(1,length(configures));
    for idx = 1:length(configures)
        options(idx) = get_param(configures(idx),&apos;socket_id&apos;);
    end

    if length(unique(options)) ~= length(options)
        error(&apos;Socket id is already in use, set a unique socket id&apos;);
    end

	modelRTWFields = struct(&apos;port&apos;, num2str(port), &apos;ip&apos;, ip, &apos;broadcast&apos;, num2str(broadcast), &apos;socket_id&apos;, socket_id);

	% Insert modelRTWFields in the I/O block S-Function containing the Tag starting with &apos;HANcoder_TARGET_&apos;
	HANcoder_TARGET_DataBlock = find_system(gcb, &apos;RegExp&apos;, &apos;on&apos;, &apos;FollowLinks&apos;, &apos;on&apos;, &apos;LookUnderMasks&apos;, &apos;all&apos;, &apos;BlockType&apos;, &apos;M-S-Function&apos;);
	set_param(HANcoder_TARGET_DataBlock{1}, &apos;RTWdata&apos;, modelRTWFields);</Initialization>
      <MaskParameter Name="socket_id" Type="edit" Evaluate="off" Tunable="off">
        <Prompt>Socket id</Prompt>
        <Value>led_sinus</Value>
      </MaskParameter>
      <MaskParameter Name="port" Type="edit" Tunable="off">
        <Prompt>The port on which to listen/send</Prompt>
        <Value>9001</Value>
      </MaskParameter>
      <MaskParameter Name="ip" Type="edit">
        <Prompt>The ip on which to listen/send</Prompt>
        <Value>&apos;0.0.0.0&apos;</Value>
      </MaskParameter>
      <MaskParameter Name="broadcast" Type="checkbox">
        <Prompt>Allow broadcasting of sent messages</Prompt>
        <Value>off</Value>
      </MaskParameter>
      <DialogControl Type="Group" Name="DescGroupVar">
        <Prompt>%&lt;MaskType&gt;</Prompt>
        <DialogControl Type="Text" Name="DescTextVar">
          <Prompt>%&lt;MaskDescription&gt;</Prompt>
        </DialogControl>
      </DialogControl>
      <DialogControl Type="Group" Name="ParameterGroupVar">
        <Prompt>Parameters</Prompt>
        <DialogControl Type="Edit" Name="socket_id">
          <Prompt>Socket id</Prompt>
          <ControlOptions PromptLocation="left"/>
        </DialogControl>
        <DialogControl Type="Edit" Name="port">
          <Prompt>The port on which to listen/send</Prompt>
          <ControlOptions PromptLocation="left"/>
        </DialogControl>
        <DialogControl Type="Edit" Name="ip">
          <Prompt>The ip on which to listen/send</Prompt>
          <ControlOptions PromptLocation="left"/>
        </DialogControl>
        <DialogControl Type="CheckBox" Name="broadcast">
          <Prompt>Allow broadcasting of sent messages</Prompt>
        </DialogControl>
      </DialogControl>
    </Mask>
  </Block>
  <Block BlockType="S-Function" Name="UDP Receive" SID="4212">
    <PortCounts out="3"/>
    <P Name="Position">[1090, 1024, 1245, 1096]</P>
    <P Name="ZOrder">499</P>
    <P Name="BackgroundColor">[1.000000, 0.666667, 0.000000]</P>
    <P Name="AncestorBlock">GOcontroll_Moduline_Target/Network/UDP/UDP Receive</P>
    <P Name="LibraryVersion">0.33</P>
    <P Name="FunctionName">sfcn_UDPReceive</P>
    <P Name="Parameters">buff_len,socket_id,tsamp</P>
    <P Name="SFunctionDeploymentMode">off</P>
    <P Name="EnableBusSupport">off</P>
    <P Name="SFcnIsStateOwnerBlock">off</P>
    <Mask SelfModifiable="on">
      <Type>UDP Receive</Type>
      <Display RunInitForIconRedraw="on" IconUnits="pixels">fprintf(&apos;UDP Receive&apos;);
text(2, 6, ert_linux_target_version());
port_label(&apos;output&apos;, 1, &apos;function call&apos;);
port_label(&apos;output&apos;, 2, &apos;message&apos;);
port_label(&apos;output&apos;, 3, &apos;message length&apos;);</Display>
      <Description>Receive all UDP messages

For every message received this block will call the functions attached to the function call output.
In these function calls you can then use the message and message length outputs to process/buffer the received messages.

Outputs:
function call:
Attach to a function call subsystem or something like it to call that function every time a message is received.

message:
The uint8 vector received from the socket. The length of this vector is likely longer than the actual number of bytes received.

message length:
The number of bytes actually received, use this to get the actual fresh bytes from the message.

Parameters:
buffer size:
The maximum number of bytes that can be read from the socket in one message, this also determines the width of the message vector.</Description>
      <MaskParameter Name="tsamp" Type="edit">
        <Prompt>Sample time</Prompt>
        <Value>-1</Value>
      </MaskParameter>
      <MaskParameter Name="socket_id" Type="combobox" Evaluate="off" Tunable="off">
        <Prompt>Socket</Prompt>
        <Value>led_sinus</Value>
        <Callback>blockPath = split(gcb, &apos;/&apos;);
configures = find_system(blockPath(1),&apos;RegExp&apos;, &apos;on&apos;,&apos;FollowLinks&apos;, &apos;on&apos;,&apos;MaskType&apos;,&apos;UDP Configure&apos;);
mask = Simulink.Mask.get(gcb);
pars = mask.Parameters;
options = cell(1,length(configures));
for idx = 1:length(configures)
    options(idx) = get_param(configures(idx),&apos;socket_id&apos;);
end
mask.getParameter(&apos;socket_id&apos;).TypeOptions = options;</Callback>
        <TypeOptions>
          <Option>id</Option>
          <Option>led_sinus</Option>
        </TypeOptions>
      </MaskParameter>
      <MaskParameter Name="buff_len" Type="edit" Tunable="off">
        <Prompt>Buffer size</Prompt>
        <Value>5</Value>
      </MaskParameter>
      <DialogControl Type="Group" Name="DescGroupVar">
        <Prompt>%&lt;MaskType&gt;</Prompt>
        <DialogControl Type="Text" Name="DescTextVar">
          <Prompt>%&lt;MaskDescription&gt;</Prompt>
        </DialogControl>
      </DialogControl>
      <DialogControl Type="Group" Name="ParameterGroupVar">
        <Prompt>Parameters</Prompt>
        <DialogControl Type="Edit" Name="tsamp">
          <Prompt>Sample time</Prompt>
          <ControlOptions PromptLocation="left"/>
        </DialogControl>
        <DialogControl Type="ComboBox" Name="socket_id">
          <Prompt>Socket</Prompt>
          <ControlOptions PromptLocation="left"/>
        </DialogControl>
        <DialogControl Type="Edit" Name="buff_len">
          <Prompt>Buffer size</Prompt>
          <ControlOptions PromptLocation="left"/>
        </DialogControl>
      </DialogControl>
    </Mask>
  </Block>
  <Block BlockType="M-S-Function" Name="UDP Send" SID="4213">
    <PortCounts in="1"/>
    <P Name="Position">[1380, 1347, 1565, 1403]</P>
    <P Name="ZOrder">462</P>
    <P Name="BackgroundColor">[1.000000, 0.666667, 0.000000]</P>
    <P Name="AncestorBlock">GOcontroll_Moduline_Target/Network/UDP/UDP Send</P>
    <P Name="LibraryVersion">0.33</P>
    <List ListType="RTWdata">
      <P Name="port">9001</P>
      <P Name="ip">127.0.0.1</P>
      <P Name="socket_id">led_sinus</P>
    </List>
    <P Name="FunctionName">sfcn_UDPSend</P>
    <P Name="Parameters">tsamp,ip,port</P>
    <Mask SelfModifiable="on">
      <Type>UDP Send</Type>
      <Display RunInitForIconRedraw="on" IconUnits="pixels">fprintf(&apos;UDP Send\nIP: %s\nPort: %d&apos;,ip,port);
port_label(&apos;input&apos;, 1, &apos;message&apos;);
text(2, 6, ert_linux_target_version());</Display>
      <Description>Send a UDP message to the designated address.

The Message input should be a uint8 vector, if you end up with a [1xn] or [nx1] matrix, use the reshape block to turn it into a vector.

IP address should be a valid IP address as a string

Port should be a within the range of a uint16</Description>
      <Initialization>    if ~is_ip(ip)
        error(&apos;Entered IP is not valid&apos;);
    end
    if mod(port,1) &gt; 0 || port &lt; intmin(&apos;uint16&apos;) || port &gt; intmax(&apos;uint16&apos;)
        error(&apos;Entered Port is not valid, it should be an integer from 0-65335&apos;);
    end
    % update RTWdata to call WriteRTW again
    modelRTWFields = struct(&apos;port&apos;, num2str(port), &apos;ip&apos;, ip, &apos;socket_id&apos;, socket_id);

    % Insert modelRTWFields in the I/O block S-Function containing the Tag starting with &apos;HANcoder_TARGET_&apos;
    HANcoder_TARGET_DataBlock = find_system(gcb, &apos;RegExp&apos;, &apos;on&apos;, &apos;FollowLinks&apos;, &apos;on&apos;, &apos;LookUnderMasks&apos;, &apos;all&apos;, &apos;BlockType&apos;, &apos;M-S-Function&apos;);
    set_param(HANcoder_TARGET_DataBlock{1}, &apos;RTWdata&apos;, modelRTWFields);</Initialization>
      <MaskParameter Name="socket_id" Type="combobox" Evaluate="off">
        <Prompt>Socket</Prompt>
        <Value>led_sinus</Value>
        <Callback>blockPath = split(gcb, &apos;/&apos;);
configures = find_system(blockPath(1),&apos;RegExp&apos;, &apos;on&apos;,&apos;FollowLinks&apos;, &apos;on&apos;,&apos;MaskType&apos;,&apos;UDP Configure&apos;);
mask = Simulink.Mask.get(gcb);
pars = mask.Parameters;
options = cell(1,length(configures));
for idx = 1:length(configures)
    options(idx) = get_param(configures(idx),&apos;socket_id&apos;);
end
pars(1).TypeOptions = options;</Callback>
        <TypeOptions>
          <Option>led_sinus</Option>
        </TypeOptions>
      </MaskParameter>
      <MaskParameter Name="ip" Type="edit">
        <Prompt>The IP address to send to</Prompt>
        <Value>&apos;127.0.0.1&apos;</Value>
      </MaskParameter>
      <MaskParameter Name="port" Type="edit">
        <Prompt>The port to send to</Prompt>
        <Value>9001</Value>
      </MaskParameter>
      <MaskParameter Name="tsamp" Type="edit">
        <Prompt>Sample time</Prompt>
        <Value>0.01</Value>
      </MaskParameter>
      <DialogControl Type="Group" Name="DescGroupVar">
        <Prompt>%&lt;MaskType&gt;</Prompt>
        <DialogControl Type="Text" Name="DescTextVar">
          <Prompt>%&lt;MaskDescription&gt;</Prompt>
        </DialogControl>
      </DialogControl>
      <DialogControl Type="Group" Name="ParameterGroupVar">
        <Prompt>Simulink:studio:ToolBarParametersMenu</Prompt>
        <DialogControl Type="ComboBox" Name="socket_id">
          <Prompt>Socket</Prompt>
          <ControlOptions PromptLocation="left"/>
        </DialogControl>
        <DialogControl Type="Edit" Name="ip">
          <Prompt>The IP address to send to</Prompt>
          <ControlOptions PromptLocation="left"/>
        </DialogControl>
        <DialogControl Type="Edit" Name="port">
          <Prompt>The port to send to</Prompt>
          <ControlOptions PromptLocation="left"/>
        </DialogControl>
        <DialogControl Type="Edit" Name="tsamp">
          <Prompt>Sample time</Prompt>
          <ControlOptions PromptLocation="left"/>
        </DialogControl>
      </DialogControl>
    </Mask>
  </Block>
  <Block BlockType="Concatenate" Name="Vector&#xA;Concatenate" SID="4214">
    <PortCounts in="2" out="1"/>
    <P Name="Position">[1360, 1343, 1365, 1407]</P>
    <P Name="ZOrder">502</P>
  </Block>
  <Line>
    <P Name="ZOrder">1</P>
    <P Name="Src">4214#out:1</P>
    <P Name="Dst">4213#in:1</P>
  </Line>
  <Line>
    <P Name="ZOrder">15</P>
    <P Name="Src">4212#out:3</P>
    <P Name="Dst">4182#in:2</P>
  </Line>
  <Line>
    <P Name="ZOrder">3</P>
    <P Name="Src">4212#out:2</P>
    <P Name="Dst">4182#in:1</P>
  </Line>
  <Line>
    <P Name="ZOrder">4</P>
    <P Name="Src">4212#out:1</P>
    <P Name="Points">[115, 0]</P>
    <P Name="Dst">4182#trigger</P>
  </Line>
  <Line>
    <P Name="ZOrder">5</P>
    <P Name="Src">4209#out:1</P>
    <P Name="Dst">4181#in:1</P>
  </Line>
  <Line>
    <P Name="ZOrder">6</P>
    <P Name="Src">4206#out:1</P>
    <P Name="Dst">4178#in:1</P>
  </Line>
  <Line>
    <P Name="ZOrder">7</P>
    <P Name="Src">4177#out:1</P>
    <P Name="Dst">4214#in:1</P>
  </Line>
  <Line>
    <P Name="ZOrder">8</P>
    <P Name="Src">4207#out:1</P>
    <P Name="Dst">4179#in:1</P>
  </Line>
  <Line>
    <P Name="ZOrder">9</P>
    <P Name="Src">4179#out:1</P>
    <P Name="Dst">4176#in:2</P>
  </Line>
  <Line>
    <P Name="ZOrder">10</P>
    <P Name="Src">4176#out:1</P>
    <P Name="Points">[130, 0]</P>
    <P Name="Dst">4214#in:2</P>
  </Line>
  <Line>
    <P Name="ZOrder">11</P>
    <P Name="Src">4181#out:1</P>
    <P Name="Dst">4176#in:4</P>
  </Line>
  <Line>
    <P Name="ZOrder">12</P>
    <P Name="Src">4208#out:1</P>
    <P Name="Dst">4180#in:1</P>
  </Line>
  <Line>
    <P Name="ZOrder">13</P>
    <P Name="Src">4178#out:1</P>
    <P Name="Dst">4176#in:1</P>
  </Line>
  <Line>
    <P Name="ZOrder">14</P>
    <P Name="Src">4180#out:1</P>
    <P Name="Dst">4176#in:3</P>
  </Line>
  <Annotation SID="4227">
    <P Name="Name">&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.0//EN&quot; &quot;http://www.w3.org/TR/REC-html40/strict.dtd&quot;&gt;
&lt;html&gt;&lt;head&gt;&lt;meta name=&quot;qrichtext&quot; content=&quot;1&quot; /&gt;&lt;style type=&quot;text/css&quot;&gt;
p, li { white-space: pre-wrap; }
&lt;/style&gt;&lt;/head&gt;&lt;body align=&quot;left&quot; style=&quot; font-family:&apos;Helvetica&apos;; font-size:10px; font-weight:400; font-style:normal;&quot;&gt;
&lt;p align=&quot;center&quot; style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;The UDP blocks leave it up to you to implement a protocol.&lt;/p&gt;
&lt;p align=&quot;center&quot; style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;Here a simple 1 byte identifier is used but when implementing a binary protocol&lt;/p&gt;
&lt;p align=&quot;center&quot; style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;it is a good idea to build some kind of header containing a protocol version for example.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</P>
    <P Name="Position">[1028, 1167, 1415, 1208]</P>
    <P Name="InternalMargins">[0, 0, 0, 0]</P>
    <P Name="HorizontalAlignment">left</P>
    <P Name="VerticalAlignment">top</P>
    <P Name="Interpreter">rich</P>
    <P Name="ZOrder">-1</P>
  </Annotation>
  <Annotation SID="4217">
    <P Name="Name">Only one UDP Receive allowed per socket.</P>
    <P Name="Position">[983, 972, 1503, 1142]</P>
    <P Name="InternalMargins">[0, 0, 0, 0]</P>
    <P Name="FixedHeight">on</P>
    <P Name="FixedWidth">on</P>
    <P Name="HorizontalAlignment">left</P>
    <P Name="VerticalAlignment">top</P>
    <P Name="ForegroundColor">[0.901961, 0.901961, 1.000000]</P>
    <P Name="BackgroundColor">[0.901961, 0.901961, 1.000000]</P>
    <P Name="DropShadow">on</P>
    <P Name="AnnotationType">area_annotation</P>
    <P Name="ZOrder">34</P>
    <P Name="FontSize">12</P>
  </Annotation>
  <Annotation SID="4216">
    <P Name="Name">Use Byte Pack to define a protocol with
specific data types, see the definitions in
GOcontroll_Linux_startup.m</P>
    <P Name="Position">[1058, 1234, 1283, 1524]</P>
    <P Name="InternalMargins">[0, 0, 0, 0]</P>
    <P Name="FixedHeight">on</P>
    <P Name="FixedWidth">on</P>
    <P Name="HorizontalAlignment">left</P>
    <P Name="VerticalAlignment">top</P>
    <P Name="ForegroundColor">[0.901961, 0.901961, 1.000000]</P>
    <P Name="BackgroundColor">[0.901961, 0.901961, 1.000000]</P>
    <P Name="DropShadow">on</P>
    <P Name="AnnotationType">area_annotation</P>
    <P Name="ZOrder">35</P>
    <P Name="FontSize">12</P>
  </Annotation>
  <Annotation SID="4215">
    <P Name="Name">Use the loopback interface, add 0 in front as  a
message ID
</P>
    <P Name="Position">[1292, 1291, 1582, 1436]</P>
    <P Name="InternalMargins">[0, 0, 0, 0]</P>
    <P Name="FixedHeight">on</P>
    <P Name="FixedWidth">on</P>
    <P Name="HorizontalAlignment">left</P>
    <P Name="VerticalAlignment">top</P>
    <P Name="ForegroundColor">[0.901961, 0.901961, 1.000000]</P>
    <P Name="BackgroundColor">[0.901961, 0.901961, 1.000000]</P>
    <P Name="DropShadow">on</P>
    <P Name="AnnotationType">area_annotation</P>
    <P Name="ZOrder">36</P>
    <P Name="FontSize">12</P>
  </Annotation>
</System>

__MWOPC_PART_BEGIN__ /simulink/systems/system_4182.xml
<?xml version="1.0" encoding="utf-8"?>
<System>
  <P Name="Location">[0, 27, 3840, 2160]</P>
  <P Name="PaperType">usletter</P>
  <P Name="PaperUnits">inches</P>
  <P Name="TiledPaperMargins">[0.500000, 0.500000, 0.500000, 0.500000]</P>
  <P Name="ZoomFactor">200</P>
  <Block BlockType="Inport" Name="message" SID="4183">
    <P Name="Position">[120, 248, 150, 262]</P>
    <P Name="ZOrder">-1</P>
  </Block>
  <Block BlockType="Inport" Name="message length" SID="4218">
    <P Name="Position">[120, 143, 150, 157]</P>
    <P Name="ZOrder">506</P>
    <P Name="Port">2</P>
  </Block>
  <Block BlockType="TriggerPort" Name="function" SID="4184">
    <PortCounts/>
    <P Name="Position">[290, 10, 310, 30]</P>
    <P Name="ZOrder">-2</P>
    <P Name="TriggerType">function-call</P>
    <P Name="VariantControl">(inherit)</P>
    <P Name="StatesWhenEnabling">held</P>
  </Block>
  <Block BlockType="Reference" Name="Compare&#xA;To Constant" SID="4222">
    <PortCounts in="1" out="1"/>
    <P Name="Position">[285, 135, 315, 165]</P>
    <P Name="ZOrder">508</P>
    <P Name="LibraryVersion">5.1</P>
    <P Name="SourceBlock">simulink/Logic and Bit
Operations/Compare
To Constant</P>
    <P Name="SourceType">Compare To Constant</P>
    <InstanceData>
      <P Name="RTWMemSecFuncInitTerm">Inherit from model</P>
      <P Name="RTWMemSecFuncExecute">Inherit from model</P>
      <P Name="RTWMemSecDataConstants">Inherit from model</P>
      <P Name="RTWMemSecDataInternal">Inherit from model</P>
      <P Name="RTWMemSecDataParameters">Inherit from model</P>
      <P Name="ContentPreviewEnabled">on</P>
      <P Name="relop">==</P>
      <P Name="const">5</P>
      <P Name="OutDataTypeStr">boolean</P>
      <P Name="ZeroCross">on</P>
    </InstanceData>
  </Block>
  <Block BlockType="SubSystem" Name="message len ok" SID="4219">
    <PortCounts in="1" enable="1"/>
    <P Name="Position">[340, 212, 530, 298]</P>
    <P Name="ZOrder">507</P>
    <System Ref="system_4219"/>
  </Block>
  <Line>
    <P Name="ZOrder">12</P>
    <P Name="Src">4183#out:1</P>
    <P Name="Dst">4219#in:1</P>
  </Line>
  <Line>
    <P Name="ZOrder">13</P>
    <P Name="Src">4218#out:1</P>
    <P Name="Dst">4222#in:1</P>
  </Line>
  <Line>
    <P Name="ZOrder">14</P>
    <P Name="Src">4222#out:1</P>
    <P Name="Points">[115, 0]</P>
    <P Name="Dst">4219#enable</P>
  </Line>
</System>

__MWOPC_PART_BEGIN__ /simulink/systems/system_4189.xml
<?xml version="1.0" encoding="utf-8"?>
<System>
  <P Name="Location">[0, 27, 3840, 2160]</P>
  <P Name="PaperType">usletter</P>
  <P Name="PaperUnits">inches</P>
  <P Name="TiledPaperMargins">[0.500000, 0.500000, 0.500000, 0.500000]</P>
  <P Name="ZoomFactor">175</P>
  <Block BlockType="Inport" Name="In1" SID="4190">
    <P Name="Position">[65, 208, 95, 222]</P>
    <P Name="ZOrder">500</P>
  </Block>
  <Block BlockType="EnablePort" Name="Enable" SID="4191">
    <PortCounts/>
    <P Name="Position">[145, -125, 165, -105]</P>
    <P Name="ZOrder">501</P>
  </Block>
  <Block BlockType="S-Function" Name="Byte Unpack1" SID="4192">
    <PortCounts in="1" out="4"/>
    <P Name="Position">[115, 91, 195, 339]</P>
    <P Name="ZOrder">497</P>
    <P Name="AncestorBlock">etargetslib/Byte Unpack</P>
    <P Name="LibraryVersion">14.0</P>
    <P Name="FunctionName">byte2any</P>
    <P Name="Parameters">dimensionsout, datatypesout, byteAlign</P>
    <P Name="SFunctionDeploymentMode">off</P>
    <P Name="EnableBusSupport">off</P>
    <P Name="SFcnIsStateOwnerBlock">off</P>
    <Mask SelfModifiable="on">
      <Type>Byte Unpack</Type>
      <Display RunInitForIconRedraw="off" IconUnits="normalized">color(&apos;blue&apos;);
text(0.95, 0.90, &apos;&apos;, ...
                &apos;horizontalalignment&apos;, &apos;right&apos;);
color(&apos;black&apos;);
text(0.50, 0.12, &apos;Byte Unpack&apos;, ...
                &apos;horizontalAlignment&apos;,&apos;center&apos;);
</Display>
      <Description>Unpack a binary byte vector to extract data. Insert after a UDP Recv block to break-up a UDP packet into its constituent data vectors.
</Description>
      <Initialization>[dimensionsout, datatypesout]= byteunpack_callback(dimensions, datatypes);</Initialization>
      <Help>eval(&apos;linkfoundation.util.openBlockHelp(&apos;&apos;etargetslibbyteunpack&apos;&apos;)&apos;);</Help>
      <MaskParameter Name="dimensions" Type="edit" Tunable="off">
        <Prompt>Output port dimensions (cell array):</Prompt>
        <Value>{1,1,1,1};</Value>
      </MaskParameter>
      <MaskParameter Name="datatypes" Type="edit" Tunable="off">
        <Prompt>Output port data types (cell array):</Prompt>
        <Value>{&apos;uint8&apos;,&apos;uint8&apos;,&apos;uint8&apos;,&apos;uint8&apos;}</Value>
      </MaskParameter>
      <MaskParameter Name="byteAlign" Type="popup" Tunable="off">
        <Prompt>Byte alignment:</Prompt>
        <Value>1</Value>
        <TypeOptions>
          <Option>1</Option>
          <Option>2</Option>
          <Option>4</Option>
          <Option>8</Option>
        </TypeOptions>
      </MaskParameter>
    </Mask>
  </Block>
  <Block BlockType="M-S-Function" Name="Enclosure LED1" SID="4193">
    <P Name="Tag">HANcoder_TARGET_STM32_Olimexino</P>
    <PortCounts in="1"/>
    <P Name="Position">[335, 103, 485, 147]</P>
    <P Name="ZOrder">491</P>
    <P Name="AncestorBlock">GOcontroll_Moduline_Target/Enclosure LED&apos;s/Enclosure LED</P>
    <P Name="LibraryVersion">0.33</P>
    <P Name="UserDataPersistent">on</P>
    <P Name="UserData" Ref="bdmxdata:UserData_4193"/>
    <List ListType="RTWdata">
      <P Name="led">1</P>
      <P Name="color">3</P>
    </List>
    <P Name="FunctionName">sfcn_gocontroll_status_led</P>
    <P Name="Parameters">tsamp</P>
    <Mask>
      <Type>Enclosure LED&apos;s</Type>
      <Display RunInitForIconRedraw="on" IconUnits="pixels">fprintf(&apos;Status LED %d\nColor: %s&apos;,led,colorInfoStr);
text(2, 6, ert_linux_target_version());</Display>
      <Description>The Moduline controller is equipped with 4 RGB status LED&apos;s. To control them, simply configure the mask ( LED and color) and control them using uint8 values. 

Note: Moduline IV HW &gt;= 3.02 has duty cycle controlled LED&apos;s. The intensity can be set from 0 (0%) to 255 (100%). 

LED: Select the LED that is needs to be controlled.

Color: Select the color the LED needs to illuminate.</Description>
      <Initialization>    colorInfoString = {&apos;Red&apos;, &apos;Green&apos;, &apos;Blue&apos;};
    colorInfoStr = colorInfoString{color};

    % update RTWdata to run WriteRTW again
    modelRTWFields = struct(&apos;led&apos;, int2str(led),&apos;color&apos;, int2str(color));
    % Insert modelRTWFields in the I/O block S-Function containing the Tag starting with &apos;HANcoder_TARGET_&apos;
    HANcoder_TARGET_DataBlock = find_system(gcb, &apos;RegExp&apos;, &apos;on&apos;, &apos;FollowLinks&apos;, &apos;on&apos;, &apos;LookUnderMasks&apos;, &apos;all&apos;, &apos;BlockType&apos;, &apos;M-S-Function&apos;);
    set_param(HANcoder_TARGET_DataBlock{1}, &apos;RTWdata&apos;, modelRTWFields);</Initialization>
      <MaskParameter Name="tsamp" Type="edit">
        <Prompt>Sample time</Prompt>
        <Value>-1</Value>
      </MaskParameter>
      <MaskParameter Name="led" Type="popup" Tunable="off">
        <Prompt>Led</Prompt>
        <Value>1</Value>
        <TypeOptions>
          <Option>1</Option>
          <Option>2</Option>
          <Option>3</Option>
          <Option>4</Option>
        </TypeOptions>
      </MaskParameter>
      <MaskParameter Name="color" Type="popup" Tunable="off">
        <Prompt>Color</Prompt>
        <Value>Blue</Value>
        <TypeOptions>
          <Option>Red</Option>
          <Option>Green</Option>
          <Option>Blue</Option>
        </TypeOptions>
      </MaskParameter>
      <DialogControl Type="Group" Name="DescGroupVar">
        <Prompt>%&lt;MaskType&gt;</Prompt>
        <DialogControl Type="Text" Name="DescTextVar">
          <Prompt>%&lt;MaskDescription&gt;</Prompt>
        </DialogControl>
      </DialogControl>
      <DialogControl Type="Group" Name="ParameterGroupVar">
        <Prompt>Parameters</Prompt>
        <DialogControl Type="Edit" Name="tsamp">
          <Prompt>Sample time</Prompt>
          <ControlOptions PromptLocation="left"/>
        </DialogControl>
        <DialogControl Type="Popup" Name="led">
          <Prompt>Led</Prompt>
          <ControlOptions PromptLocation="left"/>
        </DialogControl>
        <DialogControl Type="Popup" Name="color">
          <Prompt>Color</Prompt>
          <ControlOptions PromptLocation="left"/>
        </DialogControl>
      </DialogControl>
    </Mask>
  </Block>
  <Block BlockType="M-S-Function" Name="Enclosure LED2" SID="4194">
    <P Name="Tag">HANcoder_TARGET_STM32_Olimexino</P>
    <PortCounts in="1"/>
    <P Name="Position">[335, 223, 485, 267]</P>
    <P Name="ZOrder">492</P>
    <P Name="AncestorBlock">GOcontroll_Moduline_Target/Enclosure LED&apos;s/Enclosure LED</P>
    <P Name="LibraryVersion">0.33</P>
    <P Name="UserDataPersistent">on</P>
    <P Name="UserData" Ref="bdmxdata:UserData_4194"/>
    <List ListType="RTWdata">
      <P Name="led">3</P>
      <P Name="color">3</P>
    </List>
    <P Name="FunctionName">sfcn_gocontroll_status_led</P>
    <P Name="Parameters">tsamp</P>
    <Mask>
      <Type>Enclosure LED&apos;s</Type>
      <Display RunInitForIconRedraw="on" IconUnits="pixels">fprintf(&apos;Status LED %d\nColor: %s&apos;,led,colorInfoStr);
text(2, 6, ert_linux_target_version());</Display>
      <Description>The Moduline controller is equipped with 4 RGB status LED&apos;s. To control them, simply configure the mask ( LED and color) and control them using uint8 values. 

Note: Moduline IV HW &gt;= 3.02 has duty cycle controlled LED&apos;s. The intensity can be set from 0 (0%) to 255 (100%). 

LED: Select the LED that is needs to be controlled.

Color: Select the color the LED needs to illuminate.</Description>
      <Initialization>    colorInfoString = {&apos;Red&apos;, &apos;Green&apos;, &apos;Blue&apos;};
    colorInfoStr = colorInfoString{color};

    % update RTWdata to run WriteRTW again
    modelRTWFields = struct(&apos;led&apos;, int2str(led),&apos;color&apos;, int2str(color));
    % Insert modelRTWFields in the I/O block S-Function containing the Tag starting with &apos;HANcoder_TARGET_&apos;
    HANcoder_TARGET_DataBlock = find_system(gcb, &apos;RegExp&apos;, &apos;on&apos;, &apos;FollowLinks&apos;, &apos;on&apos;, &apos;LookUnderMasks&apos;, &apos;all&apos;, &apos;BlockType&apos;, &apos;M-S-Function&apos;);
    set_param(HANcoder_TARGET_DataBlock{1}, &apos;RTWdata&apos;, modelRTWFields);</Initialization>
      <MaskParameter Name="tsamp" Type="edit">
        <Prompt>Sample time</Prompt>
        <Value>-1</Value>
      </MaskParameter>
      <MaskParameter Name="led" Type="popup" Tunable="off">
        <Prompt>Led</Prompt>
        <Value>3</Value>
        <TypeOptions>
          <Option>1</Option>
          <Option>2</Option>
          <Option>3</Option>
          <Option>4</Option>
        </TypeOptions>
      </MaskParameter>
      <MaskParameter Name="color" Type="popup" Tunable="off">
        <Prompt>Color</Prompt>
        <Value>Blue</Value>
        <TypeOptions>
          <Option>Red</Option>
          <Option>Green</Option>
          <Option>Blue</Option>
        </TypeOptions>
      </MaskParameter>
      <DialogControl Type="Group" Name="DescGroupVar">
        <Prompt>%&lt;MaskType&gt;</Prompt>
        <DialogControl Type="Text" Name="DescTextVar">
          <Prompt>%&lt;MaskDescription&gt;</Prompt>
        </DialogControl>
      </DialogControl>
      <DialogControl Type="Group" Name="ParameterGroupVar">
        <Prompt>Parameters</Prompt>
        <DialogControl Type="Edit" Name="tsamp">
          <Prompt>Sample time</Prompt>
          <ControlOptions PromptLocation="left"/>
        </DialogControl>
        <DialogControl Type="Popup" Name="led">
          <Prompt>Led</Prompt>
          <ControlOptions PromptLocation="left"/>
        </DialogControl>
        <DialogControl Type="Popup" Name="color">
          <Prompt>Color</Prompt>
          <ControlOptions PromptLocation="left"/>
        </DialogControl>
      </DialogControl>
    </Mask>
  </Block>
  <Block BlockType="M-S-Function" Name="Enclosure LED3" SID="4224">
    <P Name="Tag">HANcoder_TARGET_STM32_Olimexino</P>
    <PortCounts in="1"/>
    <P Name="Position">[335, 163, 485, 207]</P>
    <P Name="ZOrder">502</P>
    <P Name="AncestorBlock">GOcontroll_Moduline_Target/Network/UDP/UDP Example/Decode/message len ok/message id ok/Enclosure LED2</P>
    <P Name="LibraryVersion">0.33</P>
    <P Name="UserDataPersistent">on</P>
    <P Name="UserData" Ref="bdmxdata:UserData_4224"/>
    <List ListType="RTWdata">
      <P Name="led">2</P>
      <P Name="color">3</P>
    </List>
    <P Name="FunctionName">sfcn_gocontroll_status_led</P>
    <P Name="Parameters">tsamp</P>
    <Mask>
      <Type>Enclosure LED&apos;s</Type>
      <Display RunInitForIconRedraw="on" IconUnits="pixels">fprintf(&apos;Status LED %d\nColor: %s&apos;,led,colorInfoStr);
text(2, 6, ert_linux_target_version());</Display>
      <Description>The Moduline controller is equipped with 4 RGB status LED&apos;s. To control them, simply configure the mask ( LED and color) and control them using uint8 values. 

Note: Moduline IV HW &gt;= 3.02 has duty cycle controlled LED&apos;s. The intensity can be set from 0 (0%) to 255 (100%). 

LED: Select the LED that is needs to be controlled.

Color: Select the color the LED needs to illuminate.</Description>
      <Initialization>    colorInfoString = {&apos;Red&apos;, &apos;Green&apos;, &apos;Blue&apos;};
    colorInfoStr = colorInfoString{color};

    % update RTWdata to run WriteRTW again
    modelRTWFields = struct(&apos;led&apos;, int2str(led),&apos;color&apos;, int2str(color));
    % Insert modelRTWFields in the I/O block S-Function containing the Tag starting with &apos;HANcoder_TARGET_&apos;
    HANcoder_TARGET_DataBlock = find_system(gcb, &apos;RegExp&apos;, &apos;on&apos;, &apos;FollowLinks&apos;, &apos;on&apos;, &apos;LookUnderMasks&apos;, &apos;all&apos;, &apos;BlockType&apos;, &apos;M-S-Function&apos;);
    set_param(HANcoder_TARGET_DataBlock{1}, &apos;RTWdata&apos;, modelRTWFields);</Initialization>
      <MaskParameter Name="tsamp" Type="edit">
        <Prompt>Sample time</Prompt>
        <Value>-1</Value>
      </MaskParameter>
      <MaskParameter Name="led" Type="popup" Tunable="off">
        <Prompt>Led</Prompt>
        <Value>2</Value>
        <TypeOptions>
          <Option>1</Option>
          <Option>2</Option>
          <Option>3</Option>
          <Option>4</Option>
        </TypeOptions>
      </MaskParameter>
      <MaskParameter Name="color" Type="popup" Tunable="off">
        <Prompt>Color</Prompt>
        <Value>Blue</Value>
        <TypeOptions>
          <Option>Red</Option>
          <Option>Green</Option>
          <Option>Blue</Option>
        </TypeOptions>
      </MaskParameter>
      <DialogControl Type="Group" Name="DescGroupVar">
        <Prompt>%&lt;MaskType&gt;</Prompt>
        <DialogControl Type="Text" Name="DescTextVar">
          <Prompt>%&lt;MaskDescription&gt;</Prompt>
        </DialogControl>
      </DialogControl>
      <DialogControl Type="Group" Name="ParameterGroupVar">
        <Prompt>Parameters</Prompt>
        <DialogControl Type="Edit" Name="tsamp">
          <Prompt>Sample time</Prompt>
          <ControlOptions PromptLocation="left"/>
        </DialogControl>
        <DialogControl Type="Popup" Name="led">
          <Prompt>Led</Prompt>
          <ControlOptions PromptLocation="left"/>
        </DialogControl>
        <DialogControl Type="Popup" Name="color">
          <Prompt>Color</Prompt>
          <ControlOptions PromptLocation="left"/>
        </DialogControl>
      </DialogControl>
    </Mask>
  </Block>
  <Block BlockType="M-S-Function" Name="Enclosure LED4" SID="4225">
    <P Name="Tag">HANcoder_TARGET_STM32_Olimexino</P>
    <PortCounts in="1"/>
    <P Name="Position">[335, 283, 485, 327]</P>
    <P Name="ZOrder">503</P>
    <P Name="AncestorBlock">GOcontroll_Moduline_Target/Network/UDP/UDP Example/Decode/message len ok/message id ok/Enclosure LED3</P>
    <P Name="LibraryVersion">0.33</P>
    <P Name="UserDataPersistent">on</P>
    <P Name="UserData" Ref="bdmxdata:UserData_4225"/>
    <List ListType="RTWdata">
      <P Name="led">4</P>
      <P Name="color">3</P>
    </List>
    <P Name="FunctionName">sfcn_gocontroll_status_led</P>
    <P Name="Parameters">tsamp</P>
    <Mask>
      <Type>Enclosure LED&apos;s</Type>
      <Display RunInitForIconRedraw="on" IconUnits="pixels">fprintf(&apos;Status LED %d\nColor: %s&apos;,led,colorInfoStr);
text(2, 6, ert_linux_target_version());</Display>
      <Description>The Moduline controller is equipped with 4 RGB status LED&apos;s. To control them, simply configure the mask ( LED and color) and control them using uint8 values. 

Note: Moduline IV HW &gt;= 3.02 has duty cycle controlled LED&apos;s. The intensity can be set from 0 (0%) to 255 (100%). 

LED: Select the LED that is needs to be controlled.

Color: Select the color the LED needs to illuminate.</Description>
      <Initialization>    colorInfoString = {&apos;Red&apos;, &apos;Green&apos;, &apos;Blue&apos;};
    colorInfoStr = colorInfoString{color};

    % update RTWdata to run WriteRTW again
    modelRTWFields = struct(&apos;led&apos;, int2str(led),&apos;color&apos;, int2str(color));
    % Insert modelRTWFields in the I/O block S-Function containing the Tag starting with &apos;HANcoder_TARGET_&apos;
    HANcoder_TARGET_DataBlock = find_system(gcb, &apos;RegExp&apos;, &apos;on&apos;, &apos;FollowLinks&apos;, &apos;on&apos;, &apos;LookUnderMasks&apos;, &apos;all&apos;, &apos;BlockType&apos;, &apos;M-S-Function&apos;);
    set_param(HANcoder_TARGET_DataBlock{1}, &apos;RTWdata&apos;, modelRTWFields);</Initialization>
      <MaskParameter Name="tsamp" Type="edit">
        <Prompt>Sample time</Prompt>
        <Value>-1</Value>
      </MaskParameter>
      <MaskParameter Name="led" Type="popup" Tunable="off">
        <Prompt>Led</Prompt>
        <Value>4</Value>
        <TypeOptions>
          <Option>1</Option>
          <Option>2</Option>
          <Option>3</Option>
          <Option>4</Option>
        </TypeOptions>
      </MaskParameter>
      <MaskParameter Name="color" Type="popup" Tunable="off">
        <Prompt>Color</Prompt>
        <Value>Blue</Value>
        <TypeOptions>
          <Option>Red</Option>
          <Option>Green</Option>
          <Option>Blue</Option>
        </TypeOptions>
      </MaskParameter>
      <DialogControl Type="Group" Name="DescGroupVar">
        <Prompt>%&lt;MaskType&gt;</Prompt>
        <DialogControl Type="Text" Name="DescTextVar">
          <Prompt>%&lt;MaskDescription&gt;</Prompt>
        </DialogControl>
      </DialogControl>
      <DialogControl Type="Group" Name="ParameterGroupVar">
        <Prompt>Parameters</Prompt>
        <DialogControl Type="Edit" Name="tsamp">
          <Prompt>Sample time</Prompt>
          <ControlOptions PromptLocation="left"/>
        </DialogControl>
        <DialogControl Type="Popup" Name="led">
          <Prompt>Led</Prompt>
          <ControlOptions PromptLocation="left"/>
        </DialogControl>
        <DialogControl Type="Popup" Name="color">
          <Prompt>Color</Prompt>
          <ControlOptions PromptLocation="left"/>
        </DialogControl>
      </DialogControl>
    </Mask>
  </Block>
  <Line>
    <P Name="ZOrder">1</P>
    <P Name="Src">4190#out:1</P>
    <P Name="Dst">4192#in:1</P>
  </Line>
  <Line>
    <P Name="ZOrder">9</P>
    <P Name="Src">4192#out:2</P>
    <P Name="Dst">4224#in:1</P>
  </Line>
  <Line>
    <P Name="ZOrder">3</P>
    <P Name="Src">4192#out:1</P>
    <P Name="Dst">4193#in:1</P>
  </Line>
  <Line>
    <P Name="ZOrder">7</P>
    <P Name="Src">4192#out:3</P>
    <P Name="Dst">4194#in:1</P>
  </Line>
  <Line>
    <P Name="ZOrder">8</P>
    <P Name="Src">4192#out:4</P>
    <P Name="Dst">4225#in:1</P>
  </Line>
  <Annotation SID="4197">
    <P Name="Name">Use Byte Unpack to define a protocol with
specific data types, see the definitions in
GOcontroll_Linux_startup.m</P>
    <P Name="Position">[20, 18, 280, 368]</P>
    <P Name="InternalMargins">[0, 0, 0, 0]</P>
    <P Name="FixedHeight">on</P>
    <P Name="FixedWidth">on</P>
    <P Name="HorizontalAlignment">left</P>
    <P Name="VerticalAlignment">top</P>
    <P Name="ForegroundColor">[0.901961, 0.901961, 1.000000]</P>
    <P Name="BackgroundColor">[0.901961, 0.901961, 1.000000]</P>
    <P Name="DropShadow">on</P>
    <P Name="AnnotationType">area_annotation</P>
    <P Name="ZOrder">4</P>
    <P Name="FontSize">12</P>
  </Annotation>
</System>

__MWOPC_PART_BEGIN__ /simulink/systems/system_4219.xml
<?xml version="1.0" encoding="utf-8"?>
<System>
  <P Name="Location">[0, 27, 3840, 2160]</P>
  <P Name="PaperType">usletter</P>
  <P Name="PaperUnits">inches</P>
  <P Name="TiledPaperMargins">[0.500000, 0.500000, 0.500000, 0.500000]</P>
  <P Name="ZoomFactor">200</P>
  <Block BlockType="Inport" Name="In1" SID="4220">
    <P Name="Position">[20, 128, 50, 142]</P>
    <P Name="ZOrder">506</P>
  </Block>
  <Block BlockType="EnablePort" Name="Enable" SID="4221">
    <PortCounts/>
    <P Name="Position">[625, 20, 645, 40]</P>
    <P Name="ZOrder">-2</P>
  </Block>
  <Block BlockType="Reference" Name="Compare&#xA;To Constant1" SID="4186">
    <PortCounts in="1" out="1"/>
    <P Name="Position">[370, 25, 400, 55]</P>
    <P Name="ZOrder">504</P>
    <P Name="LibraryVersion">5.1</P>
    <P Name="SourceBlock">simulink/Logic and Bit
Operations/Compare
To Constant</P>
    <P Name="SourceType">Compare To Constant</P>
    <InstanceData>
      <P Name="RTWMemSecFuncInitTerm">Inherit from model</P>
      <P Name="RTWMemSecFuncExecute">Inherit from model</P>
      <P Name="RTWMemSecDataConstants">Inherit from model</P>
      <P Name="RTWMemSecDataInternal">Inherit from model</P>
      <P Name="RTWMemSecDataParameters">Inherit from model</P>
      <P Name="ContentPreviewEnabled">on</P>
      <P Name="relop">==</P>
      <P Name="const">0</P>
      <P Name="OutDataTypeStr">boolean</P>
      <P Name="ZeroCross">on</P>
    </InstanceData>
  </Block>
  <Block BlockType="Selector" Name="Selector" SID="4187">
    <PortCounts in="1" out="1"/>
    <P Name="Position">[190, 21, 230, 59]</P>
    <P Name="ZOrder">502</P>
    <P Name="IndexMode">Zero-based</P>
    <P Name="InputPortWidth">5</P>
    <P Name="IndexOptions">Index vector (dialog)</P>
    <P Name="Indices">[0]</P>
    <P Name="OutputSizes">1</P>
  </Block>
  <Block BlockType="Selector" Name="Selector1" SID="4188">
    <PortCounts in="1" out="1"/>
    <P Name="Position">[190, 116, 230, 154]</P>
    <P Name="ZOrder">505</P>
    <P Name="IndexMode">Zero-based</P>
    <P Name="InputPortWidth">5</P>
    <P Name="IndexOptions">Starting index (dialog)</P>
    <P Name="Indices">[1]</P>
    <P Name="OutputSizes">4</P>
  </Block>
  <Block BlockType="SubSystem" Name="message id ok" SID="4189">
    <PortCounts in="1" enable="1"/>
    <P Name="Position">[370, 97, 605, 173]</P>
    <P Name="ZOrder">500</P>
    <System Ref="system_4189"/>
  </Block>
  <Line>
    <P Name="ZOrder">1</P>
    <P Name="Src">4188#out:1</P>
    <P Name="Points">[-5, 0]</P>
    <P Name="Dst">4189#in:1</P>
  </Line>
  <Line>
    <P Name="ZOrder">6</P>
    <P Name="Src">4187#out:1</P>
    <P Name="Dst">4186#in:1</P>
  </Line>
  <Line>
    <P Name="ZOrder">4</P>
    <P Name="Src">4186#out:1</P>
    <P Name="Points">[80, 0]</P>
    <P Name="Dst">4189#enable</P>
  </Line>
  <Line>
    <P Name="ZOrder">12</P>
    <P Name="Src">4220#out:1</P>
    <P Name="Points">[111, 0]</P>
    <Branch>
      <P Name="ZOrder">10</P>
      <P Name="Points">[0, -95]</P>
      <P Name="Dst">4187#in:1</P>
    </Branch>
    <Branch>
      <P Name="ZOrder">11</P>
      <P Name="Dst">4188#in:1</P>
    </Branch>
  </Line>
  <Annotation SID="4226">
    <P Name="Name">extract the data from bytes 1-4</P>
    <P Name="Position">[141, 179, 278, 194]</P>
    <P Name="InternalMargins">[0, 0, 0, 0]</P>
    <P Name="HorizontalAlignment">left</P>
    <P Name="VerticalAlignment">top</P>
    <P Name="ZOrder">-1</P>
  </Annotation>
  <Annotation SID="4223">
    <P Name="Name">Check that the message ID in byte0 matches</P>
    <P Name="Position">[140, -9, 450, 91]</P>
    <P Name="InternalMargins">[0, 0, 0, 0]</P>
    <P Name="FixedHeight">on</P>
    <P Name="FixedWidth">on</P>
    <P Name="HorizontalAlignment">left</P>
    <P Name="VerticalAlignment">top</P>
    <P Name="ForegroundColor">[0.901961, 0.901961, 1.000000]</P>
    <P Name="BackgroundColor">[0.901961, 0.901961, 1.000000]</P>
    <P Name="DropShadow">on</P>
    <P Name="AnnotationType">area_annotation</P>
    <P Name="ZOrder">6</P>
    <P Name="FontSize">12</P>
  </Annotation>
</System>

__MWOPC_PART_BEGIN__ /simulink/systems/system_4229.xml
<?xml version="1.0" encoding="utf-8"?>
<System>
  <P Name="Location">[3912, 0, 7680, 2160]</P>
  <P Name="PaperType">usletter</P>
  <P Name="PaperUnits">inches</P>
  <P Name="TiledPaperMargins">[0.500000, 0.500000, 0.500000, 0.500000]</P>
  <P Name="ZoomFactor">300</P>
  <Block BlockType="M-S-Function" Name="TCP Configure" SID="4230">
    <PortCounts in="1" out="1"/>
    <P Name="Position">[1070, 425, 1225, 495]</P>
    <P Name="ZOrder">474</P>
    <P Name="BackgroundColor">[1.000000, 0.666667, 0.000000]</P>
    <List ListType="RTWdata">
      <P Name="port">9001</P>
      <P Name="ip">0.0.0.0</P>
      <P Name="socket_id">id</P>
      <P Name="remote_port">9002</P>
      <P Name="remote_ip">0.0.0.0</P>
      <P Name="socket_mode">1</P>
      <P Name="timeout">1000</P>
    </List>
    <P Name="FunctionName">sfcn_TCPConfig</P>
    <Mask SelfModifiable="on">
      <Type>TCP Configure</Type>
      <Display RunInitForIconRedraw="on" IconUnits="pixels">if (socket_mode == 1)
    fprintf(&apos;Configure TCP server\n IP: %s\nPort: %d&apos;,ip,port);
else
    fprintf(&apos;Configure TCP client\n IP: %s\nPort: %d\nRemote IP: %s\n Remote port: %d&apos;,ip,port,remote_ip,remote_port);
end
port_label(&apos;output&apos;, 1, &apos;connected&apos;);
port_label(&apos;input&apos;, 1, &apos;disconnect&apos;);
text(2, 6, ert_linux_target_version());</Display>
      <Description>Block to configure a TCP scoket

The socket ID should be a unique identifier to link the send and receive blocks to.
The name of the actual socket in the C code will be socket_&lt;socket id&gt;, so characters that would not work in a C variable name will not work.

Setting the ip to 0.0.0.0 makes the controller accept messages on all interfaces.
Set it to the ip of a specific interface to limit this.

The socket mode determines whether this socket will listen for a connection or actively try to make one to a given ip and port.
Server will wait for something to connect to it, the client will try to connect to a server at the given ip and port

Setting the timeout to zero disables the timeout

When the disconnect input is true, it will close the current connection if there is one, if there isn&apos;t one it will not allow a connection to be made as long as it is true.

Outputs whether or not the socket currently has an active connection (true means connnected)</Description>
      <Initialization>    if ~is_ip(ip)
        error(&apos;Entered IP is not valid&apos;);
    end
    if mod(port,1) &gt; 0 || port &lt; intmin(&apos;uint16&apos;) || port &gt; intmax(&apos;uint16&apos;)
        error(&apos;Entered Port is not valid, it should be an integer from 0-65335&apos;);
    end

    if ~is_ip(remote_ip)
        error(&apos;Entered remote IP is not valid&apos;);
    end
    if mod(remote_port,1) &gt; 0 || remote_port &lt; intmin(&apos;uint16&apos;) || remote_port &gt; intmax(&apos;uint16&apos;)
        error(&apos;Entered remote Port is not valid, it should be an integer from 0-65335&apos;);
    end

    if mod(timeout,1) &gt; 0 || timeout &lt; intmin(&apos;uint32&apos;) || timeout &gt; intmax(&apos;uint32&apos;)
        error(&apos;Entered timeout is not valid, it should be an integer from 0-4.294.967.295&apos;);
    end

    blockPath = split(gcb, &apos;/&apos;);
    configures = find_system(blockPath(1),&apos;RegExp&apos;, &apos;on&apos;,&apos;FollowLinks&apos;, &apos;on&apos;,&apos;MaskType&apos;,&apos;TCP Configure&apos;);
    options = cell(1,length(configures));
    for idx = 1:length(configures)
        options(idx) = get_param(configures(idx),&apos;socket_id&apos;);
    end

    if length(unique(options)) ~= length(options)
        error(&apos;Socket id is already in use, set a unique socket id&apos;);
    end

	modelRTWFields = struct(&apos;port&apos;, num2str(port), &apos;ip&apos;, ip, &apos;socket_id&apos;, socket_id, ...
        &apos;remote_port&apos;, num2str(remote_port), &apos;remote_ip&apos;, remote_ip, &apos;socket_mode&apos;, num2str(socket_mode), &apos;timeout&apos;, num2str(timeout));

	% Insert modelRTWFields in the I/O block S-Function containing the Tag starting with &apos;HANcoder_TARGET_&apos;
	HANcoder_TARGET_DataBlock = find_system(gcb, &apos;RegExp&apos;, &apos;on&apos;, &apos;FollowLinks&apos;, &apos;on&apos;, &apos;LookUnderMasks&apos;, &apos;all&apos;, &apos;BlockType&apos;, &apos;M-S-Function&apos;);
	set_param(HANcoder_TARGET_DataBlock{1}, &apos;RTWdata&apos;, modelRTWFields);</Initialization>
      <MaskParameter Name="socket_id" Type="edit" Evaluate="off" Tunable="off">
        <Prompt>Socket id</Prompt>
        <Value>id</Value>
      </MaskParameter>
      <MaskParameter Name="port" Type="edit" Tunable="off">
        <Prompt>The port on which to listen/send</Prompt>
        <Value>9001</Value>
      </MaskParameter>
      <MaskParameter Name="ip" Type="edit" Tunable="off">
        <Prompt>The ip on which to listen/send</Prompt>
        <Value>&apos;0.0.0.0&apos;</Value>
      </MaskParameter>
      <MaskParameter Name="socket_mode" Type="popup">
        <Prompt>Socket mode:</Prompt>
        <Value>Server</Value>
        <Callback>mode = get_param(gcb, &apos;socket_mode&apos;);
mask = Simulink.Mask.get(gcb);
pars = mask.Parameters;
if strcmp(mode, &apos;Server&apos;)
    pars(5).set(&apos;Visible&apos;, &apos;off&apos;);
    pars(6).set(&apos;Visible&apos;, &apos;off&apos;);
else
    pars(5).set(&apos;Visible&apos;, &apos;on&apos;);
    pars(6).set(&apos;Visible&apos;, &apos;on&apos;);
end</Callback>
        <TypeOptions>
          <Option>Server</Option>
          <Option>Client</Option>
        </TypeOptions>
      </MaskParameter>
      <MaskParameter Name="remote_port" Type="edit" Tunable="off" Visible="off">
        <Prompt>The port to connect to</Prompt>
        <Value>9002</Value>
      </MaskParameter>
      <MaskParameter Name="remote_ip" Type="edit" Tunable="off" Visible="off">
        <Prompt>The ip to connect to</Prompt>
        <Value>&apos;0.0.0.0&apos;</Value>
      </MaskParameter>
      <MaskParameter Name="timeout" Type="edit" Tunable="off">
        <Prompt>The connection timeout (ms)</Prompt>
        <Value>1000</Value>
      </MaskParameter>
      <DialogControl Type="Group" Name="DescGroupVar">
        <Prompt>%&lt;MaskType&gt;</Prompt>
        <DialogControl Type="Text" Name="DescTextVar">
          <Prompt>%&lt;MaskDescription&gt;</Prompt>
        </DialogControl>
      </DialogControl>
      <DialogControl Type="Group" Name="ParameterGroupVar">
        <Prompt>Parameters</Prompt>
        <DialogControl Type="Edit" Name="socket_id">
          <Prompt>Socket id</Prompt>
          <ControlOptions PromptLocation="left"/>
        </DialogControl>
        <DialogControl Type="Edit" Name="port">
          <Prompt>The port on which to listen/send</Prompt>
          <ControlOptions PromptLocation="left"/>
        </DialogControl>
        <DialogControl Type="Edit" Name="ip">
          <Prompt>The ip on which to listen/send</Prompt>
          <ControlOptions PromptLocation="left"/>
        </DialogControl>
        <DialogControl Type="Popup" Name="socket_mode">
          <Prompt>Socket mode:</Prompt>
          <ControlOptions PromptLocation="left"/>
        </DialogControl>
        <DialogControl Type="Edit" Name="remote_port">
          <Prompt>The port to connect to</Prompt>
          <ControlOptions PromptLocation="left"/>
        </DialogControl>
        <DialogControl Type="Edit" Name="remote_ip">
          <Prompt>The ip to connect to</Prompt>
          <ControlOptions PromptLocation="left"/>
        </DialogControl>
        <DialogControl Type="Edit" Name="timeout">
          <Prompt>The connection timeout (ms)</Prompt>
          <ControlOptions PromptLocation="left"/>
        </DialogControl>
      </DialogControl>
    </Mask>
  </Block>
  <Block BlockType="S-Function" Name="TCP Receive" SID="4272">
    <PortCounts out="3"/>
    <P Name="Position">[1070, 524, 1225, 596]</P>
    <P Name="ZOrder">475</P>
    <P Name="BackgroundColor">[1.000000, 0.666667, 0.000000]</P>
    <P Name="FunctionName">sfcn_TCPReceive</P>
    <P Name="Parameters">buff_len,socket_mode,socket_id,tsamp</P>
    <P Name="SFunctionDeploymentMode">off</P>
    <P Name="EnableBusSupport">off</P>
    <P Name="SFcnIsStateOwnerBlock">off</P>
    <Mask SelfModifiable="on">
      <Type>TCP Receive</Type>
      <Display RunInitForIconRedraw="on" IconUnits="pixels">fprintf(&apos;TCP Receive\nSocket: %s&apos;, socket_id);
text(2, 6, ert_linux_target_version());
port_label(&apos;output&apos;, 1, &apos;function call&apos;);
port_label(&apos;output&apos;, 2, &apos;message&apos;);
port_label(&apos;output&apos;, 3, &apos;message length&apos;);</Display>
      <Description>Receive all TCP messages on the given socket

For every message received this block will call the functions attached to the function call output.
In these function calls you can then use the message and message length outputs to process/buffer the received messages.

Outputs:
function call:
Attach to a function call subsystem or something like it to call that function every time a message is received.

message:
The uint8 vector received from the socket. The length of this vector is likely longer than the actual number of bytes received.

message length:
The number of bytes actually received, use this to get the actual fresh bytes from the message.

Parameters:
buffer size:
The maximum number of bytes that can be read from the socket in one message, this also determines the width of the message vector.</Description>
      <MaskParameter Name="tsamp" Type="edit">
        <Prompt>Sample time</Prompt>
        <Value>-1</Value>
      </MaskParameter>
      <MaskParameter Name="socket_id" Type="combobox" Evaluate="off" Tunable="off">
        <Prompt>Socket</Prompt>
        <Value>id</Value>
        <Callback>blockPath = split(gcb, &apos;/&apos;);
configures = find_system(blockPath(1),&apos;RegExp&apos;, &apos;on&apos;,&apos;FollowLinks&apos;, &apos;on&apos;,&apos;MaskType&apos;,&apos;TCP Configure&apos;);
mask = Simulink.Mask.get(gcb);
pars = mask.Parameters;
options = cell(1,length(configures));
for idx = 1:length(configures)
    options(idx) = get_param(configures(idx),&apos;socket_id&apos;);
end
mask.getParameter(&apos;socket_id&apos;).TypeOptions = options;
for idx = 1:length(configures)
    if strcmp(get_param(configures(idx),&apos;socket_id&apos;), get_param(gcb, &apos;socket_id&apos;))
        mode = Simulink.Mask.get(configures{idx}).getParameter(&apos;socket_mode&apos;).Value;
        set_param(gcb, &apos;socket_mode&apos;, mode);
    end
end</Callback>
        <TypeOptions>
          <Option>id</Option>
        </TypeOptions>
      </MaskParameter>
      <MaskParameter Name="buff_len" Type="edit" Tunable="off">
        <Prompt>Buffer size</Prompt>
        <Value>1</Value>
      </MaskParameter>
      <MaskParameter Name="socket_mode" Type="popup" Visible="off">
        <Value>Server</Value>
        <TypeOptions>
          <Option>Server</Option>
          <Option>Client</Option>
        </TypeOptions>
      </MaskParameter>
      <DialogControl Type="Group" Name="DescGroupVar">
        <Prompt>%&lt;MaskType&gt;</Prompt>
        <DialogControl Type="Text" Name="DescTextVar">
          <Prompt>%&lt;MaskDescription&gt;</Prompt>
        </DialogControl>
      </DialogControl>
      <DialogControl Type="Group" Name="ParameterGroupVar">
        <Prompt>Parameters</Prompt>
        <DialogControl Type="Edit" Name="tsamp">
          <Prompt>Sample time</Prompt>
          <ControlOptions PromptLocation="left"/>
        </DialogControl>
        <DialogControl Type="ComboBox" Name="socket_id">
          <Prompt>Socket</Prompt>
          <ControlOptions PromptLocation="left"/>
        </DialogControl>
        <DialogControl Type="Edit" Name="buff_len">
          <Prompt>Buffer size</Prompt>
          <ControlOptions PromptLocation="left"/>
        </DialogControl>
        <DialogControl Type="Popup" Name="socket_mode">
          <ControlOptions PromptLocation="left"/>
        </DialogControl>
      </DialogControl>
    </Mask>
  </Block>
  <Block BlockType="M-S-Function" Name="TCP Send" SID="4273">
    <PortCounts in="1"/>
    <P Name="Position">[1070, 627, 1225, 703]</P>
    <P Name="ZOrder">473</P>
    <P Name="BackgroundColor">[1.000000, 0.666667, 0.000000]</P>
    <List ListType="RTWdata">
      <P Name="socket_id">id</P>
      <P Name="socket_mode">1</P>
    </List>
    <P Name="FunctionName">sfcn_TCPSend</P>
    <P Name="Parameters">tsamp</P>
    <Mask SelfModifiable="on">
      <Type>TCP Send</Type>
      <Display RunInitForIconRedraw="on" IconUnits="pixels">fprintf(&apos;TCP Send\nSocket: %s&apos;,socket_id);
port_label(&apos;input&apos;, 1, &apos;message&apos;);
text(2, 6, ert_linux_target_version());</Display>
      <Description>Send a TCP message to the chosen sockets connection, whether it be client or server.

The Message input should be a uint8 vector, if you end up with a [1xn] or [nx1] matrix, use the reshape block to turn it into a vector.</Description>
      <Initialization>    % update RTWdata to call WriteRTW again
    modelRTWFields = struct(&apos;socket_id&apos;, socket_id, &apos;socket_mode&apos;, num2str(socket_mode));

    % Insert modelRTWFields in the I/O block S-Function containing the Tag starting with &apos;HANcoder_TARGET_&apos;
    HANcoder_TARGET_DataBlock = find_system(gcb, &apos;RegExp&apos;, &apos;on&apos;, &apos;FollowLinks&apos;, &apos;on&apos;, &apos;LookUnderMasks&apos;, &apos;all&apos;, &apos;BlockType&apos;, &apos;M-S-Function&apos;);
    set_param(HANcoder_TARGET_DataBlock{1}, &apos;RTWdata&apos;, modelRTWFields);</Initialization>
      <MaskParameter Name="socket_id" Type="combobox" Evaluate="off">
        <Prompt>Socket</Prompt>
        <Value>id</Value>
        <Callback>blockPath = split(gcb, &apos;/&apos;);
configures = find_system(blockPath(1),&apos;RegExp&apos;, &apos;on&apos;,&apos;FollowLinks&apos;, &apos;on&apos;,&apos;MaskType&apos;,&apos;TCP Configure&apos;);
mask = Simulink.Mask.get(gcb);
pars = mask.Parameters;
options = cell(1,length(configures));
for idx = 1:length(configures)
    options(idx) = get_param(configures(idx),&apos;socket_id&apos;);
end
mask.getParameter(&apos;socket_id&apos;).TypeOptions = options;
for idx = 1:length(configures)
    if strcmp(get_param(configures(idx),&apos;socket_id&apos;), get_param(gcb, &apos;socket_id&apos;))
        mode = Simulink.Mask.get(configures{idx}).getParameter(&apos;socket_mode&apos;).Value;
        set_param(gcb, &apos;socket_mode&apos;, mode);
    end
end</Callback>
        <TypeOptions>
          <Option>id</Option>
        </TypeOptions>
      </MaskParameter>
      <MaskParameter Name="tsamp" Type="edit">
        <Prompt>Sample time</Prompt>
        <Value>1</Value>
      </MaskParameter>
      <MaskParameter Name="socket_mode" Type="popup" Visible="off">
        <Value>Server</Value>
        <TypeOptions>
          <Option>Server</Option>
          <Option>Client</Option>
        </TypeOptions>
      </MaskParameter>
      <DialogControl Type="Group" Name="DescGroupVar">
        <Prompt>%&lt;MaskType&gt;</Prompt>
        <DialogControl Type="Text" Name="DescTextVar">
          <Prompt>%&lt;MaskDescription&gt;</Prompt>
        </DialogControl>
      </DialogControl>
      <DialogControl Type="Group" Name="ParameterGroupVar">
        <Prompt>Simulink:studio:ToolBarParametersMenu</Prompt>
        <DialogControl Type="ComboBox" Name="socket_id">
          <Prompt>Socket</Prompt>
          <ControlOptions PromptLocation="left"/>
        </DialogControl>
        <DialogControl Type="Edit" Name="tsamp">
          <Prompt>Sample time</Prompt>
          <ControlOptions PromptLocation="left"/>
        </DialogControl>
        <DialogControl Type="Popup" Name="socket_mode">
          <ControlOptions PromptLocation="left"/>
        </DialogControl>
      </DialogControl>
    </Mask>
  </Block>
</System>

__MWOPC_PART_BEGIN__ /simulink/systems/system_root.xml
<?xml version="1.0" encoding="utf-8"?>
<System>
  <P Name="Location">[3912, 0, 7680, 2160]</P>
  <P Name="ZoomFactor">221</P>
  <P Name="ReportName">simulink-default.rpt</P>
  <P Name="SIDHighWatermark">4276</P>
  <Block BlockType="SubSystem" Name="CAN" SID="2725">
    <PortCounts/>
    <P Name="Position">[-330, -536, -230, -494]</P>
    <P Name="ZOrder">3</P>
    <P Name="BackgroundColor">[1.000000, 0.666667, 0.000000]</P>
    <P Name="UserDataPersistent">on</P>
    <Mask>
      <Display IconOpaque="transparent" RunInitForIconRedraw="on" IconUnits="pixels">fprintf(&apos;CAN&apos;);</Display>
    </Mask>
    <System Ref="system_2725"/>
  </Block>
  <Block BlockType="SubSystem" Name="Display specific" SID="4089">
    <PortCounts/>
    <P Name="Position">[-330, 5, -230, 45]</P>
    <P Name="ZOrder">17</P>
    <P Name="BackgroundColor">[1.000000, 0.666667, 0.000000]</P>
    <P Name="HideAutomaticName">off</P>
    <Mask>
      <Display RunInitForIconRedraw="off">fprintf(&quot;Display specific&quot;);</Display>
    </Mask>
    <System Ref="system_4089"/>
  </Block>
  <Block BlockType="SubSystem" Name="Enclosure LED&apos;s" SID="3975">
    <PortCounts/>
    <P Name="Position">[-330, -266, -230, -224]</P>
    <P Name="ZOrder">7</P>
    <P Name="BackgroundColor">[1.000000, 0.666667, 0.000000]</P>
    <P Name="UserDataPersistent">on</P>
    <Mask>
      <Display IconOpaque="transparent" RunInitForIconRedraw="on" IconUnits="pixels">fprintf(&apos;Enclosure LED&apos;);</Display>
    </Mask>
    <System Ref="system_3975"/>
  </Block>
  <Block BlockType="SubSystem" Name="LIN" SID="4051">
    <PortCounts/>
    <P Name="Position">[-330, -471, -230, -429]</P>
    <P Name="ZOrder">12</P>
    <P Name="BackgroundColor">[1.000000, 0.666667, 0.000000]</P>
    <P Name="UserDataPersistent">on</P>
    <Mask>
      <Display RunInitForIconRedraw="on" IconUnits="pixels">fprintf(&apos;LIN&apos;);</Display>
    </Mask>
    <System Ref="system_4051"/>
  </Block>
  <Block BlockType="SubSystem" Name="Memory store" SID="4007">
    <PortCounts/>
    <P Name="Position">[-330, -131, -230, -89]</P>
    <P Name="ZOrder">10</P>
    <P Name="BackgroundColor">[1.000000, 0.666667, 0.000000]</P>
    <P Name="UserDataPersistent">on</P>
    <Mask>
      <Display RunInitForIconRedraw="on" IconUnits="pixels">fprintf(&apos;Memory store&apos;);</Display>
    </Mask>
    <System Ref="system_4007"/>
  </Block>
  <Block BlockType="SubSystem" Name="Modules" SID="3919">
    <PortCounts/>
    <P Name="Position">[-330, -336, -230, -294]</P>
    <P Name="ZOrder">5</P>
    <P Name="BackgroundColor">[1.000000, 0.666667, 0.000000]</P>
    <P Name="UserDataPersistent">on</P>
    <Mask>
      <Display RunInitForIconRedraw="on" IconUnits="pixels">fprintf(&apos;Modules&apos;);</Display>
    </Mask>
    <System Ref="system_3919"/>
  </Block>
  <Block BlockType="SubSystem" Name="Network" SID="3908">
    <PortCounts/>
    <P Name="Position">[-330, -406, -230, -364]</P>
    <P Name="ZOrder">4</P>
    <P Name="BackgroundColor">[1.000000, 0.666667, 0.000000]</P>
    <P Name="UserDataPersistent">on</P>
    <Mask>
      <Display RunInitForIconRedraw="on" IconUnits="pixels">fprintf(&apos;Network&apos;);</Display>
    </Mask>
    <System Ref="system_3908"/>
  </Block>
  <Block BlockType="SubSystem" Name="Supply control" SID="3980">
    <PortCounts/>
    <P Name="Position">[-330, -196, -230, -154]</P>
    <P Name="ZOrder">8</P>
    <P Name="BackgroundColor">[1.000000, 0.666667, 0.000000]</P>
    <P Name="UserDataPersistent">on</P>
    <Mask>
      <Display IconOpaque="transparent" RunInitForIconRedraw="on" IconUnits="pixels">fprintf(&apos;Supply Control&apos;);</Display>
    </Mask>
    <System Ref="system_3980"/>
  </Block>
  <Block BlockType="SubSystem" Name="System" SID="4017">
    <PortCounts/>
    <P Name="Position">[-330, -66, -230, -24]</P>
    <P Name="ZOrder">11</P>
    <P Name="BackgroundColor">[1.000000, 0.666667, 0.000000]</P>
    <P Name="UserDataPersistent">on</P>
    <Mask>
      <Display RunInitForIconRedraw="on" IconUnits="pixels">fprintf(&apos;System&apos;);</Display>
    </Mask>
    <System Ref="system_4017"/>
  </Block>
</System>

__MWOPC_PART_BEGIN__ /simulink/windowsInfo.xml
<?xml version="1.0" encoding="utf-8"?>
<WindowsInfo>
  <Object PropName="BdWindowsInfo" ObjectID="1" ClassName="Simulink.BDWindowsInfo">
    <Object PropName="WindowsInfo" ObjectID="2" ClassName="Simulink.WindowInfo">
      <P Name="IsActive" Class="logical">1</P>
      <P Name="Location" Class="double">[3912.0, 0.0, 3768.0, 2160.0]</P>
      <Object PropName="ModelBrowserInfo" ObjectID="3" ClassName="Simulink.ModelBrowserInfo">
        <P Name="Visible" Class="logical">0</P>
        <P Name="DockPosition" Class="char">Left</P>
        <P Name="Width" Class="int32">50</P>
        <P Name="Height" Class="int32">50</P>
        <P Name="Filter" Class="int32">59</P>
        <P Name="Minimized" Class="char">Unset</P>
      </Object>
      <Object PropName="ExplorerBarInfo" ObjectID="4" ClassName="Simulink.ExplorerBarInfo">
        <P Name="Visible" Class="logical">1</P>
      </Object>
      <Array PropName="EditorsInfo" Type="Simulink.EditorInfo" Dimension="1*42">
        <Object ObjectID="5">
          <P Name="IsActive" Class="logical">1</P>
          <P Name="IsTabbed" Class="logical">1</P>
          <P Name="ViewObjType" Class="char">SimulinkSubsys</P>
          <P Name="LoadSaveID" Class="char">4017</P>
          <P Name="Extents" Class="double">[3730.0, 1919.0]</P>
          <P Name="ZoomFactor" Class="double">2.4648254299114121</P>
          <P Name="Offset" Class="double">[-212.35137420718775, 46.500000000000171]</P>
          <P Name="SceneRectInView" Class="double">[-212.35137420718775, 46.500000000000171, 1513.2917547568711, 778.55412262156449]</P>
        </Object>
        <Object ObjectID="6">
          <P Name="IsActive" Class="logical">0</P>
          <P Name="IsTabbed" Class="logical">0</P>
          <P Name="ViewObjType" Class="char">SimulinkSubsys</P>
          <P Name="LoadSaveID" Class="char">4229</P>
          <P Name="Extents" Class="double">[3730.0, 1919.0]</P>
          <P Name="ZoomFactor" Class="double">3.0</P>
          <P Name="Offset" Class="double">[770.76784622105777, 265.53457841852406]</P>
          <P Name="SceneRectInView" Class="double">[770.76784622105777, 265.53457841852406, 1243.3333333333333, 639.66666666666663]</P>
        </Object>
        <Object ObjectID="7">
          <P Name="IsActive" Class="logical">0</P>
          <P Name="IsTabbed" Class="logical">0</P>
          <P Name="ViewObjType" Class="char">SimulinkTopLevel</P>
          <P Name="LoadSaveID" Class="char">0</P>
          <P Name="Extents" Class="double">[3730.0, 1919.0]</P>
          <P Name="ZoomFactor" Class="double">2.2125375143339916</P>
          <P Name="Offset" Class="double">[-1106.760779013051, -676.65100649348642]</P>
          <P Name="SceneRectInView" Class="double">[-1106.760779013051, -676.65100649348642, 1685.847121612665, 867.32992664201174]</P>
        </Object>
        <Object ObjectID="8">
          <P Name="IsActive" Class="logical">0</P>
          <P Name="IsTabbed" Class="logical">0</P>
          <P Name="ViewObjType" Class="char">SimulinkSubsys</P>
          <P Name="LoadSaveID" Class="char">4089</P>
          <P Name="Extents" Class="double">[3730.0, 1919.0]</P>
          <P Name="ZoomFactor" Class="double">3.7423615682168263</P>
          <P Name="Offset" Class="double">[-338.687712504229, -127.55676626079315]</P>
          <P Name="SceneRectInView" Class="double">[-338.687712504229, -127.55676626079315, 996.69685357988635, 512.77781823587179]</P>
        </Object>
        <Object ObjectID="9">
          <P Name="IsActive" Class="logical">0</P>
          <P Name="IsTabbed" Class="logical">0</P>
          <P Name="ViewObjType" Class="char">SimulinkSubsys</P>
          <P Name="LoadSaveID" Class="char">4007</P>
          <P Name="Extents" Class="double">[3730.0, 1919.0]</P>
          <P Name="ZoomFactor" Class="double">2.9017776497326357</P>
          <P Name="Offset" Class="double">[-122.54281183932346, 178.00728616988516]</P>
          <P Name="SceneRectInView" Class="double">[-122.54281183932346, 178.00728616988516, 1285.4189570119802, 661.318760993563]</P>
        </Object>
        <Object ObjectID="10">
          <P Name="IsActive" Class="logical">0</P>
          <P Name="IsTabbed" Class="logical">0</P>
          <P Name="ViewObjType" Class="char">SimulinkSubsys</P>
          <P Name="LoadSaveID" Class="char">3919</P>
          <P Name="Extents" Class="double">[3730.0, 1919.0]</P>
          <P Name="ZoomFactor" Class="double">2.384125114336523</P>
          <P Name="Offset" Class="double">[-451.66310100612816, -538.27664979280587]</P>
          <P Name="SceneRectInView" Class="double">[-451.66310100612816, -538.27664979280587, 1564.5152083547512, 804.90742220717618]</P>
        </Object>
        <Object ObjectID="11">
          <P Name="IsActive" Class="logical">0</P>
          <P Name="IsTabbed" Class="logical">0</P>
          <P Name="ViewObjType" Class="char">SimulinkSubsys</P>
          <P Name="LoadSaveID" Class="char">3908</P>
          <P Name="Extents" Class="double">[3730.0, 1919.0]</P>
          <P Name="ZoomFactor" Class="double">3.5539343408025013</P>
          <P Name="Offset" Class="double">[-408.16151105998631, -274.91749120543125]</P>
          <P Name="SceneRectInView" Class="double">[-408.16151105998631, -274.91749120543125, 1049.541055718475, 539.96495601173024]</P>
        </Object>
        <Object ObjectID="12">
          <P Name="IsActive" Class="logical">0</P>
          <P Name="IsTabbed" Class="logical">0</P>
          <P Name="ViewObjType" Class="char">SimulinkSubsys</P>
          <P Name="LoadSaveID" Class="char">3989</P>
          <P Name="Extents" Class="double">[3730.0, 1919.0]</P>
          <P Name="ZoomFactor" Class="double">2.418148041443863</P>
          <P Name="Offset" Class="double">[-484.98195026604287, 44.5070763118369]</P>
          <P Name="SceneRectInView" Class="double">[-484.98195026604287, 44.5070763118369, 1542.5027484143764, 793.58251319227566]</P>
        </Object>
        <Object ObjectID="13">
          <P Name="IsActive" Class="logical">0</P>
          <P Name="IsTabbed" Class="logical">0</P>
          <P Name="ViewObjType" Class="char">SimulinkSubsys</P>
          <P Name="LoadSaveID" Class="char">3980</P>
          <P Name="Extents" Class="double">[3730.0, 1919.0]</P>
          <P Name="ZoomFactor" Class="double">4.9053129931614938</P>
          <P Name="Offset" Class="double">[-97.102192982455847, 259.43567635576915]</P>
          <P Name="SceneRectInView" Class="double">[-97.102192982455847, 259.43567635576915, 760.4, 391.208471849866]</P>
        </Object>
        <Object ObjectID="14">
          <P Name="IsActive" Class="logical">0</P>
          <P Name="IsTabbed" Class="logical">0</P>
          <P Name="ViewObjType" Class="char">SimulinkSubsys</P>
          <P Name="LoadSaveID" Class="char">4035</P>
          <P Name="Extents" Class="double">[3730.0, 1919.0]</P>
          <P Name="ZoomFactor" Class="double">3.0</P>
          <P Name="Offset" Class="double">[-66.599122807016784, 299.08853383458649]</P>
          <P Name="SceneRectInView" Class="double">[-66.599122807016784, 299.08853383458649, 1243.3333333333333, 639.66666666666663]</P>
        </Object>
        <Object ObjectID="15">
          <P Name="IsActive" Class="logical">0</P>
          <P Name="IsTabbed" Class="logical">0</P>
          <P Name="ViewObjType" Class="char">SimulinkSubsys</P>
          <P Name="LoadSaveID" Class="char">4026</P>
          <P Name="Extents" Class="double">[3730.0, 1919.0]</P>
          <P Name="ZoomFactor" Class="double">2.9017776497326357</P>
          <P Name="Offset" Class="double">[154.75004530353362, 171.68347664607563]</P>
          <P Name="SceneRectInView" Class="double">[154.75004530353362, 171.68347664607563, 1285.4189570119802, 661.318760993563]</P>
        </Object>
        <Object ObjectID="16">
          <P Name="IsActive" Class="logical">0</P>
          <P Name="IsTabbed" Class="logical">0</P>
          <P Name="ViewObjType" Class="char">SimulinkSubsys</P>
          <P Name="LoadSaveID" Class="char">3990</P>
          <P Name="Extents" Class="double">[3730.0, 1919.0]</P>
          <P Name="ZoomFactor" Class="double">2.8609501372038286</P>
          <P Name="Offset" Class="double">[75.947415828226667, 164.51945850599537]</P>
          <P Name="SceneRectInView" Class="double">[75.947415828226667, 164.51945850599537, 1303.7626736289587, 670.75618517264661]</P>
        </Object>
        <Object ObjectID="17">
          <P Name="IsActive" Class="logical">0</P>
          <P Name="IsTabbed" Class="logical">0</P>
          <P Name="ViewObjType" Class="char">SimulinkSubsys</P>
          <P Name="LoadSaveID" Class="char">4065</P>
          <P Name="Extents" Class="double">[3730.0, 1919.0]</P>
          <P Name="ZoomFactor" Class="double">2.1752418611323963</P>
          <P Name="Offset" Class="double">[326.45147283178324, 217.608904966686]</P>
          <P Name="SceneRectInView" Class="double">[326.45147283178324, 217.608904966686, 1714.7518474374253, 882.2007493920695]</P>
        </Object>
        <Object ObjectID="18">
          <P Name="IsActive" Class="logical">0</P>
          <P Name="IsTabbed" Class="logical">0</P>
          <P Name="ViewObjType" Class="char">SimulinkSubsys</P>
          <P Name="LoadSaveID" Class="char">4032</P>
          <P Name="Extents" Class="double">[3730.0, 1919.0]</P>
          <P Name="ZoomFactor" Class="double">5.8035552994652715</P>
          <P Name="Offset" Class="double">[240.05002265176688, 416.32507165637105]</P>
          <P Name="SceneRectInView" Class="double">[240.05002265176688, 416.32507165637105, 642.70947850599009, 330.65938049678152]</P>
        </Object>
        <Object ObjectID="19">
          <P Name="IsActive" Class="logical">0</P>
          <P Name="IsTabbed" Class="logical">0</P>
          <P Name="ViewObjType" Class="char">SimulinkSubsys</P>
          <P Name="LoadSaveID" Class="char">3212</P>
          <P Name="Extents" Class="double">[3730.0, 1919.0]</P>
          <P Name="ZoomFactor" Class="double">2.9431877958968964</P>
          <P Name="Offset" Class="double">[-440.61207710966437, -55.758802502233664]</P>
          <P Name="SceneRectInView" Class="double">[-440.61207710966437, -55.758802502233664, 1267.3333333333333, 652.01411974977657]</P>
        </Object>
        <Object ObjectID="20">
          <P Name="IsActive" Class="logical">0</P>
          <P Name="IsTabbed" Class="logical">0</P>
          <P Name="ViewObjType" Class="char">SimulinkSubsys</P>
          <P Name="LoadSaveID" Class="char">2725</P>
          <P Name="Extents" Class="double">[3730.0, 1919.0]</P>
          <P Name="ZoomFactor" Class="double">3.7957673622664325</P>
          <P Name="Offset" Class="double">[-402.986733544372, -149.99704166925434]</P>
          <P Name="SceneRectInView" Class="double">[-402.986733544372, -149.99704166925434, 982.673500246558, 505.56312251290746]</P>
        </Object>
        <Object ObjectID="21">
          <P Name="IsActive" Class="logical">0</P>
          <P Name="IsTabbed" Class="logical">0</P>
          <P Name="ViewObjType" Class="char">SimulinkSubsys</P>
          <P Name="LoadSaveID" Class="char">3975</P>
          <P Name="Extents" Class="double">[3730.0, 1919.0]</P>
          <P Name="ZoomFactor" Class="double">5.0</P>
          <P Name="Offset" Class="double">[-201.9097229669342, -306.32195263628262]</P>
          <P Name="SceneRectInView" Class="double">[-201.9097229669342, -306.32195263628262, 746.0, 383.8]</P>
        </Object>
        <Object ObjectID="22">
          <P Name="IsActive" Class="logical">0</P>
          <P Name="IsTabbed" Class="logical">0</P>
          <P Name="ViewObjType" Class="char">SimulinkSubsys</P>
          <P Name="LoadSaveID" Class="char">4051</P>
          <P Name="Extents" Class="double">[3730.0, 1919.0]</P>
          <P Name="ZoomFactor" Class="double">1.9345184331550906</P>
          <P Name="Offset" Class="double">[-916.68921775898514, -274.73907074517223]</P>
          <P Name="SceneRectInView" Class="double">[-916.68921775898514, -274.73907074517223, 1928.1284355179703, 991.97814149034446]</P>
        </Object>
        <Object ObjectID="23">
          <P Name="IsActive" Class="logical">0</P>
          <P Name="IsTabbed" Class="logical">0</P>
          <P Name="ViewObjType" Class="char">SimulinkSubsys</P>
          <P Name="LoadSaveID" Class="char">4189</P>
          <P Name="Extents" Class="double">[3802.0, 1892.0]</P>
          <P Name="ZoomFactor" Class="double">1.7499999999999998</P>
          <P Name="Offset" Class="double">[-833.78571428571445, -419.07142857142867]</P>
          <P Name="SceneRectInView" Class="double">[-833.78571428571445, -419.07142857142867, 2172.5714285714289, 1081.1428571428573]</P>
        </Object>
        <Object ObjectID="24">
          <P Name="IsActive" Class="logical">0</P>
          <P Name="IsTabbed" Class="logical">0</P>
          <P Name="ViewObjType" Class="char">SimulinkSubsys</P>
          <P Name="LoadSaveID" Class="char">4219</P>
          <P Name="Extents" Class="double">[3802.0, 1892.0]</P>
          <P Name="ZoomFactor" Class="double">2.0</P>
          <P Name="Offset" Class="double">[-614.734375, -368.0]</P>
          <P Name="SceneRectInView" Class="double">[-614.734375, -368.0, 1901.0, 946.0]</P>
        </Object>
        <Object ObjectID="25">
          <P Name="IsActive" Class="logical">0</P>
          <P Name="IsTabbed" Class="logical">0</P>
          <P Name="ViewObjType" Class="char">SimulinkSubsys</P>
          <P Name="LoadSaveID" Class="char">4175</P>
          <P Name="Extents" Class="double">[3802.0, 1892.0]</P>
          <P Name="ZoomFactor" Class="double">1.75</P>
          <P Name="Offset" Class="double">[126.18110119047856, 722.39761904762]</P>
          <P Name="SceneRectInView" Class="double">[126.18110119047856, 722.39761904762, 2172.5714285714284, 1081.1428571428571]</P>
        </Object>
        <Object ObjectID="26">
          <P Name="IsActive" Class="logical">0</P>
          <P Name="IsTabbed" Class="logical">0</P>
          <P Name="ViewObjType" Class="char">SimulinkSubsys</P>
          <P Name="LoadSaveID" Class="char">4182</P>
          <P Name="Extents" Class="double">[3802.0, 1892.0]</P>
          <P Name="ZoomFactor" Class="double">1.9999999999999996</P>
          <P Name="Offset" Class="double">[-540.50000000000023, -270.50000000000011]</P>
          <P Name="SceneRectInView" Class="double">[-540.50000000000023, -270.50000000000011, 1901.0000000000005, 946.00000000000023]</P>
        </Object>
        <Object ObjectID="27">
          <P Name="IsActive" Class="logical">0</P>
          <P Name="IsTabbed" Class="logical">0</P>
          <P Name="ViewObjType" Class="char">SimulinkSubsys</P>
          <P Name="LoadSaveID" Class="char">4136</P>
          <P Name="Extents" Class="double">[3802.0, 1892.0]</P>
          <P Name="ZoomFactor" Class="double">1.75</P>
          <P Name="Offset" Class="double">[-730.728571428571, -512.54999999999984]</P>
          <P Name="SceneRectInView" Class="double">[-730.728571428571, -512.54999999999984, 2172.5714285714284, 1081.1428571428571]</P>
        </Object>
        <Object ObjectID="28">
          <P Name="IsActive" Class="logical">0</P>
          <P Name="IsTabbed" Class="logical">0</P>
          <P Name="ViewObjType" Class="char">SimulinkSubsys</P>
          <P Name="LoadSaveID" Class="char">4059</P>
          <P Name="Extents" Class="double">[3730.0, 1919.0]</P>
          <P Name="ZoomFactor" Class="double">1.7499999999999998</P>
          <P Name="Offset" Class="double">[-760.52857142857169, -323.98571428571427]</P>
          <P Name="SceneRectInView" Class="double">[-760.52857142857169, -323.98571428571427, 2131.4285714285716, 1096.5714285714287]</P>
        </Object>
        <Object ObjectID="29">
          <P Name="IsActive" Class="logical">0</P>
          <P Name="IsTabbed" Class="logical">0</P>
          <P Name="ViewObjType" Class="char">SimulinkSubsys</P>
          <P Name="LoadSaveID" Class="char">4121</P>
          <P Name="Extents" Class="double">[3730.0, 1919.0]</P>
          <P Name="ZoomFactor" Class="double">2.9017776497326357</P>
          <P Name="Offset" Class="double">[-479.15088475599009, -282.49271383011484]</P>
          <P Name="SceneRectInView" Class="double">[-479.15088475599009, -282.49271383011484, 1285.4189570119802, 661.318760993563]</P>
        </Object>
        <Object ObjectID="30">
          <P Name="IsActive" Class="logical">0</P>
          <P Name="IsTabbed" Class="logical">0</P>
          <P Name="ViewObjType" Class="char">SimulinkSubsys</P>
          <P Name="LoadSaveID" Class="char">4125</P>
          <P Name="Extents" Class="double">[3730.0, 1919.0]</P>
          <P Name="ZoomFactor" Class="double">3.0</P>
          <P Name="Offset" Class="double">[-369.90476190476193, -112.66666666666623]</P>
          <P Name="SceneRectInView" Class="double">[-369.90476190476193, -112.66666666666623, 1243.3333333333333, 639.66666666666663]</P>
        </Object>
        <Object ObjectID="31">
          <P Name="IsActive" Class="logical">0</P>
          <P Name="IsTabbed" Class="logical">0</P>
          <P Name="ViewObjType" Class="char">SimulinkSubsys</P>
          <P Name="LoadSaveID" Class="char">4039</P>
          <P Name="Extents" Class="double">[3730.0, 1919.0]</P>
          <P Name="ZoomFactor" Class="double">2.0</P>
          <P Name="Offset" Class="double">[-1135.0, -355.0]</P>
          <P Name="SceneRectInView" Class="double">[-1135.0, -355.0, 1865.0, 959.5]</P>
        </Object>
        <Object ObjectID="32">
          <P Name="IsActive" Class="logical">0</P>
          <P Name="IsTabbed" Class="logical">0</P>
          <P Name="ViewObjType" Class="char">SimulinkSubsys</P>
          <P Name="LoadSaveID" Class="char">4036</P>
          <P Name="Extents" Class="double">[3730.0, 1919.0]</P>
          <P Name="ZoomFactor" Class="double">2.0</P>
          <P Name="Offset" Class="double">[-1025.0, -329.5]</P>
          <P Name="SceneRectInView" Class="double">[-1025.0, -329.5, 1865.0, 959.5]</P>
        </Object>
        <Object ObjectID="33">
          <P Name="IsActive" Class="logical">0</P>
          <P Name="IsTabbed" Class="logical">0</P>
          <P Name="ViewObjType" Class="char">SimulinkSubsys</P>
          <P Name="LoadSaveID" Class="char">4053</P>
          <P Name="Extents" Class="double">[3730.0, 1919.0]</P>
          <P Name="ZoomFactor" Class="double">1.5</P>
          <P Name="Offset" Class="double">[-1053.7630208333333, -448.33333333333326]</P>
          <P Name="SceneRectInView" Class="double">[-1053.7630208333333, -448.33333333333326, 2486.6666666666665, 1279.3333333333333]</P>
        </Object>
        <Object ObjectID="34">
          <P Name="IsActive" Class="logical">0</P>
          <P Name="IsTabbed" Class="logical">0</P>
          <P Name="ViewObjType" Class="char">SimulinkSubsys</P>
          <P Name="LoadSaveID" Class="char">3992</P>
          <P Name="Extents" Class="double">[3730.0, 1919.0]</P>
          <P Name="ZoomFactor" Class="double">2.0</P>
          <P Name="Offset" Class="double">[-947.5, -445.5]</P>
          <P Name="SceneRectInView" Class="double">[-947.5, -445.5, 1865.0, 959.5]</P>
        </Object>
        <Object ObjectID="35">
          <P Name="IsActive" Class="logical">0</P>
          <P Name="IsTabbed" Class="logical">0</P>
          <P Name="ViewObjType" Class="char">SimulinkSubsys</P>
          <P Name="LoadSaveID" Class="char">4042</P>
          <P Name="Extents" Class="double">[3730.0, 1919.0]</P>
          <P Name="ZoomFactor" Class="double">1.5</P>
          <P Name="Offset" Class="double">[-1440.8333333333333, -574.33333333333326]</P>
          <P Name="SceneRectInView" Class="double">[-1440.8333333333333, -574.33333333333326, 2486.6666666666665, 1279.3333333333333]</P>
        </Object>
        <Object ObjectID="36">
          <P Name="IsActive" Class="logical">0</P>
          <P Name="IsTabbed" Class="logical">0</P>
          <P Name="ViewObjType" Class="char">SimulinkSubsys</P>
          <P Name="LoadSaveID" Class="char">3991</P>
          <P Name="Extents" Class="double">[3730.0, 1919.0]</P>
          <P Name="ZoomFactor" Class="double">1.5</P>
          <P Name="Offset" Class="double">[-1445.8333333333333, -614.33333333333326]</P>
          <P Name="SceneRectInView" Class="double">[-1445.8333333333333, -614.33333333333326, 2486.6666666666665, 1279.3333333333333]</P>
        </Object>
        <Object ObjectID="37">
          <P Name="IsActive" Class="logical">0</P>
          <P Name="IsTabbed" Class="logical">0</P>
          <P Name="ViewObjType" Class="char">SimulinkSubsys</P>
          <P Name="LoadSaveID" Class="char">4064</P>
          <P Name="Extents" Class="double">[3730.0, 1919.0]</P>
          <P Name="ZoomFactor" Class="double">2.0</P>
          <P Name="Offset" Class="double">[-1012.5, -405.5]</P>
          <P Name="SceneRectInView" Class="double">[-1012.5, -405.5, 1865.0, 959.5]</P>
        </Object>
        <Object ObjectID="38">
          <P Name="IsActive" Class="logical">0</P>
          <P Name="IsTabbed" Class="logical">0</P>
          <P Name="ViewObjType" Class="char">SimulinkSubsys</P>
          <P Name="LoadSaveID" Class="char">3994</P>
          <P Name="Extents" Class="double">[3730.0, 1919.0]</P>
          <P Name="ZoomFactor" Class="double">1.7499999999999998</P>
          <P Name="Offset" Class="double">[-895.71428571428578, -438.00000000000011]</P>
          <P Name="SceneRectInView" Class="double">[-895.71428571428578, -438.00000000000011, 2131.4285714285716, 1096.5714285714287]</P>
        </Object>
        <Object ObjectID="39">
          <P Name="IsActive" Class="logical">0</P>
          <P Name="IsTabbed" Class="logical">0</P>
          <P Name="ViewObjType" Class="char">SimulinkSubsys</P>
          <P Name="LoadSaveID" Class="char">4041</P>
          <P Name="Extents" Class="double">[3730.0, 1919.0]</P>
          <P Name="ZoomFactor" Class="double">2.0</P>
          <P Name="Offset" Class="double">[-1012.5, -414.5]</P>
          <P Name="SceneRectInView" Class="double">[-1012.5, -414.5, 1865.0, 959.5]</P>
        </Object>
        <Object ObjectID="40">
          <P Name="IsActive" Class="logical">0</P>
          <P Name="IsTabbed" Class="logical">0</P>
          <P Name="ViewObjType" Class="char">SimulinkSubsys</P>
          <P Name="LoadSaveID" Class="char">3993</P>
          <P Name="Extents" Class="double">[3730.0, 1919.0]</P>
          <P Name="ZoomFactor" Class="double">2.0</P>
          <P Name="Offset" Class="double">[-1012.5, -454.5]</P>
          <P Name="SceneRectInView" Class="double">[-1012.5, -454.5, 1865.0, 959.5]</P>
        </Object>
        <Object ObjectID="41">
          <P Name="IsActive" Class="logical">0</P>
          <P Name="IsTabbed" Class="logical">0</P>
          <P Name="ViewObjType" Class="char">SimulinkSubsys</P>
          <P Name="LoadSaveID" Class="char">4030</P>
          <P Name="Extents" Class="double">[3535.0, 1919.0]</P>
          <P Name="ZoomFactor" Class="double">1.5</P>
          <P Name="Offset" Class="double">[-1260.5, -609.33333333333326]</P>
          <P Name="SceneRectInView" Class="double">[-1260.5, -609.33333333333326, 2356.6666666666665, 1279.3333333333333]</P>
        </Object>
        <Object ObjectID="42">
          <P Name="IsActive" Class="logical">0</P>
          <P Name="IsTabbed" Class="logical">0</P>
          <P Name="ViewObjType" Class="char">SimulinkSubsys</P>
          <P Name="LoadSaveID" Class="char">4027</P>
          <P Name="Extents" Class="double">[3535.0, 1919.0]</P>
          <P Name="ZoomFactor" Class="double">1.5</P>
          <P Name="Offset" Class="double">[-1385.5, -614.33333333333326]</P>
          <P Name="SceneRectInView" Class="double">[-1385.5, -614.33333333333326, 2356.6666666666665, 1279.3333333333333]</P>
        </Object>
        <Object ObjectID="43">
          <P Name="IsActive" Class="logical">0</P>
          <P Name="IsTabbed" Class="logical">0</P>
          <P Name="ViewObjType" Class="char">SimulinkSubsys</P>
          <P Name="LoadSaveID" Class="char">4033</P>
          <P Name="Extents" Class="double">[3535.0, 1919.0]</P>
          <P Name="ZoomFactor" Class="double">2.0</P>
          <P Name="Offset" Class="double">[-976.0, -329.5]</P>
          <P Name="SceneRectInView" Class="double">[-976.0, -329.5, 1767.5, 959.5]</P>
        </Object>
        <Object ObjectID="44">
          <P Name="IsActive" Class="logical">0</P>
          <P Name="IsTabbed" Class="logical">0</P>
          <P Name="ViewObjType" Class="char">SimulinkSubsys</P>
          <P Name="LoadSaveID" Class="char">4022</P>
          <P Name="Extents" Class="double">[3535.0, 1919.0]</P>
          <P Name="ZoomFactor" Class="double">1.0</P>
          <P Name="Offset" Class="double">[0.0, 0.0]</P>
          <P Name="SceneRectInView" Class="double">[0.0, 0.0, 0.0, 0.0]</P>
        </Object>
        <Object ObjectID="45">
          <P Name="IsActive" Class="logical">0</P>
          <P Name="IsTabbed" Class="logical">0</P>
          <P Name="ViewObjType" Class="char">SimulinkSubsys</P>
          <P Name="LoadSaveID" Class="char">4061</P>
          <P Name="Extents" Class="double">[3535.0, 1919.0]</P>
          <P Name="ZoomFactor" Class="double">2.0</P>
          <P Name="Offset" Class="double">[-1006.0, -329.5]</P>
          <P Name="SceneRectInView" Class="double">[-1006.0, -329.5, 1767.5, 959.5]</P>
        </Object>
        <Object ObjectID="46">
          <P Name="IsActive" Class="logical">0</P>
          <P Name="IsTabbed" Class="logical">0</P>
          <P Name="ViewObjType" Class="char">SimulinkSubsys</P>
          <P Name="LoadSaveID" Class="char">3996</P>
          <P Name="Extents" Class="double">[3535.0, 1919.0]</P>
          <P Name="ZoomFactor" Class="double">2.65</P>
          <P Name="Offset" Class="double">[-431.79245283018861, -251.88679245283021]</P>
          <P Name="SceneRectInView" Class="double">[-431.79245283018861, -251.88679245283021, 1333.9622641509434, 724.15094339622647]</P>
        </Object>
      </Array>
      <Array PropName="DockComponentsInfo" Type="Simulink.DockComponentInfo" Dimension="1*2">
        <Object ObjectID="47">
          <P Name="Type" Class="char">GLUE2:PropertyInspector</P>
          <P Name="ID" Class="char">Property Inspector</P>
          <P Name="Visible" Class="logical">0</P>
          <P Name="CreateCallback" Class="char"/>
          <P Name="UserData" Class="char"/>
          <P Name="Floating" Class="logical">0</P>
          <P Name="DockPosition" Class="char">Right</P>
          <P Name="Width" Class="int32">640</P>
          <P Name="Height" Class="int32">480</P>
          <P Name="Minimized" Class="char">Unset</P>
        </Object>
        <Object ObjectID="48">
          <P Name="Type" Class="char">Simulink:Editor:ReferencedFiles</P>
          <P Name="ID" Class="char">Referenced Files</P>
          <P Name="Visible" Class="logical">0</P>
          <P Name="CreateCallback" Class="char"/>
          <P Name="UserData" Class="char">{&quot;filterShowRefModels&quot;:&quot;true&quot;,&quot;filterShowRefSubs&quot;:&quot;true&quot;,&quot;filterShowOnlyDirtyFiles&quot;:&quot;false&quot;}
</P>
          <P Name="Floating" Class="logical">0</P>
          <P Name="DockPosition" Class="char">Left</P>
          <P Name="Width" Class="int32">640</P>
          <P Name="Height" Class="int32">480</P>
          <P Name="Minimized" Class="char">Unset</P>
        </Object>
      </Array>
      <P Name="WindowState" Class="char">AAAA/wAAAAD9AAAAAwAAAAAAAAC9AAAB+PwCAAAABPsAAAAWAEQAbwBjAGsAVwBpAGQAZwBlAHQAMwEAAAAxAAAB+AAAAAAAAAAA+wAAABYARABvAGMAawBXAGkAZABnAGUAdAA0AAAAAAD/////AAAAAAAAAAD7AAAAUgBHAEwAVQBFADIAIAB0AHIAZQBlACAAYwBvAG0AcABvAG4AZQBuAHQALwBHAEwAVQBFADIAIAB0AHIAZQBlACAAYwBvAG0AcABvAG4AZQBuAHQAAAAAAP////8AAABiAP////sAAABgAFMAaQBtAHUAbABpAG4AawA6AEUAZABpAHQAbwByADoAUgBlAGYAZQByAGUAbgBjAGUAZABGAGkAbABlAHMALwBSAGUAZgBlAHIAZQBuAGMAZQBkACAARgBpAGwAZQBzAAAAAAD/////AAAAiQD///8AAAABAAAAAAAAAAD8AgAAAAH7AAAAVABHAEwAVQBFADIAOgBQAHIAbwBwAGUAcgB0AHkASQBuAHMAcABlAGMAdABvAHIALwBQAHIAbwBwAGUAcgB0AHkAIABJAG4AcwBwAGUAYwB0AG8AcgAAAAAA/////wAAAawA////AAAAAwAAAAAAAAAA/AEAAAAB+/////8AAAAAAP////8AAAFZAP///wAADrgAAAe8AAAAAQAAAAIAAAABAAAAAvwAAAAA</P>
      <Array PropName="PersistedApps" Type="Cell" Dimension="0*1"/>
      <P Name="WindowUuid" Class="char">660f5269-14c6-47a3-9660-d1e47f07f231</P>
    </Object>
    <P Name="BDUuid" Class="char">9b7fae20-5dff-4f91-b4c0-b7cd8d1d4aa9</P>
  </Object>
</WindowsInfo>

__MWOPC_PACKAGE_END__
