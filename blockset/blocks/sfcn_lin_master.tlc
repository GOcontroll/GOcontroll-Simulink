%%***************************************************************************************
%% file         sfcn_lin_master.tlc
%% brief        Target Language Compiler file that contains the code generation specifics
%%              for an S-function with the same name.
%%
%%---------------------------------------------------------------------------------------
%%                          C O P Y R I G H T
%%---------------------------------------------------------------------------------------
%%  Copyright 2024 (c) by GOcontroll      http://www.gocontroll.com     All rights reserved
%%
%%---------------------------------------------------------------------------------------
%%                            L I C E N S E
%%---------------------------------------------------------------------------------------
%% Permission is hereby granted, free of charge, to any person obtaining a copy of this
%% software and associated documentation files (the "Software"), to deal in the Software
%% without restriction, including without limitation the rights to use, copy, modify, merge,
%% publish, distribute, sublicense, and/or sell copies of the Software, and to permit
%% persons to whom the Software is furnished to do so, subject to the following conditions:
%%
%% The above copyright notice and this permission notice shall be included in all copies or
%% substantial portions of the Software.
%%
%% THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
%% INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR
%% PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE
%% FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
%% OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
%% DEALINGS IN THE SOFTWARE.
%% endinternal
%%
%%***************************************************************************************
%implements  sfcn_lin_master "C"


%% add required include files
%<LibAddToCommonIncludes("GocontrollLin.h")>


%% Function: BlockTypeSetup ==========================================================
%%
%% Purpose:
%%      Code generation for configuration
%%
%function BlockTypeSetup(block, system) void

%endfunction


%% Function: Start ==========================================================
%%
%% Purpose:
%%      Code generation for initialization
%%
%function Start(block, system) Output
	GocontrollLin_InitializeInterface();
	GocontrollLin_LinMessageScheduler(%<block.RTWdata.id>,1);
%endfunction

%% Function: Update ==========================================================
%%
%% Purpose:
%%      Code generation for signal input
%%
%function Update(block, system) Output

	if (GocontrollLin_LinMessageScheduler(%<block.RTWdata.id>,2))
	{
	static uint8_t data_%<block.RTWdata.id>_%<block.RTWdata.direction>_%<block.RTWdata.dataLength>[8];
		if(%<block.RTWdata.direction> == 1)
		{
		GocontrollLin_MasterRetrieveData(%<block.RTWdata.id>,%<block.RTWdata.dataLength>,data_%<block.RTWdata.id>_%<block.RTWdata.direction>_%<block.RTWdata.dataLength>,%<block.RTWdata.check>);
			%foreach counter = 8
				%<LibBlockOutputSignal(counter, "", "", 0)> = data_%<block.RTWdata.id>_%<block.RTWdata.direction>_%<block.RTWdata.dataLength>[%<counter>];
			%endforeach
		}
		else if(%<block.RTWdata.direction> == 2)
		{
			/* prepare the data */
			%foreach counter = 8
				data_%<block.RTWdata.id>_%<block.RTWdata.direction>_%<block.RTWdata.dataLength>[%<counter>] = %<LibBlockInputSignal(counter, "", "", 0)>;
			%endforeach

		GocontrollLin_MasterSendData(%<block.RTWdata.id>,%<block.RTWdata.dataLength>,data_%<block.RTWdata.id>_%<block.RTWdata.direction>_%<block.RTWdata.dataLength>,%<block.RTWdata.check>);
		}
	}
%endfunction


%%******************************* end of sfcn_lin_master.tlc ******************************
