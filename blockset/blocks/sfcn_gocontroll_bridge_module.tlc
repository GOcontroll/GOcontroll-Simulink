%%***************************************************************************************
%% file         sfcn_gocontroll_bridge_module.tlc
%% brief        Target Language Compiler file that contains the code generation specifics
%%              for an S-function with the same name.
%%
%%---------------------------------------------------------------------------------------
%%                          C O P Y R I G H T
%%---------------------------------------------------------------------------------------
%%  Copyright 2024 (c) by GOcontroll      http://www.gocontroll.com     All rights reserved
%%
%%---------------------------------------------------------------------------------------
%%                            L I C E N S E
%%---------------------------------------------------------------------------------------
%% Permission is hereby granted, free of charge, to any person obtaining a copy of this
%% software and associated documentation files (the "Software"), to deal in the Software
%% without restriction, including without limitation the rights to use, copy, modify, merge,
%% publish, distribute, sublicense, and/or sell copies of the Software, and to permit
%% persons to whom the Software is furnished to do so, subject to the following conditions:
%%
%% The above copyright notice and this permission notice shall be included in all copies or
%% substantial portions of the Software.
%%
%% THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
%% INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR
%% PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE
%% FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
%% OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
%% DEALINGS IN THE SOFTWARE.
%%
%%***************************************************************************************
%implements  sfcn_gocontroll_bridge_module "C"

%% add required include files
%<LibAddToCommonIncludes("GocontrollBridgeModule.h")>

%% Function: BlockTypeSetup ==========================================================
%%
%% Purpose:
%%      Code generation for configuration
%%
%function BlockTypeSetup(block, system) void

%endfunction

%function BlockInstanceSetup(block, system) void
	%%check if slot is already occupied
	%assign slot = "::slot%<block.ParamSettings.moduleSlot>"
	%if EXISTS(%<slot>) == 0
		%assign %<slot> = "bridge module"
	%else
		%assign tmp = %<slot>
		%assign error = "Module slot %<block.ParamSettings.moduleSlot> is already occupied by a %<tmp>"
		%<LibBlockReportError(block, error)>
	%endif
%endfunction

%% Function: Start ==========================================================
%%
%% Purpose:
%%      Code generation for initialization
%%
%function Start(block, system) Output
	%openfile tmpBuf
	_bridgeModule bridgeModule%<block.ParamSettings.moduleSlot>;
	%closefile tmpBuf

	%assign srcFile = LibGetModelDotCFile()
	%<LibSetSourceFileSection(srcFile, "UserTop", tmpBuf)>

	bridgeModule%<block.ParamSettings.moduleSlot>.moduleSlot = %<block.ParamSettings.moduleSlot> -1;

	bridgeModule%<block.ParamSettings.moduleSlot>.configuration[0] = %<block.ParamSettings.C1freq> | (%<block.ParamSettings.C1func> <<4); %% LSB nibble contains the frequence of each channel
	bridgeModule%<block.ParamSettings.moduleSlot>.configuration[1] = %<block.ParamSettings.C2freq> | (%<block.ParamSettings.C2func> <<4);

	BridgeModule_Configuration(&bridgeModule%<block.ParamSettings.moduleSlot>);
%endfunction

%% Function: Output ==========================================================
%%
%% Purpose:
%%      Code generation for signal output
%%
%function Outputs(block, system) Output
    /* send data to 6 channel output module */
	bridgeModule%<block.ParamSettings.moduleSlot>.value[0] = %<LibBlockInputSignal(0, "", "", 0)>;
	bridgeModule%<block.ParamSettings.moduleSlot>.value[1] = %<LibBlockInputSignal(1, "", "", 0)>;

	BridgeModule_SendValues(&bridgeModule%<block.ParamSettings.moduleSlot>);
%endfunction


%% Function: Terminate ==========================================================
%%
%% Purpose:
%%      Code generation for signal output
%%
%function Terminate (block, system) Output
  /* If program receives the SIGTERM command, the bridge modules are forced to let the outputs float*/
	bridgeModule%<block.ParamSettings.moduleSlot>.configuration[0] = 0;
	bridgeModule%<block.ParamSettings.moduleSlot>.configuration[1] = 0;

	BridgeModule_Configuration(&bridgeModule%<block.ParamSettings.moduleSlot>);
%endfunction
%%******************************* end of sfcn_gocontroll_bridge_module.tlc ***************************
